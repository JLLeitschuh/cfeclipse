<?xml version="1.0" encoding="utf-8"?>
<dictionary xmlns="http://www.cfeclipse.org/version1/dictionary" 
	xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	xmlns:ns1="http://www.laszlosystems.com/2003/05/lzx" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.cfeclipse.org/version1/dictionary http://www.cfeclipse.org/version1/dictionary/dictionary.xsd"
>
	<tags>
		<!-- == A == -->
		<tag name="a" creator="3" single="false" xmlstyle="true">
         	<help>HTML hypertext link. This tag can only occur inside XHTML text 
				containers such as "text".</help>
			 <parameter name="href" type="URL" required="true">
				<help>The link target.</help>
				<values/>
			 </parameter>
			 <parameter name="target" type="String" required="false">
				<help>The value of this attribute determines where the link target will 
					be displayed. The interpretation is the same as in HTML, where the 
					"current frame" is the frame containing the LZX application. The 
					value must be a name beginning with an alphabetic character.
				</help>
				<values>
					<value option="_blank" />
					<value option="_parent"/>
					<value option="_self"/>
					<value option="_top"/>
				</values>
			</parameter>
		</tag>
		
		<!-- == ALERT == -->
		<tag name="alert" creator="3" single="false" xmlstyle="true">
			 <help>A simple subclass of modaldialog, alert provides a modal alert box 
				that displays its text attribute (or content) and an OK button. (If you 
				need to display more than text in an alert, use modaldialog itself).
				</help>
			 <parameter name="button1" type="String" required="false">
				<help>Alert shows only this button, if button2 isn't set. Default: "OK". 
					You may specify a different string to change the text of the button.
					</help>
				<values/>
			 </parameter>
			 <parameter name="button2" type="String" required="false">
				<help>If a string is set for this attribute, a second button will be 
					shown to the left of the first with this text.</help>
				<values />
			 </parameter>
			 <parameter name="maxtextwidth" type="Any" required="false">
				<help>The max length of a line of text before it wraps. Default: 1/3 of 
					the parent's width - width of window dressing and margin.</help>
				<values />
			 </parameter>
			 <parameter name="onresult" type="Any" required="false">
				<help>This event is sent when a button is pressed. Use this to check the 
					result value.</help>
				<values />
			 </parameter>
			 <parameter name="text_x" type="Numeric" required="false">
				<help>The x position of the button text. Default: 0 (left).</help>
				<values />
			 </parameter>
			 <parameter name="text_y" type="Numeric" required="false">
				<help>The y position of the button text. Default: 0 (top).</help>
				<values />
			</parameter>
		</tag>
		
		<!-- == ATTRIBUTE == -->
		<tag name="attribute" creator="3" single="false" xmlstyle="true">
         	<help>Sets an attribute of the object that contains it.</help>
			 <parameter name="name" type="String" required="true">
				<help>The name of the attribute.</help>
				<values/>
			 </parameter>
			 <parameter name="value" type="String" required="false">
				<help>The initial value of the attribute. The type of this value is 
					specified by the value of the type attribute; if that attribute is 
					not present, it's the type of this attribute in this element's tag. 
					The attribute is given this value when the element is created.</help>
				<values/>
			 </parameter>
         	<parameter name="when" type="String" required="false">
				<help>When the initial value expression is to be evaluated. One of:
					* immediately 
					evaluate when the enclosing element is defined  (must be a constant)
					* once
					evaluate when the enclosing element is  initialized
					* always 
					update whenever the value of the expression changes
					
					The default is when="immediately.
				</help>
				<values>
				   <value option="immediately"/>
				   <value option="once"/>
				   <value option="always"/>
				</values>
			 </parameter>
			 <parameter name="init" type="Function" required="false">
				<help>As an alternative to the value attribute, an expression may be 
					supplied in the init attribute. The attribute is given the value of 
					the expression when the element is initialized.</help>
				<values/>
			 </parameter>
         	<parameter name="constraint" type="Function" required="false">
				<help>** Deprecated since 1.1 Use value with when='always' instead. **
					As an alternative to the value attribute, an expression may be 
					supplied in the constraint attribute. The attribute will be 
					constrained to the value of the expression at all times.</help>
				<values/>
			 </parameter>
			 <parameter name="type" type="String" required="false">
				<help>The type of the attribute. This determines how the value is parsed. 
					Attributes of type string are automatically quoted if 
					when="immediate", for any other value of when, a literal string 
					would have to be quoted to be used as a value.</help>
				<values>
				   <value option="boolean"/>
				   <value option="color"/>
				   <value option="expression"/>
				   <value option="number"/>
				   <value option="size"/>
				   <value option="string"/>
				   <value option="text"/>
				   <value option="html"/>
				</values>
			 </parameter>
			 <parameter name="required" type="boolean" required="false">
				<help>True if this is a required attribute.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			 </parameter>
			 <parameter name="setter" type="Function" required="false">
				<help>Code that is executed when setAttribute is used to set the value 
					of this attribute. This code is executed within a context in which 
					the variable with this attribute's name is bound to the value 
					passed to setAttribute.</help>
				<values/>
			 </parameter>
         	<parameter name="onset" type="Function" required="false">
				<help>** Deprecated since 1.1 Use setter instead. **
					Code that is executed when setAttribute is used to set the value of 
					this attribute. This code is executed within a context in which the 
					variable with this attribute's name is bound to the value passed to 
					setAttribute.</help>
				<values/>
			</parameter>
		</tag>
		
		<!-- == AUDIO == -->
		<tag name="audio" creator="3" single="false" xmlstyle="true">
			<help>Warning: This tag is obsolete. 
				Imports an audio file. Its functionality has been replaced by the 
				"resource" tag.</help>
			<parameter name="id" type="String" required="false">
				<help>A unique identifier for this element. Can be used as a global 
					variable name in JavaScript code.</help>
				<values/>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name of a variable that will be set to this object when the 
					application is started. If this element is directly within a 
					"canvas" or "library" element, the global variable and the canvas 
					property with this name will be set to this object. If this element 
					is within another object, that object's property with this name 
					will be set to this object.</help>
				<values/>
			</parameter>
			<parameter name="src" type="URL" required="false">
				<help>The path of a file that contains the source for this object.</help>
				<values/>
			</parameter>
		</tag>
		
		<!-- == B == -->
		<tag name="b" creator="3" single="false" xmlstyle="true">
			<help>Bold Text. HTML bold character markup. This tag can only occur 
				inside XHTML text containers such as "text" and "button".</help>
		</tag>
		
		<!-- == BR == -->
		<tag name="br" creator="3" single="true" xmlstyle="true">
			<help>Line break. HTML line break. This tag can only occur inside 
				XHTML text containers such as "text".</help>
		</tag>
		
		<!-- == BUTTON == -->
		<tag name="button" creator="3" single="false" xmlstyle="true">
			<help>The button class provides a simple pushbutton.
				JavaScript: button Extends Basebutton 
				The button tag provides a simple button. The button is rectangular 
				and typically displays a text label describing its action. The 
				button adjusts to fit the label.</help>
			<parameter name="text_padding_x" type="Numeric" required="false">
				<help>the amount of space to add horizontally when sizing button to 
					its text. default: 11</help>
				<values/>
			</parameter>
			<parameter name="text_padding_y" type="Numeric" required="false">
				<help>the amount of space to add vertically when sizing button to 
					its text. default: 4</help>
				<values/>
			</parameter>
			<parameter name="text_x" type="Numeric" required="false">
				<help>the x position of the button text. default: centered</help>
				<values/>
			</parameter>
			<parameter name="text_y" type="Numeric" required="false">
				<help>the y position of the button text. default: centered</help>
				<values/>
			</parameter>
			<!-- base button -->
			<parameter name="disabledResourceNumber" type="Numeric" required="false">
				<help>The resource for the disabled state, default: 4. Use 0 if 
					there are the resource has at least 4 frames, but there is no 
					disabled state.</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="downResourceNumber" type="Numeric" required="false">
				<help>The resource for the mouse down state, default: 3. Use 0 if 
					the resources has at least 3 frames, but there is no down state.
				</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="maxframes" type="Numeric" required="false">
				<help>The maximum number of frames to use, defaults to the number of 
					frames for the resoruce associated with this view. This is 
					useful for a subclass has no resource for this view. Default is 
					the total frames of basebutton.
				</help>
				<values />
			</parameter>
			<parameter name="normalResourceNumber" type="Numeric" required="false">
				<help>The resource for the mouse up state, and initial state of the 
					button.</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="onresourceviewcount" type="Any" required="false">
				<help>This event is sent when the resourceviewcount changes.</help>
				<values />
			</parameter>
			<parameter name="overResourceNumber" type="Numeric" required="false">
				<help>The resource for the mouse over state, default: 2. Use 0 if 
					the resource has at least 2 frames, but there is no over state.
				</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="reference" type="Function" required="false">
				<help>Where to send mouse events (the view that will be "clickable"), 
					default: this.</help>
				<values />
			</parameter>
			<parameter name="resourceviewcount" type="Numeric" required="false">
				<help>The first 'n' subviews that will respond to mouseevents by 
					changing the frame number of their resource.</help>
				<values />
			</parameter>
			<parameter name="respondtomouseout" type="boolean" required="false">
				<help>If this button does not respond to onmouseout or onmousedragout 
					events, set this flag to false. Default: true.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- 
				BASE COMPONENT 
			-->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- == CANVAS == -->
		<tag name="canvas" creator="3" single="false" xmlstyle="true">
         	<help>The top-most view in a Laszlo application.
				JavaScript: LzCanvas Extends View 
				The canvas is the container for all views within an application.
				The LzCanvas class represents the viewable area of the application. 
				There is one instance of LzCanvas, named canvas. The canvas contains 
				all views within an application.</help>
			 <parameter name="debug" type="boolean" required="false">
				<help>If true, the application is compiled with debugging enabled. 
					See the Debugging chapter of the Guide for more information 
					about debugging.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="libraries" type="String" required="false">
				<help>A list of names for libraries that are included in the 
					application.</help>
				<values/>
			</parameter>
			<parameter name="maxtextwidth" type="String" required="false">
				<help>If present, specifies the maximum width in pixels of any 
					output text field. Text which extends beyond this width will be 
					clipped. If this attribute is omitted, it defaults to the canvas 
					width.</help>
				<values/>
			</parameter>
			<parameter name="maxtextheight" type="String" required="false">
				<help>If present, specifies the maximum height in pixels of any 
					output text field. Text which extends beyond this height will 
					be clipped. If this attribute is omitted, it defaults to the 
					canvas height.</help>
				<values/>
			</parameter>
			<parameter name="title" type="String" required="false">
				<help>The string that is used in the browser window.</help>
				<values/>
			</parameter>	
			<parameter name="validate" type="boolean" required="false">
				<help>If false, disables validation against the schema during 
					compilation</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="version" type="String" required="false">
				<help>The version for this lzx app. If set below the current 
					version, may enable backwards compatible behaviors.</help>
				<values/>
			</parameter>
			<!-- VIEW -->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- CHECKBOX -->
		<tag name="checkbox" creator="3" single="true" xmlstyle="true">
			<help>The checkbox tag provides a simple toggle button.
				JavaScript: checkbox Extends Baseformitem 
				The checkbox tag provides a simple toggle  button that represents a 
				value of true or  false. It has a disabled state where it does not 
				respond to mouse events when enabled=false.</help>
			<!-- BBASE FORM ITEM -->
			<!-- BASE VALUE COMPONENT -->
			<parameter name="value" type="Any" required="false">
				<help>the value that this item represents. When selected, the 
					parent selection group's value will be set to this value. Most 
					subclasses require you to call getValue() to get the value of 
					the attribute.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>	
		
		<!-- == CLASS == -->
		<tag name="class" creator="3" single="false" xmlstyle="true">
         	<help>Defining your own tags.
				The class tag defines a new tag, which be used anywhere in the 
				source file where a built-in tag such as view or layout can be used.
				Defines a new XML tag name, that can be used in the remainder of  
				the application source. An element whose name is this tag name 
				will inherit the attributes and content of this definition.</help>
			<parameter name="name" type="String" required="true">
				<help>The name of a new tag that this element defines.</help>
				<values/>
			</parameter>
			<parameter name="extends" type="String" required="false">
				<help>The name of the tag that this tag extends.</help>
				<values/>
			</parameter>
		</tag>
		
		<!-- == COMBOB)X == -->
		<tag name="combobox" creator="3" single="false" xmlstyle="true">
			<help>combobox displays a dropdown list of selectable items.
				JavaScript: combobox Extends Basecombobox 
				A combobox is a common UI element for displaying a pop-up list 
				associated with a text field. The selected text of the combobox is 
				displayed within the text field. This field is an LzInputText field 
				if the editable of the combobox is true (the default), or a static 
				LzText field if it is false.</help>
			<parameter name="text" type="String" required="false">
				<help></help>
				<values/>
			</parameter>
			<!-- base combo box -->
			<parameter name="attachoffset" type="Numeric" required="false">
				<help>The vertical offset of the floatinglist attached to this 
					combobox.</help>
				<values />
			</parameter>
			<parameter name="autoscrollbar" type="boolean" required="false">
				<help>Whether a scrollbar should automatically show up when there 
					are more items than shownitems.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="bordersize" type="Numeric" required="false">
				<help>The border size ( in pixels ) of the popup list.</help>
				<values />
			</parameter>
			<parameter name="dataoption" type="String" required="false">
				<help>One of "lazy", "resize", "pooling", "none".</help>
				<values>
					<value option="lazy"/>
					<value option="resize"/>
					<value option="pooling"/>
					<value option="none"/>
				</values>
			</parameter>
			<parameter name="defaultselection" type="Numeric" required="false">
				<help>The number of the item that is initially selected. This 
					overrides the value defined in the defaulttext attribute</help>
				<values />
			</parameter>
			<parameter name="defaulttext" type="String" required="false">
				<help>The text that appears in the text field when no item is 
					selected.</help>
				<values />
			</parameter>
			<parameter name="editable" type="boolean" required="false">
				<help>Make the text field of this combobox editable.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isopen" type="boolean" required="false">
				<help>Indicates whether or not the popup list is showing.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="itemclassname" type="String" required="false">
				<help>The class that is used to create an item in the list when 
					itemdatapath is assigned.</help>
				<values />
			</parameter>
			<parameter name="ondefaultselection" type="Any" required="false">
				<help>This event is sent when the default selection is set.</help>
				<values />
			</parameter>
			<parameter name="shownitems" type="Numeric" required="false">
				<help>Sets the height of the combobox to show 'n' items.</help>
				<values />
			</parameter>
			<parameter name="spacing" type="Numeric" required="false">
				<help>The spacing size ( in pixels ) between items in the pop-up 
					list.</help>
				<values />
			</parameter>
			<parameter name="text_width" type="Numeric" required="false">
				<help>the width the text. default: combowidth - 19</help>
				<values />
			</parameter>
			<parameter name="text_x" type="Numeric" required="false">
				<help>the x position of the text. default: 2</help>
				<values />
			</parameter>
			<parameter name="text_y" type="Numeric" required="false">
				<help>the y position of the text. default: 2</help>
				<values />
			</parameter>
			<!-- BASE FROM ITEM -->
			<parameter name="value" type="Any" required="false">
				<help>the value that this item represents. When selected, the 
					parent selection group's value will be set to this value. Most 
					subclasses require you to call getValue() to get the value of 
					the attribute.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- == COMMAND == -->
		<tag name="command" creator="3" single="false" xmlstyle="true">
			<help>An element that sends events in response to keyboard input.
				JavaScript: LzCommand Extends Node </help>
			<parameter name="active" type="boolean" required="false">
				<help>true if the command is currently active. The default is true.</help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="key" type="Function" required="false">
				<help>Use setAttribute or setKeys to set the group  of keys 
					associated with this command from JavaScript. 
					For example: setAttribute('key', ['a', 'shift']) or 
					setKeys(['j', 'control'])</help>
				<values/>
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values/>
			</parameter>
			<!-- NODE -->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- CONNECTION -->
		<tag name="connection" creator="3" single="false" xmlstyle="true">
			<help>A connection manager to create a persistent connection and an 
				authenticated session.
				JavaScript: LzConnection Extends Datasource 
				The connection tag instantiates a connection manager object that 
				handles asynchronous messages sent from the Laszlo Presentation 
				Server. Use the the LzConnection.connect method to establish a 
				persistent connection and disconnect to close it down.
			</help>
			<parameter name="authenticator" type="String" required="false">
				<help>Class name of server-side java authenticator</help>
				<values/>
			</parameter>
			<parameter name="authparam" type="String" required="false">
				<help>Authenticator parameters.</help>
				<values/>
			</parameter>
			<parameter name="group" type="String" required="false">
				<help>Connection group name.</help>
				<values/>
			</parameter>
			<parameter name="heartbeat" type="Numeric" required="false">
				<help>The interval value in milliseconds that the server will send 
					a message to the application to ensure the connection is kept 
					alive by the client. The default value of a heartbeat is 5000 
					milliseconds.</help>
				<values/>
			</parameter>
			<parameter name="onconnect" type="Function" required="false">
				<help>The onconnect script is executed when the application is 
					connected.</help>
				<values/>
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the application receives a 
					persistent connection message.</help>
				<values/>
			</parameter>
			<parameter name="ondisconnect" type="Function" required="false">
				<help>The ondisconnect script is executed whenever the application 
					disconnects.</help>
				<values/>
			</parameter>
			<parameter name="onerror" type="Function" required="false">
				<help>The onerror script is executed whenever there's a connection 
					failure.</help>
				<values/>
			</parameter>
			<parameter name="ontimeout" type="Function" required="false">
				<help>The ontimeout script is executed whenever a timeout is 
					encountered with the persistent connection.</help>
				<values/>
			</parameter>
			<parameter name="onuserdisconnect" type="Function" required="false">
				<help>The onuserdisconnect script is executed whenever a user 
					disconnects. See the receiveuserdisconnect attribute.</help>
				<values/>
			</parameter>
			<parameter name="receiveuserdisconnect" type="boolean" required="false">
				<help>Tells server to send an onuserdisconnect event every time a 
					user disconnects. Default is false.</help>
				<values/>
			</parameter>
			<parameter name="secure" type="boolean" required="false">
				<help>If true, creates a secure persistent connection through https. 
					Otherwise the connection uses http.</help>
				<values/>
			</parameter>
			<parameter name="secureport" type="Numeric" required="false">
				<help>If true, creates a secure persistent connection through https. 
					Otherwise the connection uses http.</help>
				<values/>
			</parameter>
			<!-- NODE -->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- connectiondatasource -->
		<tag name="connectiondatasource" creator="3" single="false" xmlstyle="true">
			<help>The connection datasource to receive and send messages through the  persistent connection.
				JavaScript: LzConnectionDatasource Extends Datasource 
				Use the connectiondatasource tag to declare the datasets that 
				handle will handle the incoming data from a connection. Unlike the 
				connection tag, the connectiondatasource tag can be declared in 
				libraries.
			</help>
			<parameter name="onconnect" type="Function" required="false">
				<help>The onconnect script is executed when the application is 
					connected.</help>
				<values/>
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the application receives a 
					persistent connection message.</help>
				<values/>
			</parameter>
			<parameter name="ondisconnect" type="Function" required="false">
				<help>The ondisconnect script is executed whenever the application 
					disconnects.</help>
				<values/>
			</parameter>
			<parameter name="onerror" type="Function" required="false">
				<help>The onerror script is executed whenever there's a connection
					failure.</help>
				<values/>
			</parameter>
			<parameter name="ontimeout" type="Function" required="false">
				<help>The ontimeout script is executed whenever a timeout is 
					encountered with the persistent connection.</help>
				<values/>
			</parameter>
			<parameter name="onuserdisconnect" type="Function" required="false">
				<help>The onuserdisconnect script is executed whenever a user 
					disconnects. See the receiveuserdisconnect attribute.</help>
				<values/>
			</parameter>
			<!-- NODE -->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- == LAYOUT == -->
		<tag name="layout" creator="3" single="false" xmlstyle="true">
			<help>Abstract layout base class.
				JavaScript: LzLayout Extends Node 
				This layout class is the base class that all other layouts — such 
				as, for example simplelayout and resizelayout — extend.
				A layout arranges the views within the element that it is attached 
				to. simplelayout is one example of a basic extension of this layout 
				object</help>
			<parameter name="locked" type="boolean" required="false">
				<help>Set to true if layout is locked from updates.</help>
				<values/>
			</parameter>
			<!-- NODE -->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- == constantboundslayout == -->
		<tag name="constantboundslayout" creator="3" single="false" xmlstyle="true">
			<help>Arranges a set of views to a constant 'x' or 'y' value with a 
				bounding rect
				JavaScript: constantboundslayout Extends Layout 
				A view can have an xoffset and a yoffset. These offsets allow the 
				view to be placed relative to the point (xoffset, yoffset). 
				(Otherwise the view is placed using the view's top left corner as a 
				reference point.) If a view has an offset, then this will effect how 
				layouts position it relative to other views.</help>
			<parameter name="axis" type="String" required="false">
				<help>The axis in which this layout operates either 'x' or 'y'.</help>
				<values/>
			</parameter>
			<parameter name="value" type="Any" required="false">
				<help>The constant value that is applied to the attribute ( defined 
					in 'axis' as 'x' or 'y' ) of each subview in the layout.</help>
				<values/>
			</parameter>
			<!-- LAYOUT -->
			<parameter name="locked" type="boolean" required="false">
				<help>Set to true if layout is locked from updates.</help>
				<values/>
			</parameter>
			<!-- NODE -->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- == constantlayout == -->
		<tag name="constantlayout" creator="3" single="false" xmlstyle="true">
			<help>Arranges a set of views to a constant 'x' or 'y' value.
				JavaScript: constantlayout Extends Layout 
				constantlayout extends LzLayout, and therefore it is responsible 
				for arranging all of the subviews for the view that it is attached 
				to. The attributes of a view that constantlayout effects are the x 
				and y values, and as its name implies constantlayout sets all of 
				the subviews to the same value.</help>
			<parameter name="axis" type="String" required="false">
				<help>The axis in which this layout operates either 'x' or 'y'.</help>
				<values/>
			</parameter>
			<parameter name="value" type="Any" required="false">
				<help>The constant value that is applied to the attribute ( defined 
					in 'axis' as 'x' or 'y' ) of each subview in the layout.</help>
				<values/>
			</parameter>
			<!-- LAYOUT -->
			<parameter name="locked" type="boolean" required="false">
				<help>Set to true if layout is locked from updates.</help>
				<values/>
			</parameter>
			<!-- NODE -->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- == datapointer == -->
		<tag name="datapointer" creator="3" single="false" xmlstyle="true">
			<help>A cursor in a dataset.
				JavaScript: LzDatapointer Extends Node 
				A datapointer is an object that represents a pointer to a node in a 
				LzDataset. The datapointer can be repositioned using either cursor 
				movements calls such as selectNext, or by running an XPath request 
				via setXPath.</help>
			<parameter name="ondata" type="Function" required="false">
				<help></help>
				<values/>
			</parameter>
			<parameter name="onerror" type="Function" required="false">
				<help></help>
				<values/>
			</parameter>
			<parameter name="ontimeout" type="Function" required="false">
				<help></help>
				<values/>
			</parameter>
			<parameter name="p" type="Any" required="false">
				<help>The LzDataNode that the datapointer is pointing to. Calling 
					setAttribute on attribute calls LzDatapointer.setPointer.</help>
				<values/>
			</parameter>
			<parameter name="rerunxpath" type="boolean" required="false">
				<help>If true, re-evaluate the XPath expression when the dataset is 
					edited. Defaults to false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="spacing" type="Numeric" required="false">
				<help>This controls the spacing between elements if lazy 
					replication is true.</help>
				<values/>
			</parameter>
			<parameter name="xpath" type="String" required="false">
				<help></help>
				<values/>
			</parameter>
			<!-- NODE -->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>		
		
		<!-- == datapath == -->
		<tag name="datapath" creator="3" single="false" xmlstyle="true">
			<help>The binder between data and nodes.
				JavaScript: LzDatapath Extends Datapointer 
				Datapaths are used to merge data hierarchies with the hierarchy of 
				a Laszlo application. This is done using the the XPath syntax 
				supported by LzDatapointer. When a node is given a datapath 
				attribute, a datapath with the given value as its XPath is created. 
				If the datapath retrieves a node (i.e. it doesn't terminate in an 
				attribute getter or a () operator) then the node is mapped to that 
				data context and all child nodes will implicitly share the 
				datacontext, but no further action is taken.</help>
			<parameter name="pooling" type="boolean" required="false">
				<help>This attribute applies to datapaths which match multiple 
					nodes and force replication. See the  section on Pooling in the 
					Guide for information about the use of this attribute.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="pooling" type="String" required="false">
				<help>Determines whether to use normal or lazy replication, if the 
					datapath matches more than one node.  See the section on 
					Replication  in the Guide for information about the use of 
					this attribute.</help>
				<values>
					<value option="normal"/>
					<value option="lazy"/>
					<value option="resize"/>
				</values>
			</parameter>
			<parameter name="sortorder" type="String" required="false">
				<help>The order to use to sort the dataset if replication occurs. 
					One of ascending or descending to use built in dictionary sort, 
					or a function which compares two strings and returns 1 if the 
					strings  are in order, 0 if they are the same, and  -1 if they 
					are out of order.</help>
				<values>
					<value option="ascending"/>
					<value option="descending"/>
				</values>
			</parameter>
			<parameter name="sortpath" type="String" required="false">
				<help>An XPath to use to obtain the sort key for  sorting if 
					replication occurs.</help>
				<values />
			</parameter>
			<!-- == datapointer == -->
			<parameter name="ondata" type="Function" required="false">
				<help></help>
				<values/>
			</parameter>
			<parameter name="onerror" type="Function" required="false">
				<help></help>
				<values/>
			</parameter>
			<parameter name="ontimeout" type="Function" required="false">
				<help></help>
				<values/>
			</parameter>
			<parameter name="p" type="Any" required="false">
				<help>The LzDataNode that the datapointer is pointing to. Calling 
					setAttribute on attribute calls LzDatapointer.setPointer.</help>
				<values/>
			</parameter>
			<parameter name="rerunxpath" type="boolean" required="false">
				<help>If true, re-evaluate the XPath expression when the dataset is 
					edited. Defaults to false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="spacing" type="Numeric" required="false">
				<help>This controls the spacing between elements if lazy 
					replication is true.</help>
				<values/>
			</parameter>
			<parameter name="xpath" type="String" required="false">
				<help></help>
				<values/>
			</parameter>
			<!-- NODE -->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- == selectionmanager == -->
		<tag name="selectionmanager" creator="3" single="false" xmlstyle="true">
			<help>Manages selection among a series of objects.
				JavaScript: LzSelectionManager Extends Node 
				Selection managers manage selection among a series of objects. They 
				enable standard control and shift click modifiers to aid range 
				selection. Selection managers provide methods to manipulate, add to 
				and clear the selection.</help>
			<parameter name="toggle" type="boolean" required="false">
				<help>If true, a re-selected element will lose the selection.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- NODE -->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- == dataselectionmanager == -->
		<tag name="dataselectionmanager" creator="3" single="false" xmlstyle="true">
			<help>A selection manager for views generated by a lazily-replicated 
				datapath
				JavaScript: LzDataSelectionManager Extends Selectionmanager 
				If a datapath's datapath.replication attribute is set to "lazy", 
				then a match to multiple nodes will create an 
				LzLazyReplicationManager instead of an LzReplicationManager. The 
				lazy replication manager creates only enough replicated views in 
				order to display the data, so there is not a view for each data 
				node. This enables the display of very large datasets.</help>
			<parameter name="toggle" type="boolean" required="false">
				<help>If true, a re-selected element will lose the selection.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- NODE -->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- == dataset == -->
		<tag name="dataset" creator="3" single="false" xmlstyle="true">
			<help>An in-memory xml-style data hierarchy.
				JavaScript: LzDataset Extends LzDataElement 
				A dataset tag within a canvas or library element defines a local 
				dataset. The name of the dataset is used in the datapath attribute 
				of a view.
				The src attribute of the dataset element specifies whether the data 
				is compiled into the application or fetched at runtime</help>
			<parameter name="acceptencodings" type="boolean" required="false">
				<help>When true, the server will accept  encoded responses for this 
					request. Encoded responses require more work for the LPS 
					(encoding the  response) and client (decoding the response) in 
					trade for lower network bandwidth usage.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="autorequest" type="boolean" required="false">
				<help>** Deprecated since 1.1 Use the request attribute instead. **</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="getresponseheaders" type="boolean" required="false">
				<help>When true, the server will encode and  send the HTTP response 
					headers along with the data (defaults to false).</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>Sent when new data arrives for this dataset</help>
				<values />
			</parameter>
			<parameter name="onerror" type="Function" required="false">
				<help>Sent when an error occurs for this dataset</help>
				<values />
			</parameter>
			<parameter name="ontimeout" type="Function" required="false">
				<help>Sent when a request times out</help>
				<values />
			</parameter>
			<parameter name="port" type="Numeric" required="false">
				<help>** Deprecated since 1.1 Use the secureport attribute instead. **
					Sets the port number to use to connect to the LPS for a secure 
					connection.</help>
				<values />
			</parameter>
			<parameter name="querystring" type="String" required="false">
				<help>A string to be appended to the request that the dataset makes.</help>
				<values />
			</parameter>
			<parameter name="queuerequests" type="boolean" required="false">
				<help>If true, the client should ensure that each request is made, 
					rather than just making and reporting the last request.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="request" type="boolean" required="false">
				<help>If true, the datset will make a request when it  inits. The 
					default for this is false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="secure" type="boolean" required="false">
				<help>specifies whether or not the app-LPS connection is secure</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="secureport" type="Numeric" required="false">
				<help>Sets the port number to use to connect to the LPS for a secure 
					connection.</help>
				<values />
			</parameter>
			<parameter name="src" type="String" required="false">
				<help>The source for requests made by this dataset.</help>
				<values />
			</parameter>
			<parameter name="type" type="String" required="false">
				<help>If set to "http", then the dataset will interpret its src 
					attribute as an url from which to load its content, rather than 
					as a static xml file to inline.</help>
				<values />
			</parameter>
			<!-- NODE -->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- == datasource == -->
		<tag name="datasource" creator="3" single="false" xmlstyle="true">
			<help>A way of representing a server-side HTTP datasource.
				JavaScript: LzHTTPDatasource Extends Datasource 
				The datasource tag is an optional way of representing a server side 
				datasource. The datasource's parameters can specify ways in which 
				the client is will make backend requests. Also, more than one 
				dataset can share a datasource, and the datasource can be used to 
				control session related information.</help>
			<parameter name="port" type="Numeric" required="false">
				<help>** Deprecated since 1.1 ** Use the dataset secureport 
					attribute instead.</help>
				<values />
			</parameter>
			<!-- NODE -->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === DATEPICKER === -->
		<tag name="datepicker" creator="3" single="false" xmlstyle="true">
			<help>A simple date picker
				JavaScript: datepicker Extends Basedatepicker 
				Datepicker is a simple component that makes it easy for users to 
				select dates.
			</help>
			<parameter name="startAsIcon" type="boolean" required="false">
				<help>Set to true to initially show the datepicker as an icon, 
					otherwise set to false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="dayclass" type="Any" required="false">
				<help>The dayclass to use for this basedatepicker</help>
				<values />
			</parameter>
			<parameter name="earliestdate" type="Any" required="false">
				<help>The earliest date that is selectable.</help>
				<values />
			</parameter>
			<parameter name="latestdate" type="Any" required="false">
				<help>The latest date that is selectable.</help>
				<values />
			</parameter>
			<parameter name="selecteddate" type="Any" required="false">
				<help>The Date that is currently selected.</help>
				<values />
			</parameter>
			<parameter name="selecteddatepickerday" type="Any" required="false">
				<help>The datepickerday which has been selected.</help>
				<values />
			</parameter>
			<parameter name="showingdate" type="DateTime" required="false">
				<help>A Date object which represents the month to be shown.</help>
				<values />
			</parameter>
			<parameter name="showingmonth" type="Numeric" required="false">
				<help>The month that is currently showing in the datepicker.</help>
				<values />
			</parameter>
			<parameter name="showingyear" type="Numeric" required="false">
				<help>The year that is currently showing in the datepicker.</help>
				<values />
			</parameter>
			<parameter name="weekclass" type="Any" required="false">
				<help>The weekclass to use for this basedatepicker</help>
				<values />
			</parameter>
			<parameter name="xinset" type="Numeric" required="false">
				<help>The number if pixels from this.x to show the datepicker days</help>
				<values />
			</parameter>
			<parameter name="yinset" type="Numeric" required="false">
				<help>The number if pixels from this.y to show the datepicker days</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- debug -->
		<tag name="debug" creator="3" single="false" xmlstyle="true">
			<help>Enable debugging for the application
				JavaScript: Debug 
				The debug tag controls the initial appearance and options of the 
				debugger when debugging is enabled. Debugging is enabled either by 
				including the debug="true" option on the canvas tag, or adding the 
				?debug=true query argument to the application's URL.</help>
			<parameter name="font" type="String" required="false">
				<help>The debugger window font</help>
				<values/>
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>The point size of the font</help>
				<values/>
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the debugger window.</help>
				<values/>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the debugger window.</help>
				<values/>
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the debugger window.</help>
				<values/>
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position of the debugger window.</help>
				<values/>
			</parameter>
		</tag>
		
		<!-- == STATE == -->
		<tag name="state" creator="3" single="false" xmlstyle="true">
			<help>A description of an instance hierarchy that can be applied and 
				removed at runtime.
				JavaScript: LzState Extends Node 
				A state is an object that holds its children and attributes for 
				creation or application at a later time — when the state's apply 
				method is called. In addition to representing visual state by 
				adding and removing children from a view, states are often used to 
				control constraints which are applied and removed at different 
				times during the run of an application.</help>
			<parameter name="apply" type="boolean" required="false">
				<help>By default, states are not applied. It is often convenient to 
					assign this attribute as a constraint in the tag. For example: 
					state name="mystate" apply="parent.opened" will apply the state
					if parent.opened is true.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="pooling" type="boolean" required="false">
				<help>If true, the state will merely hide any views it has created 
					when it is removed, instead of destroying them.</help>
				<values/>
			</parameter>
			<parameter name="onapply" type="Function" required="false">
				<help>Script that is executed when the state is applied to its 
					parent.</help>
				<values/>
			</parameter>
			<parameter name="onremove" type="Function" required="false">
				<help>Script that is executed when the state is removed from its 
					parent.</help>
				<values/>
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- == DRAGSTATE == -->
		<tag name="dragstate" creator="3" single="false" xmlstyle="true">
			<help>A standard dragging behavior.
				JavaScript: dragstate Extends State 
				The dragstate is a class which can be used to make any view 
				draggable. When the dragstate is applied, the view with the 
				dragstate will follow the mouse.</help>
			<parameter name="drag_axis" type="String" required="false">
				<help>'x', 'y' or 'both' , default: both</help>
				<values>
					<value option="x"/>
					<value option="y"/>
					<value option="both"/>
				</values>
			</parameter>
			<parameter name="drag_max_x" type="Numeric" required="false">
				<help>the maximum value for the x attribute. Default : null, 
					no maximum</help>
				<values />
			</parameter>
			<parameter name="drag_max_y" type="Numeric" required="false">
				<help>the maximum value for the y attribute. Default : null, 
					no maximum</help>
				<values />
			</parameter>
			<parameter name="drag_min_x" type="Numeric" required="false">
				<help>the minimum value for the x attribute. Default : null, 
					no minimum</help>
				<values />
			</parameter>
			<parameter name="drag_min_y" type="Numeric" required="false">
				<help>the minimum value for the y attribute. Default : null, 
					no minimum</help>
				<values />
			</parameter>
			<!-- state -->	
			<parameter name="apply" type="boolean" required="false">
				<help>By default, states are not applied. It is often convenient to 
					assign this attribute as a constraint in the tag. For example: 
					state name="mystate" apply="parent.opened" will apply the state
					if parent.opened is true.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="pooling" type="boolean" required="false">
				<help>If true, the state will merely hide any views it has created 
					when it is removed, instead of destroying them.</help>
				<values/>
			</parameter>
			<parameter name="onapply" type="Function" required="false">
				<help>Script that is executed when the state is applied to its 
					parent.</help>
				<values/>
			</parameter>
			<parameter name="onremove" type="Function" required="false">
				<help>Script that is executed when the state is removed from its 
					parent.</help>
				<values/>
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === EDITTEXT === -->
		<tag name="edittext" creator="3" single="false" xmlstyle="true">
			<help>text input component with lz components look and feel
				JavaScript: edittext Extends Baseformitem 
				The edittext tag provides a text input field which has a look and 
				feel to match the lz component set. It can accept any inputtext
				attribute.
			</help>
			<parameter name="multiline" type="boolean" required="false">
				<help>Set to true for multiple lines, default: false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="password" type="boolean" required="false">
				<help>Set to true for a password field. Text will appear as ****, 
					default: false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="resizable" type="boolean" required="false">
				<help>Set to true if you plan to change the width or height of the 
					component at run-time, default: false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- BASE VALUE COMPONENT -->
			<parameter name="value" type="Any" required="false">
				<help>the value that this item represents. When selected, the 
					parent selection group's value will be set to this value. Most 
					subclasses require you to call getValue() to get the value of 
					the attribute.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- == FACE == -->
		<tag name="face" creator="3" single="false" xmlstyle="true">
			<help>Defines a font face or style within the font family that the outer 
				element defines.</help>
			<parameter name="src" type="URL" required="false">
				<help>The path of a file that contains the source for this object.</help>
				<values/>
			</parameter>
			<parameter name="style" type="String" required="false">
				<help>The path of a file that contains the source for this object.</help>
				<values>
					<value option="bold"/>
					<value option="italic"/>
					<value option="bold italic"/>
					<value option="italic bold"/>
					<value option="plain"/>
				</values>
			</parameter>
		</tag>
		
		<!-- === LIST === -->
		<tag name="list" creator="3" single="false" xmlstyle="true">
			<help>contains listitems and provides selection capabilities.
				JavaScript: list Extends Baselist 
				The list tag creates a list which may contain listitems. Subclasses 
				of listitem, such as textlistitem, may be used as well. list 
				provides basic layout and a selection API . If there are more items 
				than specified in the shownitems attribute, a scrollbar will be 
				provided.</help>
			<parameter name="autoscrollbar" type="boolean" required="false">
				<help>The index of the default selected item, if none is provided 
					via the selected="true" attribute on an item.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="border_bottom" type="Any" required="false">
				<help>The size of the bottom border which defaults to bordersize.</help>
				<values />
			</parameter>
			<parameter name="border_left" type="Any" required="false">
				<help>The size of the left border which defaults to bordersize.</help>
				<values />
			</parameter>
			<parameter name="border_right" type="Any" required="false">
				<help>The size of the right border which defaults to bordersize.</help>
				<values />
			</parameter>
			<parameter name="border_top" type="Any" required="false">
				<help>The size of the top border which defaults to bordersize.</help>
				<values />
			</parameter>
			<parameter name="bordersize" type="Any" required="false">
				<help>The size in pixels for this list.</help>
				<values />
			</parameter>
			<parameter name="minheight" type="Numeric" required="false">
				<help>The size in pixels for this listminumum height of the list, 
					default: 24.</help>
				<values />
			</parameter>
			<parameter name="scrollable" type="boolean" required="false">
				<help></help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="shownitems" type="Any" required="false">
				<help>The number of items that are displayed. This value will 
					ignored if this view attempts to draw past the canvas 
					boundary.</help>
				<values />
			</parameter>
			<parameter name="spacing" type="Any" required="false">
				<help>The number of pixels that items should be spaced from one 
					another.</help>
				<values />
			</parameter>
			<parameter name="tracking" type="boolean" required="false">
				<help>Toggles the mousedown tracking.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- base list -->
			<parameter name="dataoption" type="String" required="false">
				<help>One of "lazy", "resize", "pooling", "none".</help>
				<values>
					<value option="lazy"/>
					<value option="resize"/>
					<value option="pooling"/>
					<value option="none"/>
				</values>
			</parameter>
			<parameter name="defaultSelection" type="Any" required="false">
				<help>The index of the default selected item, if none is provided 
					via the selected="true" attribute on an item.</help>
				<values />
			</parameter>
			<parameter name="itemclassname" type="String" required="false">
				<help>The name of the class for new items that will be created with 
					addItem().</help>
				<values />
			</parameter>
			<parameter name="multiselect" type="boolean" required="false">
				<help>If multiselect is true, multiple items may be selected. When 
					the shift key is down, a range of items is selected. When the 
					control key is down, any item may be added to the selection.
					</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="toggleselected" type="boolean" required="false">
				<help>When true, the first click on a list item selects it and the 
					second click deselects it.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- BASE FORM ITEM -->
			<!-- BASE VALUE COMPONENT -->
			<parameter name="value" type="Any" required="false">
				<help>the value that this item represents. When selected, the 
					parent selection group's value will be set to this value. Most 
					subclasses require you to call getValue() to get the value of 
					the attribute.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- VIEW -->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- NODE -->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === FLOATING LIST === -->
		<tag name="floatinglist" creator="3" single="false" xmlstyle="true">
			<help>a floatinglist appears above other components
				JavaScript: floatinglist Extends List 
				The floatinglist tag provides a list that floats on top of the 
				canvas. It includes an attachment API for popping-up relative to a 
				target. This attachment API guarantees visibility on the canvas, 
				such that if the floatinglist intersects the canvas bounds, the 
				attach location will change to a more visible location.</help>
			<parameter name="attach" type="String" required="false">
				<help>Where this floatinglist should attach to its owner. Possible 
					values: bottom, top, left, right. In the event of a canvas 
					out-of-bounds, the floating list will attach in a visible 
					location.</help>
				<values />
			</parameter>
			<parameter name="attachoffset" type="String" required="false">
				<help>The distance from the attachtarget.</help>
				<values />
			</parameter>
			<parameter name="attachoffset" type="String" required="false">
				<help>The distance from the attachtarget.</help>
				<values />
			</parameter>
			<parameter name="attachtarget" type="String" required="false">
				<help>The view to which this floatinglist will attach. By default, 
					this will be the lexical parent. The style of the attachtarget 
					will be inherited.</help>
				<values />
			</parameter>
			<parameter name="shadowoffsety" type="String" required="false">
				<help>The shadow offset in the y coordinate space.</help>
				<values />
			</parameter>
			<!-- LIST -->
			<parameter name="autoscrollbar" type="boolean" required="false">
				<help>The index of the default selected item, if none is provided 
					via the selected="true" attribute on an item.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="border_bottom" type="Any" required="false">
				<help>The size of the bottom border which defaults to bordersize.</help>
				<values />
			</parameter>
			<parameter name="border_left" type="Any" required="false">
				<help>The size of the left border which defaults to bordersize.</help>
				<values />
			</parameter>
			<parameter name="border_right" type="Any" required="false">
				<help>The size of the right border which defaults to bordersize.</help>
				<values />
			</parameter>
			<parameter name="border_top" type="Any" required="false">
				<help>The size of the top border which defaults to bordersize.</help>
				<values />
			</parameter>
			<parameter name="bordersize" type="Any" required="false">
				<help>The size in pixels for this list.</help>
				<values />
			</parameter>
			<parameter name="minheight" type="Numeric" required="false">
				<help>The size in pixels for this listminumum height of the list, 
					default: 24.</help>
				<values />
			</parameter>
			<parameter name="scrollable" type="boolean" required="false">
				<help></help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="shownitems" type="Any" required="false">
				<help>The number of items that are displayed. This value will 
					ignored if this view attempts to draw past the canvas 
					boundary.</help>
				<values />
			</parameter>
			<parameter name="spacing" type="Any" required="false">
				<help>The number of pixels that items should be spaced from one 
					another.</help>
				<values />
			</parameter>
			<parameter name="tracking" type="boolean" required="false">
				<help>Toggles the mousedown tracking.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- base list -->
			<parameter name="dataoption" type="String" required="false">
				<help>One of "lazy", "resize", "pooling", "none".</help>
				<values>
					<value option="lazy"/>
					<value option="resize"/>
					<value option="pooling"/>
					<value option="none"/>
				</values>
			</parameter>
			<parameter name="defaultSelection" type="Any" required="false">
				<help>The index of the default selected item, if none is provided 
					via the selected="true" attribute on an item.</help>
				<values />
			</parameter>
			<parameter name="itemclassname" type="String" required="false">
				<help>The name of the class for new items that will be created with 
					addItem().</help>
				<values />
			</parameter>
			<parameter name="multiselect" type="boolean" required="false">
				<help>If multiselect is true, multiple items may be selected. When 
					the shift key is down, a range of items is selected. When the 
					control key is down, any item may be added to the selection.
					</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="toggleselected" type="boolean" required="false">
				<help>When true, the first click on a list item selects it and the 
					second click deselects it.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- BASE FORM ITEM -->
			<!-- BASE VALUE COMPONENT -->
			<parameter name="value" type="Any" required="false">
				<help>the value that this item represents. When selected, the 
					parent selection group's value will be set to this value. Most 
					subclasses require you to call getValue() to get the value of 
					the attribute.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- VIEW -->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- NODE -->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- == FONT == -->
		<tag name="font" creator="3" single="false" xmlstyle="true">
			<help>Inline font markup.
				A font tag controls the font face, size, and color for its textual 
				content. This tag can only occur inside XHTML text containers such 
				as text and button.</help>
			<parameter name="color" type="String" required="false">
				<help/>
				<values/>
			</parameter>
			<parameter name="face" type="String" required="false">
				<help/>
				<values/>
			</parameter>
			<parameter name="size" type="String" required="false">
				<help/>
				<values/>
			</parameter>
		</tag>
		
		<!-- === FORM === -->
		<tag name="form" creator="3" single="false" xmlstyle="true">
			<help>web form with standard layout
				JavaScript: form Extends Baseform 
				The form tag allows you to create a web form and provides automatic 
				layout. Most components are laid out vertically with buttons at the 
				lower right. The data represented by components that are enclosed 
				in the form tag can be sent to the server using the submit tag. 
				Each form component, such as checkbox, combobox or radiogroup must 
				have a name. The data is submitted as name-value pairs, using the 
				name and value of the component.
			</help>
			<parameter name="inset_bottom" type="Any" required="false">
				<help>The bottom inset for content appearing within form.</help>
				<values />
			</parameter>
			<parameter name="inset_left" type="Any" required="false">
				<help>The left inset for content appearing within form.</help>
				<values />
			</parameter>
			<parameter name="inset_right" type="Any" required="false">
				<help>The right inset for content appearing within form.</help>
				<values />
			</parameter>
			<parameter name="inset_top" type="Any" required="false">
				<help>The top inset for content appearing within form.</help>
				<values />
			</parameter>
			<parameter name="spacing" type="Any" required="false">
				<help>Vertical space between content and button area. If forms 
					height is specified, the button area will be flush against the 
					form's bottom right corner (adjusted by any layout that the 
					form has).</help>
				<values />
			</parameter>
			<!-- base from -->
			<parameter name="formdata" type="Any" required="false">
				<help>Holds a reference to each datacomponent contained within the 
					form.</help>
				<values />
			</parameter>
			<!-- VIEW -->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE FOCUS VIEW === -->
		<tag name="basefocusview" creator="3" single="false" xmlstyle="true">
			<help>an abstract class for the focus indicator
				JavaScript: basefocusview Extends View 
				An abstract base class that responds to focus by animating to the 
				focused view and sizing itself to that view. A subclass of this 
				view may be used to override the default look and feel of the focus 
				indicator.
			</help>
			<parameter name="active" type="boolean" required="false">
				<help>true during keyboard navigation, when this view is visible</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="duration" type="Numeric" required="false">
				<help>the duration of the animation from one focused view to the 
					next</help>
				<values />
			</parameter>
			<parameter name="target" type="Any" required="false">
				<help>a reference to the view that is currently focused</help>
				<values />
			</parameter>
			<!-- VIEW -->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- FRAME -->
		<tag name="frame" creator="3" single="false" xmlstyle="true">
			<help>A frame of a multi-frame resource.
				The fram> tag is used to define a single frame of a multi-frame 
				resource. A multi-frame resource contains several images which can 
				be toggled among by script commands.</help>
			<parameter name="name" type="String" required="false">
				<help>The name of a variable that will be set to this object when 
					the application is started. If this element is directly 
					within a canvas or library element, the global variable and 
					the canvas property with this name will be set to this object. 
					If this element is within another object, that object's 
					property with this name will be set to this object.</help>
				<values/>
			</parameter>
			<parameter name="src" type="String" required="false">
				<help>The path of a file that contains the source for this 
					object.</help>
				<values/>
			</parameter>
		</tag>
		
		<!-- === GRID === -->
		<tag name="basegrid" creator="3" single="false" xmlstyle="true">
			<help>Presents a grid backed by a datasource.
				JavaScript: grid Extends Basegrid 
				A grid is be used to present data in a dataset. Although it can be 
				configured using gridcolumn and gridtext, by default it will 
				present an editable field either for each attribute in the first 
				data node in the grid.</help>
			<parameter name="showhscroll" type="boolean" required="false">
				<help>If false, the grid will never show a horizontal scrollbar, 
					even if the rows are wider than the grid.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- === BASE GRID === -->
			<parameter name="bgcolor0" type="Numeric" required="false">
				<help>If given, sets the bgcolor for even numbered rows. If not 
					given, the bgcolor for these rows is taken from the style's 
					bgcolor.</help>
				<values />
			</parameter>
			<parameter name="bgcolor1" type="Numeric" required="false">
				<help>If given, sets the bgcolor for odd numbered rows. If not 
					given, the bgcolor for these rows is taken from the style's 
					bgcolor.</help>
				<values />
			</parameter>
			<parameter name="columns" type="Function" required="false">
				<help>An array holding the basegridcolumns used by this grid</help>
				<values />
			</parameter>
			<parameter name="contentdatapath" type="String" required="false">
				<help>The datapath to use for the contents of the grid. By default, 
					this is set to "*", meaning all of the nodes underneath the 
					datacontext of the grid.</help>
				<values />
			</parameter>
			<parameter name="hilite" type="Any" required="false">
				<help>The view which is currently hilited.</help>
				<values />
			</parameter>
			<parameter name="multiselect" type="boolean" required="false">
				<help>If true, the list will allow for multiple selection, and the 
					getSelection method will always return a list. If false, only 
					single selection is allowed.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="rowheight" type="Numeric" required="false">
				<help>Optional height for the rows contained by the grid. If no 
					value is given for this attribute, it will be set to the 
					calculated height of rows.</help>
				<values />
			</parameter>
			<parameter name="selectable" type="boolean" required="false">
				<help>If false, the rows are not clickable and the grid does not 
					support selection.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="showhlines" type="boolean" required="false">
				<help>If true, lines will be drawn (in component's style's 
					bordercolor) vertically at each at each column division. This 
					attribute can be set after instantiation.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="shownitems" type="Numeric" required="false">
				<help>Sets the height of the grid to show a maximum of 'n' items.</help>
				<values />
			</parameter>
			<parameter name="showvlines" type="boolean" required="false">
				<help>If true, lines will be drawn (in component's style's 
					bordercolor) horizontally at each at each row division. This 
					attribute cannot be set after instantiation.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="sizetoheader" type="boolean" required="false">
				<help>A boolean. If true, the grid will keep its width set to the 
					size of the header. This is automatically set to true for grids 
					that do not have a set width. This is initially set to 0, which 
					means that it is not true, but if it is explicitly set to false, 
					the automatic behavior will be disabled for grids with no set 
					width.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="spacing" type="Numeric" required="false">
				<help>Spacing between the rows.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === GRID COLUMN === -->
		<tag name="gridcolumn" creator="3" single="false" xmlstyle="true">
			<help>Declares a column in a grid.
				JavaScript: gridcolumn Extends Basegridcolumn 
				The gridcolumn class can be used to declare a column in a grid with 
				the standard column header look without specifying exactly what goes 
				inside the column. This can be useful for embedding other components 
				within a grid.
			</help>
			<parameter name="resizable" type="boolean" required="false">
				<help>If set to false, the column cannot be resized.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="resizemargin" type="Numeric" required="false">
				<help>If set to false, the column cannot be resized.</help>
				<values />
			</parameter>
			<parameter name="showheader" type="boolean" required="false">
				<help>If set to false, then no header will be shown for this column.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="sortable" type="boolean" required="false">
				<help>If true, the column header is clickable and will initiate a 
					sort</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- === BASE GRID COLUMN === -->
			<parameter name="ascendComparator" type="Any" required="false">
				<help>An optional method. If defined, this method will be used when 
					the column is sorted when ascendsort is set to true. This method 
					should have the compartor signature. It should accept to string 
					argument and return 1, 0 , or -1, indicating that the two 
					arguments are in order, equivalent, or out of order, 
					respectively.</help>
				<values />
			</parameter>
			<parameter name="ascendsort" type="boolean" required="false">
				<help>If true, the next sort will be ascending, otherwise it will 
					be descending.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="colwidth" type="Numeric" required="false">
				<help>The current width of the column.</help>
				<values />
			</parameter>
			<parameter name="datatype" type="String" required="false">
				<help>Either "number" or "string". If "string", then dictionary 
					sort is used. If "number", then types are coerced to a number 
					before sorting.</help>
				<values>
					<value option="number" />
					<value option="string" />
				</values>
			</parameter>
			<parameter name="descendComparator" type="Function" required="false">
				<help>An optional method. If defined, this method will be used when
					 the column is sorted when ascendsort is set to false. This 
					 method should have the compartor signature. It should accept 
					 to string argument and return 1, 0 , or -1, indicating that 
					 the two arguments are in order, equivalent, or out of order, 
					 respectively.</help>
				<values />
			</parameter>
			<parameter name="hasSort" type="boolean" required="false">
				<help>Readonly; set by doSort method. If true, then this is the 
					current sort column.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="minwidth" type="Numeric" required="false">
				<help>The minimum width for this column. This is relevant if the 
					column can be resized.</help>
				<values />
			</parameter>
			<parameter name="sortpath" type="String" required="false">
				<help>An xpath expression to use to determine the sort key for this 
					column. By default, this is the column's datapath's xpath.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === GRID TEXT === -->
		<tag name="gridtext" creator="3" single="false" xmlstyle="true">
			<help>An abstract column in a grid.
				JavaScript: basegridcolumn Extends Basecomponent 
				basegridcolumn can be used in basegrids or grids to customize the 
				look of both the column header and the row contents for that column. 
				In cases where a standard column header look is desired, but the 
				contents may vary, use gridcolumn.
			</help>
			<parameter name="editable" type="boolean" required="false">
				<help>If set to false, the field will not be editable.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- === GRID COLUMN === -->
			<parameter name="resizable" type="boolean" required="false">
				<help>If set to false, the column cannot be resized.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="resizemargin" type="Numeric" required="false">
				<help>If set to false, the column cannot be resized.</help>
				<values />
			</parameter>
			<parameter name="showheader" type="boolean" required="false">
				<help>If set to false, then no header will be shown for this column.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="sortable" type="boolean" required="false">
				<help>If true, the column header is clickable and will initiate a 
					sort</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- === BASE GRID COLUMN === -->
			<parameter name="ascendComparator" type="Any" required="false">
				<help>An optional method. If defined, this method will be used when 
					the column is sorted when ascendsort is set to true. This method 
					should have the compartor signature. It should accept to string 
					argument and return 1, 0 , or -1, indicating that the two 
					arguments are in order, equivalent, or out of order, 
					respectively.</help>
				<values />
			</parameter>
			<parameter name="ascendsort" type="boolean" required="false">
				<help>If true, the next sort will be ascending, otherwise it will 
					be descending.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="colwidth" type="Numeric" required="false">
				<help>The current width of the column.</help>
				<values />
			</parameter>
			<parameter name="datatype" type="String" required="false">
				<help>Either "number" or "string". If "string", then dictionary 
					sort is used. If "number", then types are coerced to a number 
					before sorting.</help>
				<values>
					<value option="number" />
					<value option="string" />
				</values>
			</parameter>
			<parameter name="descendComparator" type="Function" required="false">
				<help>An optional method. If defined, this method will be used when
					 the column is sorted when ascendsort is set to false. This 
					 method should have the compartor signature. It should accept 
					 to string argument and return 1, 0 , or -1, indicating that 
					 the two arguments are in order, equivalent, or out of order, 
					 respectively.</help>
				<values />
			</parameter>
			<parameter name="hasSort" type="boolean" required="false">
				<help>Readonly; set by doSort method. If true, then this is the 
					current sort column.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="minwidth" type="Numeric" required="false">
				<help>The minimum width for this column. This is relevant if the 
					column can be resized.</help>
				<values />
			</parameter>
			<parameter name="sortpath" type="String" required="false">
				<help>An xpath expression to use to determine the sort key for this 
					column. By default, this is the column's datapath's xpath.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === HSCROLLBAR === -->
		<tag name="hscrollbar" creator="3" single="false" xmlstyle="true">
			<help>Provides a horizontal scrollbar.
				JavaScript: hscrollbar Extends Basescrollbar 
				A scrollbar manipulates the x or y position of a target view that 
				is clipped by its parent, creating a scrolling effect when the user 
				clicks up/down arrows, clicks on the scroll track or drags the 
				thumb.</help>
			<parameter name="disabledbgcolor" type="Any" required="false">
				<help>If this is defined, it will be used as the scrollbar's 
					background color when it is disabled. If not provided, the 
					scrollbar will use the bgcolor of its closest parent that has 
					a bgcolor defined.</help>
				<values />
			</parameter>
			<!-- === BASE SCROLL BAR === -->
			<parameter name="axis" type="String" required="false">
				<help>Axis may be "x" or "y", controls the orientation and default 
					scrollattr, default: "y"</help>
				<values>
					<value option="x" />
					<value option="y" />
				</values>
			</parameter>
			<parameter name="scrollable" type="boolean" required="false">
				<help>True if the scrolltarget is bigger than the containing view 
					therefore the scrollbar is active. The scrollbar appears 
					disabled when scrollable is false. You can make the scrollbar 
					invisible when there is nothing to scroll by setting 
					visible="${scrollable}"</help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="scrollattr" type="String" required="false">
				<help>The attribute of the scrolltarget that is modified by the 
					scrollbar, default: value of axis attribute.</help>
				<values />
			</parameter>
			<parameter name="scrollmax" type="Numeric" required="false">
				<help>The maximum distance to scroll, default: the height or width 
					of the scrolltarget.</help>
				<values />
			</parameter>
			<parameter name="scrolltarget" type="Any" required="false">
				<help>The view that is controlled by the scrollbar.</help>
				<values />
			</parameter>
			<parameter name="stepsize" type="Numeric" required="false">
				<help>The amount that the scrolltarget is moved when the user 
					clicks on the scrolltrack or when the step method is called, 
					default: 10.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- NODE -->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- == i == -->
		<tag name="i" creator="3" single="false" xmlstyle="true">
			<help>Italic text.
				HTML italic character markup. This tag can only occur inside XHTML 
				text containers such as text and button.</help>
		</tag>
		
		<!-- == include == -->
		<tag name="include" creator="3" single="false" xmlstyle="true">
			<help>Includes code from other files.
				The include tag is used to include source code contained in another 
				file. See the Guide for a complete discussion. Also see the library
				tag.</help>
			<parameter name="href" type="URL" required="false">
				<help>A reference to a target file whose content is included in the 
					application that contains this include element.</help>
				<values />
			</parameter>
			<parameter name="type" type="String" required="false">
				<help>If this attribute has the value text, the content of the 
					target file is included as text. Otherwise,it is read as XML.</help>
				<values>
					<value option="text"/>
					<value option="xml"/>
				</values>
			</parameter>
		</tag>
		
		<!-- inputtext -->
		<tag name="inputtext" creator="3" single="false" xmlstyle="true">
			<help>The basic input-text element.
				JavaScript: LzInputText Extends LzAbstractText 
				This tag creates an area of the canvas that the user can use to 
				edit text. It is equivalent to the HTML input type="text", input 
				type="password", and textarea tags.</help>
			<parameter name="label" type="String" required="false">
				<help></help>
				<values/>
			</parameter>
			<parameter name="multiline" type="boolean" required="false">
				<help>If true, the text field will automatically wrap long lines of 
					text at the right margin, and allow the user to press enter on 
					their keyboard to add a line break to the text. The default for 
					this attribute is false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="password" type="boolean" required="false">
				<help>If true, the input text field acts like a password input 
					field; any text typed in appears as "****" characters in the 
					current font.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="resizable" type="boolean" required="false">
				<help>If true, this text field can be dynamically resized at runtime.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="resize" type="boolean" required="false">
				<help>If true, the width of the text field will be recomputed each 
					time setText() is called, so that the text view is exactly as 
					wide as the width of the widest line.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="selectable" type="boolean" required="false">
				<help>If true, the text is selectable</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>The text to display in this text field.</help>
				<values/>
			</parameter>
			<!-- NODE -->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- rpc -->
		<tag name="rpc" creator="3" single="false" xmlstyle="true">
			<help>Remote procedure calls.
				JavaScript: rpc Extends Node 
				The rpc tag is the abstract base class for RPC classes. Subclasses 
				must implement the load() method, which is responsible for creating 
				the proxy object. The proxy object contains a set of function stubs 
				that invoke a remote function (or procedure) over the network. It's 
				up to the caller of the stub function to know what parameters need 
				to be passed in by looking at what the backend remote function 
				expects. If calling a JavaRemoting (javarpc) function, looking at 
				the associated Java API will be necessary. If calling a SOAP (soap) 
				function, the developer will need to look at the corresponding 
				operation in a WSDL file.</help>
			<parameter name="autoload" type="boolean" required="false">
				<help>Load remote object during init. If false, create remote object 
					by calling load(). Default is true.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			
			<parameter name="text" type="String" required="false">
				<help>The text to display in this text field.</help>
				<values/>
			</parameter>
			<!-- NODE -->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		
      <tag name="text" creator="3" single="false" xmlstyle="true">
         <help/>
         <parameter name="text" type="String" required="false">
            <help/>
            <values/>
         </parameter>
      </tag>
      <tag name="inputtext" creator="3" single="false" xmlstyle="true">
         <help/>
         <parameter name="resizable" type="boolean" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="password" type="boolean" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="text" type="String" required="false">
            <help/>
            <values/>
         </parameter>
      </tag>
      <tag name="pre" creator="3" single="false" xmlstyle="true">
         <help/>
      </tag>
	  
      
	  

	  
	
	  
      <tag name="i" creator="3" single="false" xmlstyle="true">
         <help/>
      </tag>
      <tag name="p" creator="3" single="false" xmlstyle="true">
         <help/>
      </tag>
      
      <tag name="u" creator="3" single="false" xmlstyle="true">
         <help/>
      </tag>
      

	  
      <tag name="resource" creator="3" single="false" xmlstyle="true">
         <help/>
         <parameter name="src" type="URL" required="false">
            <help/>
            <values/>
         </parameter>
      </tag>
      <tag name="frame" creator="3" single="false" xmlstyle="true">
         <help/>
         <parameter name="name" type="String" required="false">
            <help/>
            <values/>
         </parameter>
      </tag>
      <tag name="datasource" creator="3" single="false" xmlstyle="true">
         <help/>
         <parameter name="id" type="Numeric" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="name" type="String" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="timeout" type="Numeric" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="secure" type="boolean" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="port" type="String" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="oninit" type="Function" required="false">
            <help/>
            <values/>
         </parameter>
      </tag>
      <tag name="connectiondatasource" creator="3" single="false" xmlstyle="true">
         <help>A connection datasource to receive messages from the persistent connection.</help>
		<parameter name="id" type="Numeric" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="name" type="String" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="onconnect" type="Function" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="oninit" type="Function" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="ondata" type="Function" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="onerror" type="Function" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="ontimeout" type="Function" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="ondisconnect" type="Function" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="onuserdisconnect" type="Function" required="false">
            <help/>
            <values/>
         </parameter>
	</tag>
      <tag name="agent" creator="3" single="false" xmlstyle="true">
         <help/>
         <parameter name="url" type="String" required="true">
            <help/>
            <values/>
         </parameter>
      </tag>
      <tag name="connection" creator="3" single="false" xmlstyle="true">
         <help/>
         <parameter name="heartbeat" type="Numeric" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="timeout" type="Numeric" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="secure" type="boolean" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="secureport" type="Numeric" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="receiveuserdisconnect" type="boolean" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="group" type="String" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="authenticator" type="String" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="authparam" type="String" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="onconnect" type="Function" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="ondata" type="Function" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="onerror" type="Function" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="ontimeout" type="Function" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="ondisconnect" type="Function" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="onuserdisconnect" type="Function" required="false">
            <help/>
            <values/>
         </parameter>
      </tag>
      <tag name="dataset" creator="3" single="false" xmlstyle="true">
         <help/>
      </tag>
      
	  
      
      <tag name="method" creator="3" single="false" xmlstyle="true">
         <help/>
         <parameter name="name" type="String" required="true">
            <help/>
            <values/>
         </parameter>
         <parameter name="event" type="String" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="reference" type="String" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="args" type="String" required="false">
            <help/>
            <values/>
         </parameter>
      </tag>
      <tag name="state" creator="3" single="false" xmlstyle="true">
         <help/>
         <parameter name="apply" type="boolean" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="pooling" type="boolean" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="onapply" type="Function" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="onremove" type="Function" required="false">
            <help/>
            <values/>
         </parameter>
      </tag>
      
      <tag name="layout" creator="3" single="false" xmlstyle="true">
         <help/>
         <parameter name="locked" type="boolean" required="false">
            <help/>
            <values/>
         </parameter>
      </tag>
      <tag name="splash" creator="3" single="false" xmlstyle="true">
         <help/>
         <parameter name="name" type="String" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="resource" type="URL" required="true">
            <help/>
            <values/>
         </parameter>
         <parameter name="ratio" type="String" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="x" type="Numeric" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="y" type="Numeric" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="center" type="boolean" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="hideafterinit" type="boolean" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="persistent" type="boolean" required="false">
            <help/>
            <values/>
         </parameter>
      </tag>
	  
	<tag name="script" creator="3" single="false" xmlstyle="true">
		<help>A block of JavaScript. The script element contains JavaScript code 
			that is executed when the application is loaded. This element must be 
			at the canvas level; that is, it cannot be contained within any 
			subordinate tag. If the src attribute is present, it names a JavaScript 
			file whose contents are compiled into the application.
		</help>
		<parameter name="src" type="URL" required="false">
			<help>The pathname of a JavaScript file. This pathname is resolved 
				relative to the file that contains the "script" element.</help>
			<values/>
		</parameter>
	</tag>
      
	<tag name="preloadresource" creator="3" single="false" xmlstyle="true">
         <help/>
         <parameter name="name" type="String" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="ratio" type="String" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="synctoload" type="boolean" required="true">
            <help/>
            <values/>
         </parameter>
         <parameter name="hideafterinit" type="boolean" required="true">
            <help/>
            <values/>
         </parameter>
         <parameter name="center" type="boolean" required="true">
            <help/>
            <values/>
         </parameter>
         <parameter name="synchronized" type="boolean" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="lastframe" type="String" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="resource" type="String" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="resourcename" type="String" required="false">
            <help/>
            <values/>
         </parameter>
      </tag>
      <tag name="pattern" creator="3" single="false" xmlstyle="true">
         <help/>
      </tag>
      <tag name="allow" creator="3" single="false" xmlstyle="true">
         <help/>
      </tag>
      <tag name="deny" creator="3" single="false" xmlstyle="true">
         <help/>
      </tag>
      <tag name="security" creator="3" single="false" xmlstyle="true">
         <help/>
      </tag>
	  
      
      <tag name="library" creator="3" single="false" xmlstyle="true">
         <help/>
         <parameter name="href" type="URL" required="false">
            <help/>
            <values/>
         </parameter>
      </tag>
      <tag name="debug" creator="3" single="false" xmlstyle="true">
         <help/>
         <parameter name="width" type="Numeric" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="height" type="Numeric" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="x" type="Numeric" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="y" type="Numeric" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="font" type="String" required="false">
            <help/>
            <values/>
         </parameter>
         <parameter name="fontsize" type="Numeric" required="false">
            <help/>
            <values/>
         </parameter>
      </tag>
      <tag name="include" creator="3" single="false" xmlstyle="true">
         <help/>
         <parameter name="href" type="URL" required="true">
            <help/>
            <values/>
         </parameter>
         <parameter name="type" type="String" required="false">
            <help/>
            <values>
               <value option="text"/>
               <value option="xml"/>
            </values>
         </parameter>
      </tag>
     
	</tags>
	
	<functions />
	<scopes />
</dictionary>