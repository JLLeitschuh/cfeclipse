<?xml version="1.0" encoding="utf-8"?>
<dictionary xmlns="http://www.cfeclipse.org/version1/dictionary" 
	xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	xmlns:ns1="http://www.laszlosystems.com/2003/05/lzx" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.cfeclipse.org/version1/dictionary http://www.cfeclipse.org/version1/dictionary/dictionary.xsd"
>
	<tags>
		<!-- === BASE WINDOW === -->
		<tag name="basewindow" creator="3" single="false" xmlstyle="true">
			<help>base window class
				JavaScript: basewindow Extends Basecomponent 
				This abstract class provides useful methods and states for a view 
				that is moveable and resizeable.</help>
			<parameter name="datacontrolsvisibility" type="boolean" required="false">
				<help>Controls the datapath of this window. If true, the datapath 
					associated with the window will cause the window to be 
					invisible if it matches no data or visible if it does match 
					data, overriding whatever had been set as the visible attribute 
					of the window. Default: false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="haswindowfocus" type="boolean" required="false">
				<help>True if the window is frontmost, default: false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="minheight" type="Numeric" required="false">
				<help>Minimum height for the window, default: 50.</help>
				<values />
			</parameter>
			<parameter name="minwidth" type="Numeric" required="false">
				<help>Minimum width for the windowy, default: 60.</help>
				<values />
			</parameter>
			<parameter name="state" type="Numeric" required="false">
				<help>The state of the window: 1=selected (frontmost) window, 
					2=not-selected window, 3=dragging, 4=disabled, 5=resizing. 
					Default: 1</help>
				<values>
					<value option="1"/>
					<value option="2"/>
					<value option="3"/>
					<value option="4"/>
					<value option="5"/>
				</values>
			</parameter>
			<!-- basecomponent -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE TREE === -->
		<tag name="basetree" creator="3" single="false" xmlstyle="true">
			<help>An abstract base class to build tree controls.
				JavaScript: basetree Extends Basecomponent 
				You can subclass basetree to build a tree control with your own 
				look and feel. Basetree has two content areas: item and children. 
				The item view is where the visual component of the tree should be 
				placed. Any view that you want to place in the tree node should be 
				placed in item. You can use placement="item". The children view is 
				the defaultplacement for basetree.</help>
			<parameter name="autoscroll" type="boolean" required="false">
				<help>Auto scroll if tree is clipped. Default is false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="closechildren" type="boolean" required="false">
				<help>Close all immediate children when this tree is closed. Default 
					is false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="closesiblings" type="boolean" required="false">
				<help>Flag to close other siblings when this tree is open. Default 
					is false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focused" type="boolean" required="false">
				<help>If true, this tree is focused. Default is false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focusoverlay" type="boolean" required="false">
				<help>Meaningful only in root. If focusselect is false and 
					focusoverlay is true, then focus has a visual bracket overlay 
					over the focused tree. Default is false
				</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focusselect" type="boolean" required="false">
				<help>Meaningful only in root. Flag to select a tree on focus. 
					Default is false.
				</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="isleaf" type="boolean" required="false">
				<help>If true, this basetree is a leaf node. Default is false.
				</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="multiselect" type="boolean" required="false">
				<help>Meaningful only in root. Whether to multiselect items. 
					Default is false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="onfocused" type="Any" required="false">
				<help>This event gets triggered whenever this tree is focused. The 
					value of the focus (true or false) is sent with this event.</help>
				<values />
			</parameter>
			<parameter name="onopen" type="Any" required="false">
				<help>This event gets triggered whenever this tree is open. The open 
					value of this tree is also sent.</help>
				<values />
			</parameter>
			<parameter name="onselected" type="Any" required="false">
				<help>This event gets triggered whenever this tree is selected. The 
					value of the selection (true or false) is sent with this event. 
					Note the args of this has changed from the previous release.</help>
				<values />
			</parameter>
			<parameter name="open" type="boolean" required="false">
				<help>Check to see if this tree is open. Default is false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="recurse" type="boolean" required="false">
				<help>Meaningful only with data replication. If true, it will 
					recursively follow the datapath's children. Default is true.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="showroot" type="boolean" required="false">
				<help>Meaningful only in root tree. If false, the root item is 
					invisible and its children are displayed. Default is true.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="toggleselected" type="boolean" required="false">
				<help>Meaningful only in root. Flag to toggle selected nodes. 
					Default is false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="xindent" type="Numeric" required="false">
				<help>Spacing to indent trees on the x-axis. Default is 10.</help>
				<values />
			</parameter>
			<parameter name="yindent" type="Numeric" required="false">
				<help>Spacing to indent trees on the y-axis. Default is 20.</help>
				<values />
			</parameter>
			<!-- basecomponent -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE TRACK GROUP === -->
		<tag name="basetrackgroup" creator="3" single="false" xmlstyle="true">
			<help>used for grouping a set of views responding to mousetrack events.
				JavaScript: basetrackgroup Extends View 
				A utility class which simplifies tracking of cursor movement across 
				a set of views while in a mousedown state. This involves creating a 
				trackgroup with a unique ID and the registering of any views 
				associated with that trackgroup.</help>
			<parameter name="activateevents" type="Any" required="false">
				<help>an array of events which will activate tracking. By default: 
					['onmousedown']. To override, you must declare as once</help>
				<values />
			</parameter>
			<parameter name="boundsref" type="Any" required="false">
				<help>The view that will be used to define the bounding rect for 
					tracking the mouse</help>
				<values />
			</parameter>
			<parameter name="deactivateevents" type="Any" required="false">
				<help>an array of events which will deactivate tracking. By default: 
					['onmouseup']. To override, you must declare as once.</help>
				<values />
			</parameter>
			<parameter name="tracking" type="Any" required="false">
				<help>indicates if this trackgroup is currently tracking or not. It 
					can bet set to turn tracking on or off, or use the methods 
					activatetrackgroup and deactivatetrackgroup</help>
				<values />
			</parameter>
			<parameter name="trackingrate" type="Numeric" required="false">
				<help>The periodic rate in milliseconds to track the mouse</help>
				<values />
			</parameter>
			<!-- VIEW -->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE TAB SLIDER === -->
		<tag name="basetabslider" creator="3" single="false" xmlstyle="true">
			<help>A non-visual container that animates and coordinates the sliding 
				of  basetabelements
				JavaScript: basetabslider Extends Baselist 
				A basetabslider coordinates the opening and closing of its 
				basetabelements contained within its scope. basetabslider and 
				basetabelement have no visual aspects. The tabslider class (which 
				extends basetabslider) does contain a visual UI and shows how 
				basetabslider can be extended to create your own visual framework 
				for a unique tab slider.</help>
			<parameter name="inset_bottom" type="Numeric" required="false">
				<help>The bottom inset for content appearing within a tabelement. 
					Default is 8.</help>
				<values />
			</parameter>
			<parameter name="inset_left" type="Numeric" required="false">
				<help>The left inset for content appearing within a tabelement. 
					Default is 8.</help>
				<values />
			</parameter>
			<parameter name="inset_right" type="Numeric" required="false">
				<help>The right inset for content appearing within a tabelement. 
					Default is 8.</help>
				<values />
			</parameter>
			<parameter name="inset_top" type="Numeric" required="false">
				<help>The top inset for content appearing within a tabelement. 
					Default is 8.</help>
				<values />
			</parameter>
			<parameter name="mintabheight" type="Numeric" required="false">
				<help>The default height of every tab when closed. Default is 22.</help>
				<values />
			</parameter>
			<parameter name="slideduration" type="Numeric" required="false">
				<help>The duration of the tabs openning and closing. Default is 300.</help>
				<values />
			</parameter> 
			<parameter name="spacing" type="Numeric" required="false">
				<help>The spacing of the tabs. Default is 0.</help>
				<values />
			</parameter>
			<!-- BASE LIST -->
			<parameter name="dataoption" type="String" required="false">
				<help>One of "lazy", "resize", "pooling", "none".</help>
				<values>
					<value option="lazy"/>
					<value option="resize"/>
					<value option="pooling"/>
					<value option="none"/>
				</values>
			</parameter>
			<parameter name="defaultSelection" type="Any" required="false">
				<help>The index of the default selected item, if none is provided 
					via the selected="true" attribute on an item.</help>
				<values />
			</parameter>
			<parameter name="itemclassname" type="String" required="false">
				<help>The name of the class for new items that will be created with 
					addItem().</help>
				<values />
			</parameter>
			<parameter name="multiselect" type="boolean" required="false">
				<help>If multiselect is true, multiple items may be selected. When 
					the shift key is down, a range of items is selected. When the 
					control key is down, any item may be added to the selection.
					</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="toggleselected" type="boolean" required="false">
				<help>When true, the first click on a list item selects it and the 
					second click deselects it.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- BASE FORM ITEM -->
			<!-- BASE VALUE COMPONENT -->
			<parameter name="value" type="Any" required="false">
				<help>the value that this item represents. When selected, the 
					parent selection group's value will be set to this value. Most 
					subclasses require you to call getValue() to get the value of 
					the attribute.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE TABS CONTENT === -->
		<tag name="basetabscontent" creator="3" single="false" xmlstyle="true">
			<help>The non-visual container for basetabpanes.
				JavaScript: basetabscontent Extends Basecomponent 
				basetabscontent is the non-visual container (and immediate parent) 
				of basetabpanes. Extend basetabscontent to give the content area of 
				your basetabs a look, e.g., adding borders to your content. 
				basetabscontent is a child of the basetabs component.</help>
			<!-- basecomponet -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
			
		</tag>
		
		<!-- === BASE TABS BAR === -->
		<tag name="basetabsbar" creator="3" single="false" xmlstyle="true">
			<help>A non-visual container for basetabpanes.
				JavaScript: basetabs Extends Basecomponent 
				The basetabs component conceptually houses a row of tabs that 
				control the visibility of a stack of basetabpanes. When a 
				basetabpane is added to the basetab component, a corresponding 
				basetab is created for that basetabpane.</help>
			<!-- baselist -->
			<parameter name="dataoption" type="String" required="false">
				<help>One of "lazy", "resize", "pooling", "none".</help>
				<values>
					<value option="lazy"/>
					<value option="resize"/>
					<value option="pooling"/>
					<value option="none"/>
				</values>
			</parameter>
			<parameter name="defaultSelection" type="Any" required="false">
				<help>The index of the default selected item, if none is provided 
					via the selected="true" attribute on an item.</help>
				<values />
			</parameter>
			<parameter name="itemclassname" type="String" required="false">
				<help>The name of the class for new items that will be created with 
					addItem().</help>
				<values />
			</parameter>
			<parameter name="multiselect" type="boolean" required="false">
				<help>If multiselect is true, multiple items may be selected. When 
					the shift key is down, a range of items is selected. When the 
					control key is down, any item may be added to the selection.
					</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="toggleselected" type="boolean" required="false">
				<help>When true, the first click on a list item selects it and the 
					second click deselects it.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- BASE FORM ITEM -->
			<!-- BASE VALUE COMPONENT -->
			<parameter name="value" type="Any" required="false">
				<help>the value that this item represents. When selected, the 
					parent selection group's value will be set to this value. Most 
					subclasses require you to call getValue() to get the value of 
					the attribute.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE TABS === -->
		<tag name="basetabs" creator="3" single="false" xmlstyle="true">
			<help>A non-visual container for basetabpanes.
				JavaScript: basetabs Extends Basecomponent 
				The basetabs component conceptually houses a row of tabs that 
				control the visibility of a stack of basetabpanes. When a 
				basetabpane is added to the basetab component, a corresponding 
				basetab is created for that basetabpane.</help>
			<parameter name="bar" type="Any" required="false">
				<help>This is a reference to its basetabsbar.</help>
				<values />
			</parameter>
			<parameter name="barclass" type="String" required="false">
				<help>Class to instantiate to contain tab items. Default is 
					'basetabsbar'.</help>
				<values />
			</parameter>
			<parameter name="bordersize" type="Numeric" required="false">
				<help>The size of the border surrounding a basetabpane. Default is 
					0.</help>
				<values />
			</parameter>
			<parameter name="content" type="Any" required="false">
				<help>This is a reference to basetab's content area. This is where 
					all basetabpanes in tabs are placed.</help>
				<values />
			</parameter>
			<parameter name="contentclass" type="String" required="false">
				<help>Class to instantiate to contain basetabpanes.</help>
				<values />
			</parameter>
			<parameter name="inset_bottom" type="Numeric" required="false">
				<help>The bottom inset for content appearing within a basetabpane. 
					Default is 8.</help>
				<values />
			</parameter>
			<parameter name="inset_left" type="Numeric" required="false">
				<help>The left inset for content appearing within a basetabpane. 
					Default is 8.</help>
				<values />
			</parameter>
			<parameter name="inset_right" type="Numeric" required="false">
				<help>The right inset for content appearing within a basetabpane. 
					Default is 8.</help>
				<values />
			</parameter>
			<parameter name="inset_top" type="Numeric" required="false">
				<help>The top inset for content appearing within a basetabpane. 
					Default is 8.</help>
				<values />
			</parameter>
			<parameter name="tabclass" type="Numeric" required="false">
				<help>Class to instantiate tab items for basetabsbar. Can be 
					overridden by basetabpane. Default is 'basetab'.</help>
				<values />
			</parameter>
			<!-- base component -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE TAB PANE === -->
		<tag name="basetabpane" creator="3" single="false" xmlstyle="true">
			<help>A non-visual tabpane for the basetabs component.
				JavaScript: basetabpane Extends Basecomponent 
				A basetabpane is the non-visual container for content in basetabs. 
				Each basetabpane has a corresponding basetab created. Normally, you 
				won't want to extend this class. If you want a consistent background 
				across all basetabpanes, you can add a background to your 
				basetabscontent component. If you want a different background for 
				each basetabpane, you could do that in the content placed inside of 
				your basetabpane.</help>
			<parameter name="datacontrolsvisibility" type="boolean" required="false">
				<help>If a datapath tag is declared, this attribute will be passed 
					to the datapath when it's created. Default is false.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="inset_bottom" type="Numeric" required="false">
				<help>Bottom inset for basetabpane in tabs content. Default is 
					basetabs's inset_bottom.</help>
				<values />
			</parameter>
			<parameter name="inset_left" type="Numeric" required="false">
				<help>Left inset for basetabpane in tabs content. Default is 
					basetabs's inset_left.</help>
				<values />
			</parameter>
			<parameter name="inset_right" type="Numeric" required="false">
				<help>Right inset for basetabpane in tabs content. Default is 
					basetabs's inset_right.</help>
				<values />
			</parameter>
			<parameter name="inset_top" type="Numeric" required="false">
				<help>Top inset for basetabpane in tabs content. Default is 
					basetabs's inset_top.</help>
				<values />
			</parameter>
			<parameter name="selected" type="boolean" required="false">
				<help>If a basetabpane is selected, then it will be shown. Its 
					associated tab will be also be selected.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="tab" type="Any" required="false">
				<help>The tab associated with this basetabpane.</help>
				<values />
			</parameter>
			<parameter name="tabclass" type="String" required="false">
				<help>The tabclass to use to instantiate its associated tab. This 
					overrides the basetabs tabclass.</help>
				<values />
			</parameter>
			<!-- base component -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		
		<!-- === BASE TAB ELEMENT === -->
		<tag name="basetabelement" creator="3" single="false" xmlstyle="true">
			<help>Base class for the contents of a basetabslider.
				JavaScript: basetabelement Extends Baselistitem 
				basetabelement is the base class for the contents of a 
				basetabslider. The basetabelement is focusable if it is closed, and 
				not focusable when it is open.</help>
			<parameter name="contentvisible" type="boolean" required="false">
				<help>This is set to true when a basetabelement begins to			
					 open and is set to false when it finishes its close. 
					 Default is the inverse of hideonclose.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="headerheight" type="Numeric" required="false">
				<help>The height of the header. Default is minheight.</help>
				<values />
			</parameter>
			<parameter name="hideonclose" type="boolean" required="false">
				<help>Content is automatically hidden when tabelement is closed. To 
					override, set this attribute to false. Default is true.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="itemclassname" type="String" required="false">
				<help>When creating tabelements via additem, this is the class that 
					gets created. The default value is the class of the first 
					tabelement or its descendant.</help>
				<values />
			</parameter>
			<parameter name="minheight" type="Numeric" required="false">
				<help>The height the tab will close to. Default is 22.</help>
				<values />
			</parameter>
			<parameter name="onclosestart" type="Any" required="false">
				<help>Sent at the start of the close animation.</help>
				<values />
			</parameter>
			<parameter name="onclosestop" type="Any" required="false">
				<help>Sent at the stop of the close animation.</help>
				<values />
			</parameter>
			<parameter name="onopenstart" type="Any" required="false">
				<help>Sent at the start of the open animation.</help>
				<values />
			</parameter>
			<parameter name="onopenstop" type="Any" required="false">
				<help>Sent at the end of the open animation.</help>
				<values />
			</parameter>
			<!-- BASE LIST ITEM -->
			<parameter name="onselected" type="Function" required="false">
				<help>Event sent when this item is selected.</help>
				<values />
			</parameter>
			<!-- BASE VALUE COMPONENT -->
			<parameter name="value" type="Any" required="false">
				<help>the value that this item represents. When selected, the 
					parent selection group's value will be set to this value. Most 
					subclasses require you to call getValue() to get the value of 
					the attribute.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>	
		
		<!-- === BASE TAB === -->
		<tag name="basetab" creator="3" single="false" xmlstyle="true">
			<help>A non-visual tab component for basetabsbar.
				JavaScript: basetab Extends Baselistitem 
				basetab is a non-visual representation of a tab that is contained 
				within a basetabsbar component. This is the default tab class that 
				the basetabs component uses.</help>
			<parameter name="tabpane" type="Any" required="false">
				<help>The tabpane associated with this tab.</help>
				<values />
			</parameter>
			<!-- base list item -->
			<parameter name="onselected" type="Function" required="false">
				<help>Event sent when this item is selected.</help>
				<values />
			</parameter>
			<!-- BASE VALUE COMPONENT -->
			<parameter name="value" type="Any" required="false">
				<help>the value that this item represents. When selected, the 
					parent selection group's value will be set to this value. Most 
					subclasses require you to call getValue() to get the value of 
					the attribute.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		
		<!-- === BASE SLIDER === -->
		<tag name="baseslider" creator="3" single="false" xmlstyle="true">
			<help>A non-visual base class for implementing sliders.
				JavaScript: baseslider Extends Basevaluecomponent 
				Baseslider is a non-visual representation of a slider.</help>
			<parameter name="bordersize" type="Numeric" required="false">
				<help>The border width. This can be set with a style.</help>
				<values />
			</parameter>
			<parameter name="keystep" type="Numeric" required="false">
				<help>How far to move when key navigating.</help>
				<values />
			</parameter>
			<parameter name="maxvalue" type="Numeric" required="false">
				<help>The maximum value.</help>
				<values />
			</parameter>
			<parameter name="minvalue" type="Numeric" required="false">
				<help>The minimum value.</help>
				<values />
			</parameter>
			<parameter name="showfill" type="boolean" required="false">
				<help>The minimum value.</help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="showrange" type="boolean" required="false">
				<help>Turns on / off the bounding range text.</help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="showvalue" type="boolean" required="false">
				<help>Turns on / off the floating value text when the user drags.</help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="thumbheight" type="Numeric" required="false">
				<help>The height of the thumb.</help>
				<values />
			</parameter>
			<parameter name="thumbwidth" type="Numeric" required="false">
				<help>The width of the thumb.</help>
				<values />
			</parameter>
			<parameter name="trackheight" type="Numeric" required="false">
				<help>The height of the track.</help>
				<values />
			</parameter>
			<!-- BASE VALUE COMPONENT -->
			<parameter name="value" type="Any" required="false">
				<help>the value that this item represents. When selected, the 
					parent selection group's value will be set to this value. Most 
					subclasses require you to call getValue() to get the value of 
					the attribute.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		
		<!-- === BASE SCROLL TRACK === -->
		<tag name="basescrolltrack" creator="3" single="false" xmlstyle="true">
			<help>Provides non-visual aspects of a scrollbar track.
				JavaScript: basescrolltrack Extends Basebuttonrepeater 
				This class must be used with basescrollbar. See basescrollbar for 
				more details.</help>
			<parameter name="direction" type="Numeric" required="false">
				<help>The direction in which the scroll should move. Use -1 to go 
					back. Default: 1</help>
				<values />
			</parameter>
			<!-- BASE BUTTON REPEATER -->
			<parameter name="disabledResourceNumber" type="Numeric" required="false">
				<help>The resource for the disabled state, default: 4. Use 0 if 
					there are the resource has at least 4 frames, but there is no 
					disabled state.</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="downResourceNumber" type="Numeric" required="false">
				<help>The resource for the mouse down state, default: 3. Use 0 if 
					the resources has at least 3 frames, but there is no down state.
				</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="maxframes" type="Numeric" required="false">
				<help>The maximum number of frames to use, defaults to the number of 
					frames for the resoruce associated with this view. This is 
					useful for a subclass has no resource for this view. Default is 
					the total frames of basebutton.
				</help>
				<values />
			</parameter>
			<parameter name="normalResourceNumber" type="Numeric" required="false">
				<help>The resource for the mouse up state, and initial state of the 
					button.</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="onresourceviewcount" type="Any" required="false">
				<help>This event is sent when the resourceviewcount changes.</help>
				<values />
			</parameter>
			<parameter name="overResourceNumber" type="Numeric" required="false">
				<help>The resource for the mouse over state, default: 2. Use 0 if 
					the resource has at least 2 frames, but there is no over state.
				</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="reference" type="Function" required="false">
				<help>Where to send mouse events (the view that will be "clickable"), 
					default: this.</help>
				<values />
			</parameter>
			<parameter name="resourceviewcount" type="Numeric" required="false">
				<help>The first 'n' subviews that will respond to mouseevents by 
					changing the frame number of their resource.</help>
				<values />
			</parameter>
			<parameter name="respondtomouseout" type="boolean" required="false">
				<help>If this button does not respond to onmouseout or onmousedragout 
					events, set this flag to false. Default: true.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- 
				BASE COMPONENT 
			-->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		
		<!-- === BASE SCROLL THUMB === -->
		<tag name="basescrollthumb" creator="3" single="false" xmlstyle="true">
			<help>Provides non-visual aspects of a scrollbar thumb.
				JavaScript: basescrollthumb Extends Basecomponent 
				This class must be used with basescrollbar. The thumb automatically 
				scales its height to display the relationship between the target 
				height and the track height.</help>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE SCROLL BAR === -->
		<tag name="basescrollbar" creator="3" single="false" xmlstyle="true">
			<help>Provides non-visual aspects of scrollbar.
				JavaScript: basescrollbar Extends Basecomponent 
				If you want to create a scrollbar with a custom look, you can use 
				basescrollbar along with helper classes basescrolltrack, 
				basescrollthumb, and basescrollarrow. These classes will allow you 
				to change resources, colors, and the position or presence of 
				various elements.</help>
			<parameter name="axis" type="String" required="false">
				<help>Axis may be "x" or "y", controls the orientation and default 
					scrollattr, default: "y"</help>
				<values>
					<value option="x" />
					<value option="y" />
				</values>
			</parameter>
			<parameter name="scrollable" type="boolean" required="false">
				<help>True if the scrolltarget is bigger than the containing view 
					therefore the scrollbar is active. The scrollbar appears 
					disabled when scrollable is false. You can make the scrollbar 
					invisible when there is nothing to scroll by setting 
					visible="${scrollable}"</help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="scrollattr" type="String" required="false">
				<help>The attribute of the scrolltarget that is modified by the 
					scrollbar, default: value of axis attribute.</help>
				<values />
			</parameter>
			<parameter name="scrollmax" type="Numeric" required="false">
				<help>The maximum distance to scroll, default: the height or width 
					of the scrolltarget.</help>
				<values />
			</parameter>
			<parameter name="scrolltarget" type="Any" required="false">
				<help>The view that is controlled by the scrollbar.</help>
				<values />
			</parameter>
			<parameter name="stepsize" type="Numeric" required="false">
				<help>The amount that the scrolltarget is moved when the user 
					clicks on the scrolltrack or when the step method is called, 
					default: 10.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE SCROLL ARROW === -->
		<tag name="basescrollarrow" creator="3" single="false" xmlstyle="true">
			<help>Provides non-visual aspects of scrollbar's arrow.
				JavaScript: basescrollarrow Extends Basebuttonrepeater 
				This is a simple helper class to provide scrollbar arrow behavior. 
				If the mouse is held down on the arrow, the scrollbar will scroll 
				until the mouse button is released.</help>
			<parameter name="direction" type="Numeric" required="false">
				<help>The direction in which the scroll should move. Use -1 to go 
					back. Default: 1</help>
				<values />
			</parameter>
			<!-- BASE BUTTON REPEATER -->
			<parameter name="disabledResourceNumber" type="Numeric" required="false">
				<help>The resource for the disabled state, default: 4. Use 0 if 
					there are the resource has at least 4 frames, but there is no 
					disabled state.</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="downResourceNumber" type="Numeric" required="false">
				<help>The resource for the mouse down state, default: 3. Use 0 if 
					the resources has at least 3 frames, but there is no down state.
				</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="maxframes" type="Numeric" required="false">
				<help>The maximum number of frames to use, defaults to the number of 
					frames for the resoruce associated with this view. This is 
					useful for a subclass has no resource for this view. Default is 
					the total frames of basebutton.
				</help>
				<values />
			</parameter>
			<parameter name="normalResourceNumber" type="Numeric" required="false">
				<help>The resource for the mouse up state, and initial state of the 
					button.</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="onresourceviewcount" type="Any" required="false">
				<help>This event is sent when the resourceviewcount changes.</help>
				<values />
			</parameter>
			<parameter name="overResourceNumber" type="Numeric" required="false">
				<help>The resource for the mouse over state, default: 2. Use 0 if 
					the resource has at least 2 frames, but there is no over state.
				</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="reference" type="Function" required="false">
				<help>Where to send mouse events (the view that will be "clickable"), 
					default: this.</help>
				<values />
			</parameter>
			<parameter name="resourceviewcount" type="Numeric" required="false">
				<help>The first 'n' subviews that will respond to mouseevents by 
					changing the frame number of their resource.</help>
				<values />
			</parameter>
			<parameter name="respondtomouseout" type="boolean" required="false">
				<help>If this button does not respond to onmouseout or onmousedragout 
					events, set this flag to false. Default: true.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- 
				BASE COMPONENT 
			-->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE LIST ITEM === -->
		<tag name="baselistitem" creator="3" single="false" xmlstyle="true">
			<help>a group of these are managed by a baselist</help>
			<parameter name="onselected" type="Function" required="false">
				<help>Event sent when this item is selected.</help>
				<values />
			</parameter>
			<!-- BASE VALUE COMPONENT -->
			<parameter name="value" type="Any" required="false">
				<help>the value that this item represents. When selected, the 
					parent selection group's value will be set to this value. Most 
					subclasses require you to call getValue() to get the value of 
					the attribute.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE LIST === -->
		<tag name="baselist" creator="3" single="false" xmlstyle="true">
			<help>contains a group of baselistitems
				JavaScript: baselist Extends Baseformitem 
				This class is a container for a group of baselistitems. To use 
				baselist, baselistitem must be subclassed to provide a visual 
				representation of the list item. It supports single select by 
				default. Set multiselect to true to allow multiple selection 
				(shift-click for a range, control-click for an arbitrary set).
			</help>
			<parameter name="dataoption" type="String" required="false">
				<help>One of "lazy", "resize", "pooling", "none".</help>
				<values>
					<value option="lazy"/>
					<value option="resize"/>
					<value option="pooling"/>
					<value option="none"/>
				</values>
			</parameter>
			<parameter name="defaultSelection" type="Any" required="false">
				<help>The index of the default selected item, if none is provided 
					via the selected="true" attribute on an item.</help>
				<values />
			</parameter>
			<parameter name="itemclassname" type="String" required="false">
				<help>The name of the class for new items that will be created with 
					addItem().</help>
				<values />
			</parameter>
			<parameter name="multiselect" type="boolean" required="false">
				<help>If multiselect is true, multiple items may be selected. When 
					the shift key is down, a range of items is selected. When the 
					control key is down, any item may be added to the selection.
					</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="toggleselected" type="boolean" required="false">
				<help>When true, the first click on a list item selects it and the 
					second click deselects it.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- BASE FORM ITEM -->
			<!-- BASE VALUE COMPONENT -->
			<parameter name="value" type="Any" required="false">
				<help>the value that this item represents. When selected, the 
					parent selection group's value will be set to this value. Most 
					subclasses require you to call getValue() to get the value of 
					the attribute.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE GRID COLUMN === -->
		<tag name="basegridcolumn" creator="3" single="false" xmlstyle="true">
			<help>An abstract column in a grid.
				JavaScript: basegridcolumn Extends Basecomponent 
				basegridcolumn can be used in basegrids or grids to customize the 
				look of both the column header and the row contents for that column. 
				In cases where a standard column header look is desired, but the 
				contents may vary, use gridcolumn.
			</help>
			<parameter name="ascendComparator" type="Any" required="false">
				<help>An optional method. If defined, this method will be used when 
					the column is sorted when ascendsort is set to true. This method 
					should have the compartor signature. It should accept to string 
					argument and return 1, 0 , or -1, indicating that the two 
					arguments are in order, equivalent, or out of order, 
					respectively.</help>
				<values />
			</parameter>
			<parameter name="ascendsort" type="boolean" required="false">
				<help>If true, the next sort will be ascending, otherwise it will 
					be descending.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="colwidth" type="Numeric" required="false">
				<help>The current width of the column.</help>
				<values />
			</parameter>
			<parameter name="datatype" type="String" required="false">
				<help>Either "number" or "string". If "string", then dictionary 
					sort is used. If "number", then types are coerced to a number 
					before sorting.</help>
				<values>
					<value option="number" />
					<value option="string" />
				</values>
			</parameter>
			<parameter name="descendComparator" type="Function" required="false">
				<help>An optional method. If defined, this method will be used when
					 the column is sorted when ascendsort is set to false. This 
					 method should have the compartor signature. It should accept 
					 to string argument and return 1, 0 , or -1, indicating that 
					 the two arguments are in order, equivalent, or out of order, 
					 respectively.</help>
				<values />
			</parameter>
			<parameter name="hasSort" type="boolean" required="false">
				<help>Readonly; set by doSort method. If true, then this is the 
					current sort column.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="minwidth" type="Numeric" required="false">
				<help>The minimum width for this column. This is relevant if the 
					column can be resized.</help>
				<values />
			</parameter>
			<parameter name="sortpath" type="String" required="false">
				<help>An xpath expression to use to determine the sort key for this 
					column. By default, this is the column's datapath's xpath.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE GRID === -->
		<tag name="basegrid" creator="3" single="false" xmlstyle="true">
			<help>An abstract row-based container for data elements.
				JavaScript: basegrid Extends Basecomponent 
				basegrid is an abstract container for row-based data stored in a 
				dataset. Because basegrid uses lazy replication, it is an efficient 
				way to present large datasets, and it abstracts some of the 
				complications involved in maintaining a selection within a dataset.
			</help>
			<parameter name="bgcolor0" type="Numeric" required="false">
				<help>If given, sets the bgcolor for even numbered rows. If not 
					given, the bgcolor for these rows is taken from the style's 
					bgcolor.</help>
				<values />
			</parameter>
			<parameter name="bgcolor1" type="Numeric" required="false">
				<help>If given, sets the bgcolor for odd numbered rows. If not 
					given, the bgcolor for these rows is taken from the style's 
					bgcolor.</help>
				<values />
			</parameter>
			<parameter name="columns" type="Function" required="false">
				<help>An array holding the basegridcolumns used by this grid</help>
				<values />
			</parameter>
			<parameter name="contentdatapath" type="String" required="false">
				<help>The datapath to use for the contents of the grid. By default, 
					this is set to "*", meaning all of the nodes underneath the 
					datacontext of the grid.</help>
				<values />
			</parameter>
			<parameter name="hilite" type="Any" required="false">
				<help>The view which is currently hilited.</help>
				<values />
			</parameter>
			<parameter name="multiselect" type="boolean" required="false">
				<help>If true, the list will allow for multiple selection, and the 
					getSelection method will always return a list. If false, only 
					single selection is allowed.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="rowheight" type="Numeric" required="false">
				<help>Optional height for the rows contained by the grid. If no 
					value is given for this attribute, it will be set to the 
					calculated height of rows.</help>
				<values />
			</parameter>
			<parameter name="selectable" type="boolean" required="false">
				<help>If false, the rows are not clickable and the grid does not 
					support selection.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="showhlines" type="boolean" required="false">
				<help>If true, lines will be drawn (in component's style's 
					bordercolor) vertically at each at each column division. This 
					attribute can be set after instantiation.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="shownitems" type="Numeric" required="false">
				<help>Sets the height of the grid to show a maximum of 'n' items.</help>
				<values />
			</parameter>
			<parameter name="showvlines" type="boolean" required="false">
				<help>If true, lines will be drawn (in component's style's 
					bordercolor) horizontally at each at each row division. This 
					attribute cannot be set after instantiation.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="sizetoheader" type="boolean" required="false">
				<help>A boolean. If true, the grid will keep its width set to the 
					size of the header. This is automatically set to true for grids 
					that do not have a set width. This is initially set to 0, which 
					means that it is not true, but if it is explicitly set to false, 
					the automatic behavior will be disabled for grids with no set 
					width.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="spacing" type="Numeric" required="false">
				<help>Spacing between the rows.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE FORM ITEM=== -->
		<tag name="baseformitem" creator="3" single="false" xmlstyle="true">
			<help>an abstract class for components which are used in a form
				JavaScript: baseformitem Exends Basevaluecomponent 
				This abstract class works with form or baseform. All form 
				components subclass this.
			</help>
			<!-- BASE VALUE COMPONENT -->
			<parameter name="value" type="Any" required="false">
				<help>the value that this item represents. When selected, the 
					parent selection group's value will be set to this value. Most 
					subclasses require you to call getValue() to get the value of 
					the attribute.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE FORM === -->
		<tag name="baseform" creator="3" single="false" xmlstyle="true">
			<help>web form
				JavaScript: baseform Extends View 
				The baseform tag allows you to create a web form. The data 
				represented by components that are enclosed in the form tag can be 
				sent to the server using the submit tag. Each form component, such 
				as checkbox, combobox or radiogroup must have a name. The data is 
				submitted as name-value pairs, using the name and value of the 
				component.
				baseform provides no layout for its contents. If you want a simple 
				automatic form layout use the form tag.
			</help>
			<parameter name="formdata" type="Any" required="false">
				<help>Holds a reference to each datacomponent contained within the 
					form.</help>
				<values />
			</parameter>
			<!-- VIEW -->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE FOCUS VIEW === -->
		<tag name="basefocusview" creator="3" single="false" xmlstyle="true">
			<help>an abstract class for the focus indicator
				JavaScript: basefocusview Extends View 
				An abstract base class that responds to focus by animating to the 
				focused view and sizing itself to that view. A subclass of this 
				view may be used to override the default look and feel of the focus 
				indicator.
			</help>
			<parameter name="active" type="boolean" required="false">
				<help>true during keyboard navigation, when this view is visible</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="duration" type="Numeric" required="false">
				<help>the duration of the animation from one focused view to the 
					next</help>
				<values />
			</parameter>
			<parameter name="target" type="Any" required="false">
				<help>a reference to the view that is currently focused</help>
				<values />
			</parameter>
			<!-- VIEW -->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE DATE PICKER WEEK === -->
		<tag name="basedatepickerweek" creator="3" single="false" xmlstyle="true">
			<help>An abstract class representing a week for use with the 
				basedatepicker
				JavaScript: basedatepickerweek Extends View 
				Basedatepickerweek is an abstract class representing a week for use 
				with the basedatepicker. 
			</help>
			<parameter name="dayclass" type="Function" required="false">
				<help>Name of the day class instance to use.</help>
				<values />
			</parameter>
			<!-- VIEW -->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE DATE PICKER DAY === -->
		<tag name="basedatepickerday" creator="3" single="false" xmlstyle="true">
			<help>An abstract class representing a day for use with the 
				basedatepicker
				JavaScript: basedatepickerday Extends View 
				Basedatepickerday is an abstract class representing a day for use 
				with the basedatepicker. When creating an implementation of 
				basedatepickerday, it is expected that certain methods from 
				basedatepicker, basedatepickerday and basedatepickerweek will be 
				overridden to provide full  functionality of a datepicker. For 
				basedatepickerday, these methods include  buttonpush(), 
				buttonrelease(), gotFocus(), and removeFocus().
			</help>
			<parameter name="daynum" type="Numeric" required="false">
				<help>The day of the month to be displayed</help>
				<values />
			</parameter>
			<parameter name="disabled" type="boolean" required="false">
				<help>Indicates if this day should be enabled or disabled. The day 
					would be disbled if it should not show it's daynum.</help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="selectable" type="boolean" required="false">
				<help>Indicates if this day is selectable. The day is selectable if 
					it is within the range of possible selected dates</help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<!-- VIEW -->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- === BASE DATE PICKER === -->
		<tag name="basedatepicker" creator="3" single="false" xmlstyle="true">
			<help>An abstract date picker.
				JavaScript: basedatepicker Extends Basecomponent 
				Basedatepicker is an abstract class from which you can build a fully  
				functional month-based datepicker from. When creating an 
				implementation of  the basedatepicker, it is expected that certain 
				methods from basedatepicker,  basedatepickerday and 
				basedatepickerweek will be overridden to provide full functionality 
				of a datepicker. For datepicker, these methods include doSpaceUp(), 
				doEnterUp(), and optionally setMonthToShow(). See the source code 
				of  datepicker for a more extensive example. See also 
				basedatepickerday and  basedatepickerweek 
			</help>
			<parameter name="dayclass" type="Any" required="false">
				<help>The dayclass to use for this basedatepicker</help>
				<values />
			</parameter>
			<parameter name="earliestdate" type="Any" required="false">
				<help>The earliest date that is selectable.</help>
				<values />
			</parameter>
			<parameter name="latestdate" type="Any" required="false">
				<help>The latest date that is selectable.</help>
				<values />
			</parameter>
			<parameter name="selecteddate" type="Any" required="false">
				<help>The Date that is currently selected.</help>
				<values />
			</parameter>
			<parameter name="selecteddatepickerday" type="Any" required="false">
				<help>The datepickerday which has been selected.</help>
				<values />
			</parameter>
			<parameter name="showingdate" type="DateTime" required="false">
				<help>A Date object which represents the month to be shown.</help>
				<values />
			</parameter>
			<parameter name="showingmonth" type="Numeric" required="false">
				<help>The month that is currently showing in the datepicker.</help>
				<values />
			</parameter>
			<parameter name="showingyear" type="Numeric" required="false">
				<help>The year that is currently showing in the datepicker.</help>
				<values />
			</parameter>
			<parameter name="weekclass" type="Any" required="false">
				<help>The weekclass to use for this basedatepicker</help>
				<values />
			</parameter>
			<parameter name="xinset" type="Numeric" required="false">
				<help>The number if pixels from this.x to show the datepicker days</help>
				<values />
			</parameter>
			<parameter name="yinset" type="Numeric" required="false">
				<help>The number if pixels from this.y to show the datepicker days</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- ==== BASE COMBOBOX ==== -->
		<tag name="basecombobox" creator="3" single="false" xmlstyle="true">
			<help>baseclass for a combobox
				Extends Baseformitem 
				Extend this base class to create a combobox with a custom popup 
				control, and to change the size of the font.
				The number of items shown in the combobox can be set using the 
				shownitems attribute. If there are more items available than are 
				shown, a scrollbar will be created automatically.
				The list of items in a combobox can be created explicity using the 
				"textlistitem" tags with assigned text and value attributes.
			</help>
			<parameter name="attachoffset" type="Numeric" required="false">
				<help>The vertical offset of the floatinglist attached to this 
					combobox.</help>
				<values />
			</parameter>
			<parameter name="autoscrollbar" type="boolean" required="false">
				<help>Whether a scrollbar should automatically show up when there 
					are more items than shownitems.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="bordersize" type="Numeric" required="false">
				<help>The border size ( in pixels ) of the popup list.</help>
				<values />
			</parameter>
			<parameter name="dataoption" type="String" required="false">
				<help>One of "lazy", "resize", "pooling", "none".</help>
				<values>
					<value option="lazy"/>
					<value option="resize"/>
					<value option="pooling"/>
					<value option="none"/>
				</values>
			</parameter>
			<parameter name="defaultselection" type="Numeric" required="false">
				<help>The number of the item that is initially selected. This 
					overrides the value defined in the defaulttext attribute</help>
				<values />
			</parameter>
			<parameter name="defaulttext" type="String" required="false">
				<help>The text that appears in the text field when no item is 
					selected.</help>
				<values />
			</parameter>
			<parameter name="editable" type="boolean" required="false">
				<help>Make the text field of this combobox editable.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isopen" type="boolean" required="false">
				<help>Indicates whether or not the popup list is showing.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="itemclassname" type="String" required="false">
				<help>The class that is used to create an item in the list when 
					itemdatapath is assigned.</help>
				<values />
			</parameter>
			<parameter name="ondefaultselection" type="Any" required="false">
				<help>This event is sent when the default selection is set.</help>
				<values />
			</parameter>
			<parameter name="shownitems" type="Numeric" required="false">
				<help>Sets the height of the combobox to show 'n' items.</help>
				<values />
			</parameter>
			<parameter name="spacing" type="Numeric" required="false">
				<help>The spacing size ( in pixels ) between items in the pop-up 
					list.</help>
				<values />
			</parameter>
			<parameter name="text_width" type="Numeric" required="false">
				<help>the width the text. default: combowidth - 19</help>
				<values />
			</parameter>
			<parameter name="text_x" type="Numeric" required="false">
				<help>the x position of the text. default: 2</help>
				<values />
			</parameter>
			<parameter name="text_y" type="Numeric" required="false">
				<help>the y position of the text. default: 2</help>
				<values />
			</parameter>
			<!-- BASE FROM ITEM -->
			<parameter name="value" type="Any" required="false">
				<help>the value that this item represents. When selected, the 
					parent selection group's value will be set to this value. Most 
					subclasses require you to call getValue() to get the value of 
					the attribute.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- ==== BASE FROM ITEM COMPONENT ==== -->
		<tag name="baseformitem" creator="3" single="false" xmlstyle="true">
			<help>an abstract class for components which are used in a form
				JavaScript: baseformitem Extends Basevaluecomponent 
				This abstract class works with form or baseform. All form components 
				subclass this.
			</help>
			<parameter name="value" type="Any" required="false">
				<help>the value that this item represents. When selected, the 
					parent selection group's value will be set to this value. Most 
					subclasses require you to call getValue() to get the value of 
					the attribute.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- ==== BASE VALUE COMPONENT ==== -->
		<tag name="basevaluecomponent" creator="3" single="false" xmlstyle="true">
			<help>an abstract class for components which represent data
				JavaScript: basevaluecomponent Extends Basecomponent 
				This abstract class provides a value attribute with data binding to 
				a specific valuedatapath.</help>
			<parameter name="value" type="Any" required="false">
				<help>the value that this item represents. When selected, the 
					parent selection group's value will be set to this value. Most 
					subclasses require you to call getValue() to get the value of 
					the attribute.</help>
				<values />
			</parameter>
			<!-- BASE COMPONENT -->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- ==== BASE BUTTON REPEATER ==== -->
		<tag name="basebuttonrepeater" creator="3" single="false" xmlstyle="true">
			<help>a basebutton that sends an event if the mouse is held down.
				JavaScript: basebuttonrepeater Extends Basebutton 
				This class is a simple extension of basebutton. If the user holds 
				the mouse button down over the button (for more than a half second), 
				then an event onmousestilldown will be sent. The onmousestilldown 
				event will continue to be sent every 50 milliseconds until the mouse 
				button is released.
			</help>
			<parameter name="disabledResourceNumber" type="Numeric" required="false">
				<help>The resource for the disabled state, default: 4. Use 0 if 
					there are the resource has at least 4 frames, but there is no 
					disabled state.</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="downResourceNumber" type="Numeric" required="false">
				<help>The resource for the mouse down state, default: 3. Use 0 if 
					the resources has at least 3 frames, but there is no down state.
				</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="maxframes" type="Numeric" required="false">
				<help>The maximum number of frames to use, defaults to the number of 
					frames for the resoruce associated with this view. This is 
					useful for a subclass has no resource for this view. Default is 
					the total frames of basebutton.
				</help>
				<values />
			</parameter>
			<parameter name="normalResourceNumber" type="Numeric" required="false">
				<help>The resource for the mouse up state, and initial state of the 
					button.</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="onresourceviewcount" type="Any" required="false">
				<help>This event is sent when the resourceviewcount changes.</help>
				<values />
			</parameter>
			<parameter name="overResourceNumber" type="Numeric" required="false">
				<help>The resource for the mouse over state, default: 2. Use 0 if 
					the resource has at least 2 frames, but there is no over state.
				</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="reference" type="Function" required="false">
				<help>Where to send mouse events (the view that will be "clickable"), 
					default: this.</help>
				<values />
			</parameter>
			<parameter name="resourceviewcount" type="Numeric" required="false">
				<help>The first 'n' subviews that will respond to mouseevents by 
					changing the frame number of their resource.</help>
				<values />
			</parameter>
			<parameter name="respondtomouseout" type="boolean" required="false">
				<help>If this button does not respond to onmouseout or onmousedragout 
					events, set this flag to false. Default: true.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- 
				BASE COMPONENT 
			-->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- ==== BASE BUTTON ==== -->
		<tag name="basebutton" creator="3" single="false" xmlstyle="true">
			<help>Abstract component for making buttons with up-over-down states.
				JavaScript: basebutton Extends Basecomponent 
				A basebutton is a view that encapsulates the basic event mechanisms 
				of a button (onclick, onmousedown, onmouseover).
				There are no visual elements to a basebutton so it requires a 
				multi-frame resource to work correctly.
			</help>
			<parameter name="disabledResourceNumber" type="Numeric" required="false">
				<help>The resource for the disabled state, default: 4. Use 0 if 
					there are the resource has at least 4 frames, but there is no 
					disabled state.</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="downResourceNumber" type="Numeric" required="false">
				<help>The resource for the mouse down state, default: 3. Use 0 if 
					the resources has at least 3 frames, but there is no down state.
				</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="maxframes" type="Numeric" required="false">
				<help>The maximum number of frames to use, defaults to the number of 
					frames for the resoruce associated with this view. This is 
					useful for a subclass has no resource for this view. Default is 
					the total frames of basebutton.
				</help>
				<values />
			</parameter>
			<parameter name="normalResourceNumber" type="Numeric" required="false">
				<help>The resource for the mouse up state, and initial state of the 
					button.</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="onresourceviewcount" type="Any" required="false">
				<help>This event is sent when the resourceviewcount changes.</help>
				<values />
			</parameter>
			<parameter name="overResourceNumber" type="Numeric" required="false">
				<help>The resource for the mouse over state, default: 2. Use 0 if 
					the resource has at least 2 frames, but there is no over state.
				</help>
				<values>
					<value option="0" />
					<value option="1" />
					<value option="2" />
					<value option="3" />
					<value option="4" />
				</values>
			</parameter>
			<parameter name="reference" type="Function" required="false">
				<help>Where to send mouse events (the view that will be "clickable"), 
					default: this.</help>
				<values />
			</parameter>
			<parameter name="resourceviewcount" type="Numeric" required="false">
				<help>The first 'n' subviews that will respond to mouseevents by 
					changing the frame number of their resource.</help>
				<values />
			</parameter>
			<parameter name="respondtomouseout" type="boolean" required="false">
				<help>If this button does not respond to onmouseout or onmousedragout 
					events, set this flag to false. Default: true.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<!-- 
				BASE COMPONENT 
			-->
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- VIEW -->
		<tag name="view" creator="3" single="false" xmlstyle="true">
			<help>The most basic viewable element. JavaScript: LzView
				Extends Node 
				The "view" is the most basic viewable element in a Laszlo 
				application. Anything that is displayed on the canvas is a view or 
				extends the view class. A view is a rectangle, which can be visible 
				or invisible, and which can contain other views or display 
				"resources" such as images, .swf files, or other supported media. 
				One view controls one displayable resource. The view system is 
				strictly hierarchical; that is, each view  has  a single parent but 
				can have multiple children.</help>
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- ====== BASE COMPONENT ===== -->
		<tag name="basecomponent" creator="3" xmlstyle="true" single="false">
			<help>An abstract class which all components subclass
				JavaScript: basecomponent Extends View 
				An abstract base class that handles focus, the text attribute, and 
				style.</help>
			<parameter name="doesenter" type="boolean" required="false">
				<help>If set to true, the component manager will call this component 
					with doEnterDown and doEnterUp when the enter key goes up or 
					down if it is focussed.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="enabled" type="boolean" required="false">
				<help>when false the component should appear as its disabled state 
					and not respond to user events (default: true) The component is 
					automatically set to clickable when enabled, and not clickable 
					when disabled.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="hasdefault" type="boolean" required="false">
				<help>set to true when this component will receive enter key events</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="isdefault" type="boolean" required="false">
				<help>If set to true, this component will be the default (and will 
					therefore receive the enter key) if it is nearest to the 
					focussed view, and if that focussed view does not have doesenter 
					set to true. "Nearness" is defined to mean the closest common 
					parent with the focussed view that is not excluded from the 
					mode, and which is visible onscreen.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="style" type="Any" required="false">
				<help>If null, the style is set to the inherited style from the 
					parent component, if no parent component the style will be the 
					canvas 'defaultstyle' attribute</help>
				<values/>
			</parameter>
			<parameter name="styleable" type="boolean" required="false">
				<help>whether style should be applied to this component</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help>the label or title of the component: instead of using this 
					attribute text may instead be placed withing the tag</help>
				<values/>
			</parameter>
			<!-- 
				VIEW 
			-->
			<parameter name="align" type="String" required="false">
				<help></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="Numeric" required="false">
				<help>The color of background of this view. Null if there is no 
					bgcolor. A number from 0 - 0xFFFFFF.</help>
				<values />
			</parameter>
			<parameter name="clickable" type="boolean" required="false">
				<help>must be set to true for the view to get mouse  events 
					(auto-set to true if a mouse event script is specified in the 
					tag)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="clickregion" type="String" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="clip" type="boolean" required="false">
				<help>If true, the resource and children of this view  are masked 
					to its width and height.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="cursor" type="String" required="false">
				<help>The cursor to display when the mouse is over this view. Any 
					resource can be used as a cursor. This attribute can be set for 
					any view with clickable=true, or any view whose class defaults 
					clickable to true.</help>
				<values />
			</parameter>
			<parameter name="fgcolor" type="Numeric" required="false">
				<help>A color to use to render object that appears inside this view,
					which includes any vector or bitmap art in the view's resource 
					and any contained views.</help>
				<values />
			</parameter>
			<parameter name="focusable" type="boolean" required="false">
				<help>If true, this view will participate in keyboard focus and 
					will receive focus events and keyboard events when it has the 
					focus. (see LzFocus for more details)</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="focustrap" type="boolean" required="false">
				<help>If true, this view "traps" the focus, for example in a window 
					or dialog. See focus manager (LzFocus) for more details.</help>
				<values>
					<value option="true"/>
					<value option="false"/>
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help>The font to use for any "text" or "inputtext" elements that 
					appear inside this view. Like all the font properties (fontstyle 
					and fontsize too) these properties cascade down the view 
					hierarchy until a new value is specified. When the font 
					attributes are modified at runtime, using JavaScript, the font 
					is changed for the view itself, not for any of its subviews.</help>
				<values />
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help>Pixel size to use to render text which appears inside this 
					view. The default is 8.</help>
				<values />
			</parameter>
			<parameter name="fontstyle" type="Numeric" required="false">
				<help>The style to use to render text fields that appear inside of 
					this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
				<values>
					<value option="plain" />
					<value option="bold" />
					<value option="italic" />
					<value option="bolditalic" />
				</values>
			</parameter>
			<parameter name="frame" type="Numeric" required="false">
				<help>See also the resource attribute. Setting this attribute will 
					change the frame that is being displayed by the resource 
					associated with this view. The first frame of the resource is 
					frame 0. Setting a view's 'donttrackplay' option to true will 
					allow the view's resource to play without updating the value of 
					the view's frame property. This can save CPU usage in cases 
					where the application doesn't need to know what frame the 
					resource is showing while it is playing.</help>
				<values />
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help>The height of the view</help>
				<values />
			</parameter>
			<parameter name="layout" type="Any" required="false">
				<help>A CSS property when declared in the tag: value sequence of 
					layout parameters,  which are used to create a layout that is 
					attached to this view. If there is a  class property, it names 
					the class of the layout; otherwise simplelayout is used.
					 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
					 spacing: 5. For Javascript usage, see the setLayout method.</help>
				<values />
			</parameter>
			<parameter name="onblur" type="Function" required="false">
				<help>The onblur script is executed when an element loses focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onclick" type="Function" required="false">
				<help>The onclick script is executed when the pointing device 
					button is clicked over an element.</help>
				<values />
			</parameter>
			<parameter name="ondata" type="Function" required="false">
				<help>The ondata script is executed when the data selected by a 
					view's datapath changes.</help>
				<values />
			</parameter>
			<parameter name="ondblclick" type="Function" required="false">
				<help>The ondblclick script is executed when the pointing device 
					button is double clicked over an element</help>
				<values />
			</parameter>
			<parameter name="onfocus" type="Function" required="false">
				<help>The onfocus script is executed when an element receives focus 
					either by the pointing device or by tabbing navigation.</help>
				<values />
			</parameter>
			<parameter name="onkeydown" type="Function" required="false">
				<help>The onkeydown script is executed when this view has the focus 
					and a key is pressed down. Multiple key down events are sent for 
					a key that is held down. If you want the script executed only 
					once, use onkeyup. This event is sent with the keycode for the 
					key that is down.</help>
				<values />
			</parameter>
			<parameter name="onkeyup" type="Function" required="false">
				<help>The onkeyup script is executed when this view has the focus 
					and a key is released. This event is sent with the keycode for 
					the key that went up.</help>
				<values />
			</parameter>
			<parameter name="onmousedown" type="Function" required="false">
				<help>The onmousedown script is executed when the pointing device 
					button is pressed over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseout" type="Function" required="false">
				<help>The onmouseout script is executed when the point device is 
					moved so that is is no longer over an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseover" type="Function" required="false">
				<help>The onmouseover script is executed when the pointing device 
					is moved onto an element.</help>
				<values />
			</parameter>
			<parameter name="onmouseup" type="Function" required="false">
				<help>The onmouseup script is executed when the pointing device 
					button is released over an element.</help>
				<values />
			</parameter>
			<parameter name="onselect" type="Function" required="false">
				<help />
				<values />
			</parameter>
			<parameter name="opacity" type="Numeric" required="false">
				<help>The opacity value for the view,  a number between 0 and 1</help>
				<values />
			</parameter>
			<parameter name="options" type="Numeric" required="false">
				<help>A list of CSS property names and values that configure the 
					behavior of objects, such as data binding and view layouts, 
					that operate on this view.</help>
				<values />
			</parameter>
			<parameter name="pixellock" type="boolean" required="false">
				<help>If true, values for width, height, x and y  are always 
					rounded down to the nearest integer</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="play" type="boolean" required="false">
				<help>If true, the resource attached to this view begins playing 
					when the view is instantiated.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="resource" type="String" required="false">
				<help>The name of this view's resource, or the URL the resource was
					loaded from.</help>
				<values />
			</parameter>
			<parameter name="rotation" type="Numeric" required="false">
				<help>The rotation value for the view (in degrees)  Value may be 
					less than zero or greater than 360.</help>
				<values />
			</parameter>
			<parameter name="selectiontype" type="String" required="false">
				<help />
				<values>
					<value option="none" />
					<value option="single" />
					<value option="toggle" />
					<value option="multi" />
					<value option="range" />
				</values>
			</parameter>
			<parameter name="stretches" type="String" required="false">
				<help>Setting stretches causes a view to change its coordinate space 
					so that everything it contains (resources and other views) fit 
					exactly into the view's width and/or height. The default for 
					this property is "none". This is used to resize a view's 
					contents by setting its width and/or height.</help>
				<values>
					<value option="width" />
					<value option="height" />
					<value option="both" />
				</values>
			</parameter>
			<parameter name="valign" type="String" required="false">
				<help>Creates a constraint on the view's y position which is a 
					function of its height and its parent's height. The default for 
					this is "top".</help>
				<values>
					<value option="top" />
					<value option="middle" />
					<value option="bottom" />
				</values>
			</parameter>
			<parameter name="visible" type="boolean" required="false">
				<help>A value of true means that this view is shown. A value of 
					false means that this view is hidden. Setting this attribute to 
					null  means that the runtime will hide this view when: its 
					opacity is 0, it has a  datapath that does not match a node, or 
					it is loading its media. In this  case, the the value of the 
					visible member of the view will reflect the view's current 
					visible state. This is the default behavior for this attribute. 
					Note  that an otherwise clickable view that is not visible will 
					have no click  region will not be clickable. Also be aware that 
					in Javascript, the &amp;&amp; operator does not coerce values 
					to booleans. For instance, given  an expression like this: 
					visible="a &amp;&amp; b", if  a is null, the value returned by 
					the constraint expression will be null -- not false.</help>
				<values>
					<value option="false"/>
					<value option="true"/>
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help>The width of the view</help>
				<values />
			</parameter>
			<parameter name="x" type="Numeric" required="false">
				<help>The x position of the view</help>
				<values />
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help>A value to be added to the  x position of this view before 
					drawing  it. This affects the apparent rotation point of the 
					view, as well as  its apparent x position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="xscale" type="Numeric" required="false">
				<help>The horizontal scaling applied to the view's resource. If 
					xscale is set, the view stretches in its x axis. A value of 1 
					means that the resource will be distorted in the horizontal axis.
					</help>
				<values />
			</parameter>
			<parameter name="y" type="Numeric" required="false">
				<help>The y position for the view</help>
				<values />
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help>A value to be added to the y position of this view  before 
					drawing it. This affects the apparent rotation point of the 
					view, as  well as its apparent y position. It does not affect 
					the view's width or its  internal coordinate system.</help>
				<values />
			</parameter>
			<parameter name="yscale" type="Numeric" required="false">
				<help>The vertical scaling applied to the view's resource. If yscale 
					is set, the view stretches in its y axis. A value of 1 means 
					that the resource will be distorted in the vertical axis.</help>
				<values />
			</parameter>
			<!-- 
				NODE 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- Extends Animatorgroup -->
		<tag name="animator" creator="3" single="false" xmlstyle="true">
			<help>Changes the value of another object's attribute over time.
				JavaScript: LzAnimator Extends Animatorgroup 
				Animators change the value of an object's attribute over a specified 
				duration in milliseconds.</help>
			<parameter name="attribute" type="String" required="false">
				<help>The name of the attribute whose value is animated. This 
					attribute is required on an animator, unless the animator is 
					inside an animatorgroup that specifies an attribute.</help>
				<values/>
			</parameter>	
			<parameter name="duration" type="Any" required="false">
				<help>The duration of the animation, in milliseconds 
					(1000 = 1 second).</help>
				<values/>
			</parameter>
			<parameter name="from" type="Numeric" required="false">
				<help>The start value for the animation. Defaults to the targeted 
					attribute's current value.</help>
				<values/>
			</parameter>
			<parameter name="indirect" type="boolean" required="false">
				<help>The start value for the animation. Defaults to the targeted 
					attribute's current value.</help>
				<values>
					<value option="true"></value>
					<value option="false"></value>
				</values>
			</parameter>
			<parameter name="motion" type="Any" required="false">
				<help/>
				<values>
					<value option="linear"></value>
					<value option="easein"></value>
					<value option="easeout"></value>
					<value option="easeboth"></value>
				</values>
			</parameter>
			<parameter name="onstart" type="Function" required="false">
				<help>Sent when the animator starts. This event is sent multiple 
					times if the animator repeats.</help>
				<values />
			</parameter>
			<parameter name="onstop" type="Function" required="false">
				<help>Event sent when the animator finishes.</help>
				<values />
			</parameter>
			<parameter name="paused" type="boolean" required="false">
				<help>If true, the running animator will pause. If false it will 
					resume.</help>
				<values>
					<value option="true"></value>
					<value option="false"></value>
				</values>
			</parameter>
			<parameter name="process" type="String" required="false">
				<help>"simultaneous" or none means process animators simultaneously 
					"sequential" means process animators sequentially</help>
				<values>
					<value option="sequential"/>
					<value option="simultaneous"/>
				</values>
			</parameter>
			<parameter name="relative" type="boolean" required="false">
				<help>Whether the to value is relative to the initial value of the 
					attribute (true), or is absolute (false).</help>
				<values>
					<value option="true"></value>
					<value option="false"></value>
				</values>
			</parameter>
			<parameter name="repeat" type="Any" required="false">
				<help>The number of times to repeat the animation. This should be a 
					positive integer, or 'Infinity'. Changes to the repeat value 
					take effect, after the animation is finished and then restarted.
				</help>
				<values/>
			</parameter>
			<parameter name="start" type="boolean" required="false">
				<help>If true, the animator will call start.</help>
				<values>
					<value option="true"></value>
					<value option="false"></value>
				</values>
			</parameter>
			<parameter name="target" type="String" required="false">
				<help>the object to animate</help>
				<values />
			</parameter>
			<parameter name="to" type="Numeric" required="false">
				<help>The final value for the targeted attribute.</help>
				<values />
			</parameter>
			<!-- 
				//// node //// 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
		
		<!-- Extends Node - this kind of sucks because there is a *lot* of
			duplicated items :( -->      
		<tag name="animatorgroup" creator="3" single="false" xmlstyle="true">
			<help>Coordinates the behavior of several animators. 
				JavaScript: LzAnimatorGroup Extends Node 
				An LzAnimatorGroup wraps several LzAnimators, and runs them in 
				sequence or simultaneously.</help>
			<parameter name="attribute" type="String" required="false">
				<help>The name of the attribute whose value is animated. This 
					attribute is required on an animator, unless the animator is 
					inside an animatorgroup that specifies an attribute.</help>
				<values/>
			</parameter>	
			<parameter name="duration" type="Any" required="false">
				<help>The duration of the animation, in milliseconds 
					(1000 = 1 second).</help>
				<values/>
			</parameter>
			<parameter name="from" type="Numeric" required="false">
				<help>The start value for the animation. Defaults to the targeted 
					attribute's current value.</help>
				<values/>
			</parameter>
			<parameter name="indirect" type="boolean" required="false">
				<help>The start value for the animation. Defaults to the targeted 
					attribute's current value.</help>
				<values>
					<value option="true"></value>
					<value option="false"></value>
				</values>
			</parameter>
			<parameter name="motion" type="Any" required="false">
				<help/>
				<values>
					<value option="linear"></value>
					<value option="easein"></value>
					<value option="easeout"></value>
					<value option="easeboth"></value>
				</values>
			</parameter>
			<parameter name="onstart" type="Function" required="false">
				<help>Sent when the animator starts. This event is sent multiple 
					times if the animator repeats.</help>
				<values />
			</parameter>
			<parameter name="onstop" type="Function" required="false">
				<help>Event sent when the animator finishes.</help>
				<values />
			</parameter>
			<parameter name="paused" type="boolean" required="false">
				<help>If true, the running animator will pause. If false it will 
					resume.</help>
				<values>
					<value option="true"></value>
					<value option="false"></value>
				</values>
			</parameter>
			<parameter name="process" type="String" required="false">
				<help>"simultaneous" or none means process animators simultaneously 
					"sequential" means process animators sequentially</help>
				<values>
					<value option="sequential"/>
					<value option="simultaneous"/>
				</values>
			</parameter>
			<parameter name="relative" type="boolean" required="false">
				<help>Whether the to value is relative to the initial value of the 
					attribute (true), or is absolute (false).</help>
				<values>
					<value option="true"></value>
					<value option="false"></value>
				</values>
			</parameter>
			<parameter name="repeat" type="Any" required="false">
				<help>The number of times to repeat the animation. This should be a 
					positive integer, or 'Infinity'. Changes to the repeat value 
					take effect, after the animation is finished and then restarted.
				</help>
				<values/>
			</parameter>
			<parameter name="start" type="boolean" required="false">
				<help>If true, the animator will call start.</help>
				<values>
					<value option="true"></value>
					<value option="false"></value>
				</values>
			</parameter>
			<parameter name="target" type="String" required="false">
				<help>the object to animate</help>
				<values />
			</parameter>
			<parameter name="to" type="Numeric" required="false">
				<help>The final value for the targeted attribute.</help>
				<values />
			</parameter>
			<!-- 
				//// node //// 
			-->
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
	  
		<!-- one of the base elements -->
		<tag name="node" creator="3" single="false" xmlstyle="true">
			<help>The base class for all Laszlo classes. JavaScript: LzNode
				The LzNode class provides the basic interface for Laszlo objects: 
				parent/child hierarchy, setters, interaction with the instantiator, 
				and reference resolution. New nodes (and subclasses thereof) can be 
				created by new-ing the class, like this:  var mynode= new LzNode( 
				parent , args ); where parent is the parent for the new node, and 
				args is an Object whose name/value pairs are attributes to be set 
				on the new node.</help>
			<parameter name="datapath" type="String" required="false">
				<help>A pointer to the LzDatapath attached to this node, if  there 
					is one.</help>
				<values/>
			</parameter>
			<parameter name="defaultplacement" type="String" required="false">
				<help>An attribute used in container classes. If  set to a non-null 
					value, this forces this node to run its determinePlacement 
					method for any node whose parent is this node. If the subnode 
					has its own  placement attribute, determinePlacement will be 
					called with that value,  otherwise it will be called with this 
					value. Note that a class's  defaultplacement attribute only 
					applies to children in subclasses or in  instances, not to the 
					children of the class itself. This means that if a  class and 
					its subclass both define a defaultplacement attribute, the  
					attribute will be set to one value before the subclass children 
					are created  and to a different one after they are created. See 
					the determinePlacement method.</help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help>A global identifer for this node. If given, a pointer  to this
					 node with the given value will be placed in the global 
					 namespace</help>
				<values/>
			</parameter>
			<parameter name="initstage" type="String" required="false">
				<help>The execution of a node's init method and sending of the oninit 
					event is under the control of its initstage attribute</help>
				<values>
					<value option="early" />
					<value option="normal" />
					<value option="late" />
					<value option="immediate" />
					<value option="defer" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help>The name for this subview. If given, then this node's parent
					 and immediate parent will use store a pointer to this node as 
					 the  given name value</help>
				<values />
			</parameter>
			<parameter name="oninit" type="Function" required="false">
				<help>The oninit script is executed once, after the element's 
					children, if any, have been initialized.</help>
				<values />
			</parameter>
			<parameter name="placement" type="Function" required="false">
				<help>Instructions to this element's container about where it should 
					go within the its container's internal hierarchy. See the 
					LzNode.determinePlacement method. Defaults to the container 
					itself.</help>
				<values />
			</parameter>
		</tag>
   </tags>
   
   <functions />
   <scopes />
</dictionary>
