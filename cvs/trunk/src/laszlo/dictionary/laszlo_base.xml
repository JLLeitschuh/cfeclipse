<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE dictionary [
	
	<!ENTITY value_boolean         SYSTEM "inc/value_boolean.xml">
	<!-- node paramters -->
	<!ENTITY node                  SYSTEM "inc/parameter_node.xml">
	<!-- views paramters -->
	<!ENTITY view                  SYSTEM "inc/parameter_view.xml">
	<!--base component -->
	<!ENTITY basecomponent         SYSTEM "inc/parameter_basecomponent.xml">
	<!--base value component -->
	<!ENTITY basevaluecomponent    SYSTEM "inc/parameter_basecomponent.xml">
	<!--base form item -->
	<!ENTITY baseformitem          SYSTEM "inc/parameter_baseformitem.xml">
	<!--base list -->
	<!ENTITY baselist              SYSTEM "inc/parameter_baselist.xml">
	<!--base list -->
	<!ENTITY animatorgroup         SYSTEM "inc/parameter_animatorgroup.xml">
	<!-- base button -->
	<!ENTITY basebutton            SYSTEM "inc/parameter_basebutton.xml">
	<!-- base combo box -->
	<!ENTITY basecombobox          SYSTEM "inc/parameter_basecombobox.xml">
	<!-- base date picker -->
	<!ENTITY basedatepicker        SYSTEM "inc/parameter_basedatepicker.xml">
	<!-- base focus view -->
	<!ENTITY basefocusview         SYSTEM "inc/parameter_basefocusview.xml">
	<!-- base form -->
	<!ENTITY baseform              SYSTEM "inc/parameter_baseform.xml">
	<!-- base grid -->
	<!ENTITY basegrid              SYSTEM "inc/parameter_basegrid.xml">
	<!-- base grid column -->
	<!ENTITY basegridcolumn        SYSTEM "inc/parameter_basegridcolumn.xml">
	<!-- base list item -->
	<!ENTITY baselistitem          SYSTEM "inc/parameter_baselistitem.xml">
	<!-- base scroll arrow -->
	<!ENTITY basescrollarrow       SYSTEM "inc/parameter_basescrollarrow.xml">
	<!-- base scroll bar -->
	<!ENTITY basescrollbar         SYSTEM "inc/parameter_basescrollbar.xml">
	<!-- base slider -->
	<!ENTITY baseslider            SYSTEM "inc/parameter_baseslider.xml">
	<!-- base tab -->
	<!ENTITY basetab               SYSTEM "inc/parameter_basetab.xml">
	<!--base tab element -->
	<!ENTITY basetabelement        SYSTEM "inc/parameter_basetabelement.xml">
	<!-- base tab pane -->
	<!ENTITY basetabpane           SYSTEM "inc/parameter_basetabpane.xml">
	<!-- base tabs -->
	<!ENTITY basetabs              SYSTEM "inc/parameter_basetabs.xml">
	<!-- base tab slider -->
	<!ENTITY basetabslider         SYSTEM "inc/parameter_basetabslider.xml">
	<!-- base tree -->
	<!ENTITY basetree              SYSTEM "inc/parameter_basetree.xml">
	<!-- base window -->
	<!ENTITY basewindow            SYSTEM "inc/parameter_basewindow.xml">
	
	<!-- you can use these to mark colors if you wish -->
	<!ENTITY color_norm   '4' >
	<!ENTITY color_form  '16'>
	<!ENTITY color_table '32'>
]>

<dictionary xmlns="http://www.cfeclipse.org/version1/dictionary" 
	xmlns:xs="http://www.w3.org/2001/XMLSchema" 
	xmlns:ns1="http://www.laszlosystems.com/2003/05/lzx" 
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" 
	xsi:schemaLocation="http://www.cfeclipse.org/version1/dictionary http://www.cfeclipse.org/version1/dictionary/dictionary.xsd"
>
	<tags>
		<!-- === BASE WINDOW === -->
		<tag name="basewindow" creator="&color_norm;" single="false" xmlstyle="true">
			<help>base window class
				JavaScript: basewindow Extends Basecomponent 
				This abstract class provides useful methods and states for a view 
				that is moveable and resizeable.</help>
			&basewindow;
		</tag>
		
		<!-- === BASE TREE === -->
		<tag name="basetree" creator="3" single="false" xmlstyle="true">
			<help>An abstract base class to build tree controls.
				JavaScript: basetree Extends Basecomponent 
				You can subclass basetree to build a tree control with your own 
				look and feel. Basetree has two content areas: item and children. 
				The item view is where the visual component of the tree should be 
				placed. Any view that you want to place in the tree node should be 
				placed in item. You can use placement="item". The children view is 
				the defaultplacement for basetree.</help>
			&basetree;
		</tag>
		
		<!-- === BASE TRACK GROUP === -->
		<tag name="basetrackgroup" creator="3" single="false" xmlstyle="true">
			<help>used for grouping a set of views responding to mousetrack events.
				JavaScript: basetrackgroup Extends View 
				A utility class which simplifies tracking of cursor movement across 
				a set of views while in a mousedown state. This involves creating a 
				trackgroup with a unique ID and the registering of any views 
				associated with that trackgroup.</help>
			<parameter name="activateevents" type="Any" required="false">
				<help>an array of events which will activate tracking. By default: 
					['onmousedown']. To override, you must declare as once</help>
				<values />
			</parameter>
			<parameter name="boundsref" type="Any" required="false">
				<help>The view that will be used to define the bounding rect for 
					tracking the mouse</help>
				<values />
			</parameter>
			<parameter name="deactivateevents" type="Any" required="false">
				<help>an array of events which will deactivate tracking. By default: 
					['onmouseup']. To override, you must declare as once.</help>
				<values />
			</parameter>
			<parameter name="tracking" type="Any" required="false">
				<help>indicates if this trackgroup is currently tracking or not. It 
					can bet set to turn tracking on or off, or use the methods 
					activatetrackgroup and deactivatetrackgroup</help>
				<values />
			</parameter>
			<parameter name="trackingrate" type="Numeric" required="false">
				<help>The periodic rate in milliseconds to track the mouse</help>
				<values />
			</parameter>
			&view;
		</tag>
		
		<!-- === BASE TAB SLIDER === -->
		<tag name="basetabslider" creator="3" single="false" xmlstyle="true">
			<help>A non-visual container that animates and coordinates the sliding 
				of  basetabelements
				JavaScript: basetabslider Extends Baselist 
				A basetabslider coordinates the opening and closing of its 
				basetabelements contained within its scope. basetabslider and 
				basetabelement have no visual aspects. The tabslider class (which 
				extends basetabslider) does contain a visual UI and shows how 
				basetabslider can be extended to create your own visual framework 
				for a unique tab slider.</help>
			&basetabslider;
		</tag>
		
		<!-- === BASE TABS CONTENT === -->
		<tag name="basetabscontent" creator="3" single="false" xmlstyle="true">
			<help>The non-visual container for basetabpanes.
				JavaScript: basetabscontent Extends Basecomponent 
				basetabscontent is the non-visual container (and immediate parent) 
				of basetabpanes. Extend basetabscontent to give the content area of 
				your basetabs a look, e.g., adding borders to your content. 
				basetabscontent is a child of the basetabs component.</help>
			<!-- basecomponet -->
			&basecomponent;
		</tag>
		
		<!-- === BASE TABS BAR === -->
		<tag name="basetabsbar" creator="3" single="false" xmlstyle="true">
			<help>A non-visual container for basetab components.
				JavaScript: basetabsbar Extends Baselist
				A basetabsbar is a non-visual container class that uses a default 
				x-axis simplelayout to lay out its basetab children. basetabsbar is 
				contained in a basetabs component.</help>
			<!-- baselist -->
			&baselist;
		</tag>
		
		<!-- === BASE TABS === -->
		<tag name="basetabs" creator="3" single="false" xmlstyle="true">
			<help>A non-visual container for basetabpanes.
				JavaScript: basetabs Extends Basecomponent 
				The basetabs component conceptually houses a row of tabs that 
				control the visibility of a stack of basetabpanes. When a 
				basetabpane is added to the basetab component, a corresponding 
				basetab is created for that basetabpane.</help>
			&basetabs;
		</tag>
		
		<!-- === BASE TAB PANE === -->
		<tag name="basetabpane" creator="3" single="false" xmlstyle="true">
			<help>A non-visual tabpane for the basetabs component.
				JavaScript: basetabpane Extends Basecomponent 
				A basetabpane is the non-visual container for content in basetabs. 
				Each basetabpane has a corresponding basetab created. Normally, you 
				won't want to extend this class. If you want a consistent background 
				across all basetabpanes, you can add a background to your 
				basetabscontent component. If you want a different background for 
				each basetabpane, you could do that in the content placed inside of 
				your basetabpane.</help>
			&basetabpane;
		</tag>
		
		<!-- === BASE TAB ELEMENT === -->
		<tag name="basetabelement" creator="3" single="false" xmlstyle="true">
			<help>Base class for the contents of a basetabslider.
				JavaScript: basetabelement Extends Baselistitem 
				basetabelement is the base class for the contents of a 
				basetabslider. The basetabelement is focusable if it is closed, and 
				not focusable when it is open.</help>
			&basetabelement;
		</tag>	
		
		<!-- === BASE TAB === -->
		<tag name="basetab" creator="3" single="false" xmlstyle="true">
			<help>A non-visual tab component for basetabsbar.
				JavaScript: basetab Extends Baselistitem 
				basetab is a non-visual representation of a tab that is contained 
				within a basetabsbar component. This is the default tab class that 
				the basetabs component uses.</help>
			&basetab;
		</tag>
		
		
		<!-- === BASE SLIDER === -->
		<tag name="baseslider" creator="3" single="false" xmlstyle="true">
			<help>A non-visual base class for implementing sliders.
				JavaScript: baseslider Extends Basevaluecomponent 
				Baseslider is a non-visual representation of a slider.</help>
			&baseslider;
		</tag>
		
		<!-- === BASE SCROLL TRACK === -->
		<tag name="basescrolltrack" creator="3" single="false" xmlstyle="true">
			<help>Provides non-visual aspects of a scrollbar track.
				JavaScript: basescrolltrack Extends Basebuttonrepeater 
				This class must be used with basescrollbar. See basescrollbar for 
				more details.</help>
			<parameter name="direction" type="Numeric" required="false">
				<help>The direction in which the scroll should move. Use -1 to go 
					back. Default: 1</help>
				<values />
			</parameter>
			<!-- same as BASE BUTTON REPEATER -->
			&basebutton;
		</tag>
		
		<!-- === BASE SCROLL THUMB === -->
		<tag name="basescrollthumb" creator="3" single="false" xmlstyle="true">
			<help>Provides non-visual aspects of a scrollbar thumb.
				JavaScript: basescrollthumb Extends Basecomponent 
				This class must be used with basescrollbar. The thumb automatically 
				scales its height to display the relationship between the target 
				height and the track height.</help>
			&basecomponent;
		</tag>
		
		<!-- === BASE SCROLL BAR === -->
		<tag name="basescrollbar" creator="3" single="false" xmlstyle="true">
			<help>Provides non-visual aspects of scrollbar.
				JavaScript: basescrollbar Extends Basecomponent 
				If you want to create a scrollbar with a custom look, you can use 
				basescrollbar along with helper classes basescrolltrack, 
				basescrollthumb, and basescrollarrow. These classes will allow you 
				to change resources, colors, and the position or presence of 
				various elements.</help>
			&basescrollbar;
		</tag>
		
		<!-- === BASE SCROLL ARROW === -->
		<tag name="basescrollarrow" creator="3" single="false" xmlstyle="true">
			<help>Provides non-visual aspects of scrollbar's arrow.
				JavaScript: basescrollarrow Extends Basebuttonrepeater 
				This is a simple helper class to provide scrollbar arrow behavior. 
				If the mouse is held down on the arrow, the scrollbar will scroll 
				until the mouse button is released.</help>
			&basescrollarrow;
		</tag>
		
		<!-- === BASE LIST ITEM === -->
		<tag name="baselistitem" creator="3" single="false" xmlstyle="true">
			<help>a group of these are managed by a baselist</help>
			&baselistitem;
		</tag>
		
		<!-- === BASE LIST === -->
		<tag name="baselist" creator="3" single="false" xmlstyle="true">
			<help>contains a group of baselistitems
				JavaScript: baselist Extends Baseformitem 
				This class is a container for a group of baselistitems. To use 
				baselist, baselistitem must be subclassed to provide a visual 
				representation of the list item. It supports single select by 
				default. Set multiselect to true to allow multiple selection 
				(shift-click for a range, control-click for an arbitrary set).
			</help>
			&baselist;
		</tag>
		
		<!-- === BASE GRID COLUMN === -->
		<tag name="basegridcolumn" creator="3" single="false" xmlstyle="true">
			<help>An abstract column in a grid.
				JavaScript: basegridcolumn Extends Basecomponent 
				basegridcolumn can be used in basegrids or grids to customize the 
				look of both the column header and the row contents for that column. 
				In cases where a standard column header look is desired, but the 
				contents may vary, use gridcolumn.
			</help>
			&basegridcolumn;
		</tag>
		
		<!-- === BASE GRID === -->
		<tag name="basegrid" creator="3" single="false" xmlstyle="true">
			<help>An abstract row-based container for data elements.
				JavaScript: basegrid Extends Basecomponent 
				basegrid is an abstract container for row-based data stored in a 
				dataset. Because basegrid uses lazy replication, it is an efficient 
				way to present large datasets, and it abstracts some of the 
				complications involved in maintaining a selection within a dataset.
			</help>
			&basegrid;
		</tag>
		
		<!-- === BASE FORM ITEM=== -->
		<tag name="baseformitem" creator="3" single="false" xmlstyle="true">
			<help>an abstract class for components which are used in a form
				JavaScript: baseformitem Exends Basevaluecomponent 
				This abstract class works with form or baseform. All form 
				components subclass this.
			</help>
			&baseformitem;
		</tag>
		
		<!-- === BASE FORM === -->
		<tag name="baseform" creator="3" single="false" xmlstyle="true">
			<help>web form
				JavaScript: baseform Extends View 
				The baseform tag allows you to create a web form. The data 
				represented by components that are enclosed in the form tag can be 
				sent to the server using the submit tag. Each form component, such 
				as checkbox, combobox or radiogroup must have a name. The data is 
				submitted as name-value pairs, using the name and value of the 
				component.
				baseform provides no layout for its contents. If you want a simple 
				automatic form layout use the form tag.
			</help>
			&baseform;
		</tag>
		
		<!-- === BASE FOCUS VIEW === -->
		<tag name="basefocusview" creator="3" single="false" xmlstyle="true">
			<help>an abstract class for the focus indicator
				JavaScript: basefocusview Extends View 
				An abstract base class that responds to focus by animating to the 
				focused view and sizing itself to that view. A subclass of this 
				view may be used to override the default look and feel of the focus 
				indicator.
			</help>
			&basefocusview;
		</tag>
		
		<!-- === BASE DATE PICKER WEEK === -->
		<tag name="basedatepickerweek" creator="3" single="false" xmlstyle="true">
			<help>An abstract class representing a week for use with the 
				basedatepicker
				JavaScript: basedatepickerweek Extends View 
				Basedatepickerweek is an abstract class representing a week for use 
				with the basedatepicker. 
			</help>
			<parameter name="dayclass" type="Function" required="false">
				<help>Name of the day class instance to use.</help>
				<values />
			</parameter>
			&view;
		</tag>
		
		<!-- === BASE DATE PICKER DAY === -->
		<tag name="basedatepickerday" creator="3" single="false" xmlstyle="true">
			<help>An abstract class representing a day for use with the 
				basedatepicker
				JavaScript: basedatepickerday Extends View 
				Basedatepickerday is an abstract class representing a day for use 
				with the basedatepicker. When creating an implementation of 
				basedatepickerday, it is expected that certain methods from 
				basedatepicker, basedatepickerday and basedatepickerweek will be 
				overridden to provide full  functionality of a datepicker. For 
				basedatepickerday, these methods include  buttonpush(), 
				buttonrelease(), gotFocus(), and removeFocus().
			</help>
			<parameter name="daynum" type="Numeric" required="false">
				<help>The day of the month to be displayed</help>
				<values />
			</parameter>
			<parameter name="disabled" type="boolean" required="false">
				<help>Indicates if this day should be enabled or disabled. The day 
					would be disbled if it should not show it's daynum.</help>
				<values>
					&value_boolean;
				</values>
			</parameter>
			<parameter name="selectable" type="boolean" required="false">
				<help>Indicates if this day is selectable. The day is selectable if 
					it is within the range of possible selected dates</help>
				<values>
					&value_boolean;
				</values>
			</parameter>
			&view;
		</tag>
		
		<!-- === BASE DATE PICKER === -->
		<tag name="basedatepicker" creator="3" single="false" xmlstyle="true">
			<help>An abstract date picker.
				JavaScript: basedatepicker Extends Basecomponent 
				Basedatepicker is an abstract class from which you can build a fully  
				functional month-based datepicker from. When creating an 
				implementation of  the basedatepicker, it is expected that certain 
				methods from basedatepicker,  basedatepickerday and 
				basedatepickerweek will be overridden to provide full functionality 
				of a datepicker. For datepicker, these methods include doSpaceUp(), 
				doEnterUp(), and optionally setMonthToShow(). See the source code 
				of  datepicker for a more extensive example. See also 
				basedatepickerday and  basedatepickerweek 
			</help>
			&basedatepicker;
		</tag>
		
		<!-- ==== BASE COMBOBOX ==== -->
		<tag name="basecombobox" creator="3" single="false" xmlstyle="true">
			<help>baseclass for a combobox
				Extends Baseformitem 
				Extend this base class to create a combobox with a custom popup 
				control, and to change the size of the font.
				The number of items shown in the combobox can be set using the 
				shownitems attribute. If there are more items available than are 
				shown, a scrollbar will be created automatically.
				The list of items in a combobox can be created explicity using the 
				"textlistitem" tags with assigned text and value attributes.
			</help>
			&basecombobox;
		</tag>
		
		<!-- ==== BASE FROM ITEM COMPONENT ==== -->
		<tag name="baseformitem" creator="3" single="false" xmlstyle="true">
			<help>an abstract class for components which are used in a form
				JavaScript: baseformitem Extends Basevaluecomponent 
				This abstract class works with form or baseform. All form components 
				subclass this.
			</help>
			&baseformitem;
		</tag>
		
		<!-- ==== BASE VALUE COMPONENT ==== -->
		<tag name="basevaluecomponent" creator="3" single="false" xmlstyle="true">
			<help>an abstract class for components which represent data
				JavaScript: basevaluecomponent Extends Basecomponent 
				This abstract class provides a value attribute with data binding to 
				a specific valuedatapath.</help>
			&basevaluecomponent;
		</tag>
		
		<!-- ==== BASE BUTTON REPEATER ==== -->
		<tag name="basebuttonrepeater" creator="3" single="false" xmlstyle="true">
			<help>a basebutton that sends an event if the mouse is held down.
				JavaScript: basebuttonrepeater Extends Basebutton 
				This class is a simple extension of basebutton. If the user holds 
				the mouse button down over the button (for more than a half second), 
				then an event onmousestilldown will be sent. The onmousestilldown 
				event will continue to be sent every 50 milliseconds until the mouse 
				button is released.
			</help>
			&basebutton;
		</tag>
		
		<!-- ==== BASE BUTTON ==== -->
		<tag name="basebutton" creator="3" single="false" xmlstyle="true">
			<help>Abstract component for making buttons with up-over-down states.
				JavaScript: basebutton Extends Basecomponent 
				A basebutton is a view that encapsulates the basic event mechanisms 
				of a button (onclick, onmousedown, onmouseover).
				There are no visual elements to a basebutton so it requires a 
				multi-frame resource to work correctly.
			</help>
			&basebutton;
		</tag>
		
		<!-- ====== BASE COMPONENT ===== -->
		<tag name="basecomponent" creator="3" xmlstyle="true" single="false">
			<help>An abstract class which all components subclass
				JavaScript: basecomponent Extends View 
				An abstract base class that handles focus, the text attribute, and 
				style.</help>
			&basecomponent;
		</tag>
   </tags>
   
   <functions />
   <scopes />
</dictionary>
