<!-- VIEW -->
<parameter name="align" type="String" required="false">
	<help></help>
	<values>
		<value option="left" />
		<value option="center" />
		<value option="right" />
	</values>
</parameter>
<parameter name="bgcolor" type="Numeric" required="false">
	<help>The color of background of this view. Null if there is no 
		bgcolor. A number from 0 - 0xFFFFFF.</help>
	<values />
</parameter>
<parameter name="clickable" type="boolean" required="false">
	<help>must be set to true for the view to get mouse  events 
		(auto-set to true if a mouse event script is specified in the 
		tag)</help>
	<values>
		&value_boolean;
	</values>
</parameter>
<parameter name="clickregion" type="String" required="false">
	<help />
	<values />
</parameter>
<parameter name="clip" type="boolean" required="false">
	<help>If true, the resource and children of this view  are masked 
		to its width and height.</help>
	<values>
		&value_boolean;
	</values>
</parameter>
<parameter name="cursor" type="String" required="false">
	<help>The cursor to display when the mouse is over this view. Any 
		resource can be used as a cursor. This attribute can be set for 
		any view with clickable=true, or any view whose class defaults 
		clickable to true.</help>
	<values />
</parameter>
<parameter name="fgcolor" type="Numeric" required="false">
	<help>A color to use to render object that appears inside this view,
		which includes any vector or bitmap art in the view's resource 
		and any contained views.</help>
	<values />
</parameter>
<parameter name="focusable" type="boolean" required="false">
	<help>If true, this view will participate in keyboard focus and 
		will receive focus events and keyboard events when it has the 
		focus. (see LzFocus for more details)</help>
	<values>
		&value_boolean;
	</values>
</parameter>
<parameter name="focustrap" type="boolean" required="false">
	<help>If true, this view "traps" the focus, for example in a window 
		or dialog. See focus manager (LzFocus) for more details.</help>
	<values>
		&value_boolean;
	</values>
</parameter>
<parameter name="font" type="String" required="false">
	<help>The font to use for any "text" or "inputtext" elements that 
		appear inside this view. Like all the font properties (fontstyle 
		and fontsize too) these properties cascade down the view 
		hierarchy until a new value is specified. When the font 
		attributes are modified at runtime, using JavaScript, the font 
		is changed for the view itself, not for any of its subviews.</help>
	<values />
</parameter>
<parameter name="fontsize" type="Numeric" required="false">
	<help>Pixel size to use to render text which appears inside this 
		view. The default is 8.</help>
	<values />
</parameter>
<parameter name="fontstyle" type="Numeric" required="false">
	<help>The style to use to render text fields that appear inside of 
		this view. Once of "plain", "bold" , "italic" or "bolditalic".</help>
	<values>
		<value option="plain" />
		<value option="bold" />
		<value option="italic" />
		<value option="bolditalic" />
	</values>
</parameter>
<parameter name="frame" type="Numeric" required="false">
	<help>See also the resource attribute. Setting this attribute will 
		change the frame that is being displayed by the resource 
		associated with this view. The first frame of the resource is 
		frame 0. Setting a view's 'donttrackplay' option to true will 
		allow the view's resource to play without updating the value of 
		the view's frame property. This can save CPU usage in cases 
		where the application doesn't need to know what frame the 
		resource is showing while it is playing.</help>
	<values />
</parameter>
<parameter name="height" type="Numeric" required="false">
	<help>The height of the view</help>
	<values />
</parameter>
<parameter name="layout" type="Any" required="false">
	<help>A CSS property when declared in the tag: value sequence of 
		layout parameters,  which are used to create a layout that is 
		attached to this view. If there is a  class property, it names 
		the class of the layout; otherwise simplelayout is used.
		 Examples: axis: x, class: constantlayout; axis: y;  axis: x; 
		 spacing: 5. For Javascript usage, see the setLayout method.</help>
	<values />
</parameter>
<parameter name="onblur" type="Function" required="false">
	<help>The onblur script is executed when an element loses focus 
		either by the pointing device or by tabbing navigation.</help>
	<values />
</parameter>
<parameter name="onclick" type="Function" required="false">
	<help>The onclick script is executed when the pointing device 
		button is clicked over an element.</help>
	<values />
</parameter>
<parameter name="ondata" type="Function" required="false">
	<help>The ondata script is executed when the data selected by a 
		view's datapath changes.</help>
	<values />
</parameter>
<parameter name="ondblclick" type="Function" required="false">
	<help>The ondblclick script is executed when the pointing device 
		button is double clicked over an element</help>
	<values />
</parameter>
<parameter name="onfocus" type="Function" required="false">
	<help>The onfocus script is executed when an element receives focus 
		either by the pointing device or by tabbing navigation.</help>
	<values />
</parameter>
<parameter name="onkeydown" type="Function" required="false">
	<help>The onkeydown script is executed when this view has the focus 
		and a key is pressed down. Multiple key down events are sent for 
		a key that is held down. If you want the script executed only 
		once, use onkeyup. This event is sent with the keycode for the 
		key that is down.</help>
	<values />
</parameter>
<parameter name="onkeyup" type="Function" required="false">
	<help>The onkeyup script is executed when this view has the focus 
		and a key is released. This event is sent with the keycode for 
		the key that went up.</help>
	<values />
</parameter>
<parameter name="onmousedown" type="Function" required="false">
	<help>The onmousedown script is executed when the pointing device 
		button is pressed over an element.</help>
	<values />
</parameter>
<parameter name="onmouseout" type="Function" required="false">
	<help>The onmouseout script is executed when the point device is 
		moved so that is is no longer over an element.</help>
	<values />
</parameter>
<parameter name="onmouseover" type="Function" required="false">
	<help>The onmouseover script is executed when the pointing device 
		is moved onto an element.</help>
	<values />
</parameter>
<parameter name="onmouseup" type="Function" required="false">
	<help>The onmouseup script is executed when the pointing device 
		button is released over an element.</help>
	<values />
</parameter>
<parameter name="onselect" type="Function" required="false">
	<help />
	<values />
</parameter>
<parameter name="opacity" type="Numeric" required="false">
	<help>The opacity value for the view,  a number between 0 and 1</help>
	<values />
</parameter>
<parameter name="options" type="Numeric" required="false">
	<help>A list of CSS property names and values that configure the 
		behavior of objects, such as data binding and view layouts, 
		that operate on this view.</help>
	<values />
</parameter>
<parameter name="pixellock" type="boolean" required="false">
	<help>If true, values for width, height, x and y  are always 
		rounded down to the nearest integer</help>
	<values>
		<value option="false"/>
		<value option="true"/>
	</values>
</parameter>
<parameter name="play" type="boolean" required="false">
	<help>If true, the resource attached to this view begins playing 
		when the view is instantiated.</help>
	<values>
		<value option="false"/>
		<value option="true"/>
	</values>
</parameter>
<parameter name="resource" type="String" required="false">
	<help>The name of this view's resource, or the URL the resource was
		loaded from.</help>
	<values />
</parameter>
<parameter name="rotation" type="Numeric" required="false">
	<help>The rotation value for the view (in degrees)  Value may be 
		less than zero or greater than 360.</help>
	<values />
</parameter>
<parameter name="selectiontype" type="String" required="false">
	<help />
	<values>
		<value option="none" />
		<value option="single" />
		<value option="toggle" />
		<value option="multi" />
		<value option="range" />
	</values>
</parameter>
<parameter name="stretches" type="String" required="false">
	<help>Setting stretches causes a view to change its coordinate space 
		so that everything it contains (resources and other views) fit 
		exactly into the view's width and/or height. The default for 
		this property is "none". This is used to resize a view's 
		contents by setting its width and/or height.</help>
	<values>
		<value option="width" />
		<value option="height" />
		<value option="both" />
	</values>
</parameter>
<parameter name="valign" type="String" required="false">
	<help>Creates a constraint on the view's y position which is a 
		function of its height and its parent's height. The default for 
		this is "top".</help>
	<values>
		<value option="top" />
		<value option="middle" />
		<value option="bottom" />
	</values>
</parameter>
<parameter name="visible" type="boolean" required="false">
	<help>A value of true means that this view is shown. A value of 
		false means that this view is hidden. Setting this attribute to 
		null  means that the runtime will hide this view when: its 
		opacity is 0, it has a  datapath that does not match a node, or 
		it is loading its media. In this  case, the the value of the 
		visible member of the view will reflect the view's current 
		visible state. This is the default behavior for this attribute. 
		Note  that an otherwise clickable view that is not visible will 
		have no click  region will not be clickable. Also be aware that 
		in Javascript, the &amp;&amp; operator does not coerce values 
		to booleans. For instance, given  an expression like this: 
		visible="a &amp;&amp; b", if  a is null, the value returned by 
		the constraint expression will be null -- not false.</help>
	<values>
		<value option="false"/>
		<value option="true"/>
	</values>
</parameter>
<parameter name="width" type="Numeric" required="false">
	<help>The width of the view</help>
	<values />
</parameter>
<parameter name="x" type="Numeric" required="false">
	<help>The x position of the view</help>
	<values />
</parameter>
<parameter name="xoffset" type="Numeric" required="false">
	<help>A value to be added to the  x position of this view before 
		drawing  it. This affects the apparent rotation point of the 
		view, as well as  its apparent x position. It does not affect 
		the view's width or its  internal coordinate system.</help>
	<values />
</parameter>
<parameter name="xscale" type="Numeric" required="false">
	<help>The horizontal scaling applied to the view's resource. If 
		xscale is set, the view stretches in its x axis. A value of 1 
		means that the resource will be distorted in the horizontal axis.
		</help>
	<values />
</parameter>
<parameter name="y" type="Numeric" required="false">
	<help>The y position for the view</help>
	<values />
</parameter>
<parameter name="yoffset" type="Numeric" required="false">
	<help>A value to be added to the y position of this view  before 
		drawing it. This affects the apparent rotation point of the 
		view, as  well as its apparent y position. It does not affect 
		the view's width or its  internal coordinate system.</help>
	<values />
</parameter>
<parameter name="yscale" type="Numeric" required="false">
	<help>The vertical scaling applied to the view's resource. If yscale 
		is set, the view stretches in its y axis. A value of 1 means 
		that the resource will be distorted in the vertical axis.</help>
	<values />
</parameter>
&node;