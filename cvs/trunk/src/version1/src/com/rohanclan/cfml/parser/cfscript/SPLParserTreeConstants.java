/* Generated By:JJTree: Do not edit this line. SPLParserTreeConstants.java */

package com.rohanclan.cfml.parser.cfscript;

public interface SPLParserTreeConstants
{
  public int JJTCOMPILATIONUNIT = 0;
  public int JJTRETURNSTATEMENT = 1;
  public int JJTFUNCTIONDECLARATION = 2;
  public int JJTVARDECLARATION = 3;
  public int JJTVOID = 4;
  public int JJTASSIGNMENT = 5;
  public int JJTORNODE = 6;
  public int JJTANDNODE = 7;
  public int JJTBITWISEORNODE = 8;
  public int JJTBITWISEXORNODE = 9;
  public int JJTBITWISEANDNODE = 10;
  public int JJTNENODE = 11;
  public int JJTEQNODE = 12;
  public int JJTSTREQNODE = 13;
  public int JJTSTRNEQNODE = 14;
  public int JJTLTNODE = 15;
  public int JJTGTNODE = 16;
  public int JJTLENODE = 17;
  public int JJTGENODE = 18;
  public int JJTADDNODE = 19;
  public int JJTSUBTRACTNODE = 20;
  public int JJTMULNODE = 21;
  public int JJTDIVNODE = 22;
  public int JJTMODNODE = 23;
  public int JJTSTRUCTREFNODE = 24;
  public int JJTCFCMETHODCALLNODE = 25;
  public int JJTID = 26;
  public int JJTSTRINGLITERAL = 27;
  public int JJTINTLITERAL = 28;
  public int JJTTRUENODE = 29;
  public int JJTFALSENODE = 30;
  public int JJTFORINSTATEMENT = 31;
  public int JJTFORSTATEMENTNODE = 32;
  public int JJTFUNCTIONCALLNODE = 33;
  public int JJTPARAMETERLIST = 34;
  public int JJTBLOCK = 35;
  public int JJTSTATEMENTEXPRESSION = 36;
  public int JJTIFSTATEMENT = 37;
  public int JJTWHILESTATEMENT = 38;
  public int JJTDOSTATEMENT = 39;


  public String[] jjtNodeName = {
    "CompilationUnit",
    "ReturnStatement",
    "FunctionDeclaration",
    "VarDeclaration",
    "void",
    "Assignment",
    "OrNode",
    "AndNode",
    "BitwiseOrNode",
    "BitwiseXorNode",
    "BitwiseAndNode",
    "NENode",
    "EQNode",
    "StrEQNode",
    "StrNEQNode",
    "LTNode",
    "GTNode",
    "LENode",
    "GENode",
    "AddNode",
    "SubtractNode",
    "MulNode",
    "DivNode",
    "ModNode",
    "StructRefNode",
    "CFCMethodCallNode",
    "Id",
    "StringLiteral",
    "IntLiteral",
    "TrueNode",
    "FalseNode",
    "ForInStatement",
    "ForStatementNode",
    "FunctionCallNode",
    "ParameterList",
    "Block",
    "StatementExpression",
    "IfStatement",
    "WhileStatement",
    "DoStatement",
  };
}
