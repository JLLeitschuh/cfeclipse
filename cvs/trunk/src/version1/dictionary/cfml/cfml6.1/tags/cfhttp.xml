<?xml version="1.0" encoding="UTF-8"?>
<tag xmlns="http://www.cfeclipse.org/version1/dictionary" creator="3" name="cfhttp" single="false" xmlstyle="false">
			<help><![CDATA[
				Generates an HTTP request and handles the response from the
				server.
			]]></help>
			<parameter name="url" required="true" type="URL">
				<help><![CDATA[
					Address of the resource on the server which will handle
					the request. The URL must include the hostname or IP
					address.

					If you do not specify the transaction protocol (http:// or
					https://), CFML defaults to http.

					If you specify a port number in this attribute, it
					overrides any port attribute value.

					The cfhttppparam tag URL attribute appends query string
					attribute-value pairs to the URL.
				]]></help>
				<values/>
			</parameter>
			<parameter name="port" required="false" type="Numeric">
				<help><![CDATA[
					Port number on the server to which to send the request.
					A port value in the url attribute overrides this value.
					(default: http 80 - https 443)
				]]></help>
				<values/>
			</parameter>
			<parameter name="method" required="false" type="String">
				<help><![CDATA[
                    * GET Requests information from the server. Any data that
                    	the server requires to identify the requested
                    	information must be in the URL or in cfhttp type="URL"
                    	tags.
                    * POST Sends information to the server for processing.
                    	Requires one or more cfhttpparam tags. Often used for
                    	submitting form-like data.
                    * PUT Requests the server to store the message body at the
                    	specified URL. Use this method to send files to the
                    	server.
                    * DELETE Requests the server to delete the specified URL.
                    * HEAD Identical to the GET method, but the server does
                    	not send a message body in the response. Use this
                    	method for testing hypertext links for validity and
                    	accessibility, determining the type or modification
                    	time of a document, or determining the type of server.
                    * TRACE Requests that the server echo the received HTTP
                    	headers back to the sender in the response body. Trace
                    	requests cannot have bodies. This method enables the
                    	CFML application to see what is being received
                    	at the server, and use that data for testing or
                    	diagnostic information.
                    * OPTIONS A request for information about the
                    	communication options available for the server or the
                    	specified URL. This method enables the CFML
                    	application to determine the options and requirements
                    	associated with a URL, or the capabilities of a server,
                    	without requesting any additional activity by the
                    	server.
				]]></help>
				<values>
					<value option="get"/>
					<value option="post"/>
					<value option="put"/>
					<value option="delete"/>
					<value option="head"/>
					<value option="trace"/>
					<value option="options"/>
				</values>
			</parameter>
			<parameter name="proxyserver" required="false" type="String">
				<help><![CDATA[
					The proxy server required to access the URL.
				]]></help>
				<values/>
			</parameter>
			<parameter name="proxyport" required="false" type="Numeric">
				<help><![CDATA[
					The port to use on The proxy server.
				]]></help>
				<values/>
			</parameter>
			<parameter name="proxyuser" required="false" type="String">
				<help><![CDATA[
					The user ID to send to the proxy server.
				]]></help>
				<values/>
			</parameter>
			<parameter name="proxypassword" required="false" type="String">
				<help><![CDATA[
					The user's password on the proxy server.
				]]></help>
				<values/>
			</parameter>
			<parameter name="username" required="false" type="String">
				<help><![CDATA[
					A username. May be required by server.
				]]></help>
				<values/>
			</parameter>
			<parameter name="password" required="false" type="String">
				<help><![CDATA[
					A password. May be required by server
				]]></help>
				<values/>
			</parameter>
			<parameter name="useragent" required="false" type="String">
				<help><![CDATA[
					Text to put in the user agent request header. Used to
					identify the request client software. Can make the
					CFML application appear to be a browser.
				]]></help>
				<values/>
			</parameter>
			<parameter name="charset" required="false" type="String">
				<help><![CDATA[
					TThe character encoding of the request, including the URL
					query string and form or file data, and the response.

					For more information on character encodings, see:
					www.w3.org/International/O-charset.html.
				]]></help>
				<values>
					<value option="utf-8"/>
					<value option="iso-8859-1"/>
					<value option="windows-1252"/>
					<value option="us-ascii"/>
					<value option="shift_jis"/>
					<value option="iso-2022-jp"/>
					<value option="euc-jp"/>
					<value option="euc-kr"/>
					<value option="big5"/>
					<value option="euc-cn"/>
					<value option="utf-16"/>
				</values>
			</parameter>
			<parameter name="resolveurl" required="false" type="boolean">
				<help><![CDATA[
					No does not resolve URLs in the response body. As a result,
						any relative URL links in the response body do not work.
					Yes resolves URLs in the response body to absolute URLs,
						including the port number, so that links in a retrieved
						page remain functional.
				]]></help>
				<values>
					<value option="true" xml:base="http://localhost:8501/converter/inc/value_boolean.xml"/>
<value option="false" xml:base="http://localhost:8501/converter/inc/value_boolean.xml"/>
				</values>
			</parameter>
			<parameter name="throwonerror" required="false" type="boolean">
				<help><![CDATA[
					Yes if the server returns an error response code, throws
						an exception that can be caught using the cftry and
						cfcatch or CFML error pages.
					No does not throw an exception if an error response is
						returned. In this case, your application can use the
						cfhttp.StatusCode variable to determine if there was
						an error and its cause.
				]]></help>
				<values>
					<value option="true" xml:base="http://localhost:8501/converter/inc/value_boolean.xml"/>
<value option="false" xml:base="http://localhost:8501/converter/inc/value_boolean.xml"/>
				</values>
			</parameter>
			<parameter name="redirect" required="false" type="boolean">
				<help><![CDATA[
					If the response header includes a Location field,
					determines whether to redirect execution to the URL
					specified in the field.
				]]></help>
				<values>
					<value option="true" xml:base="http://localhost:8501/converter/inc/value_boolean.xml"/>
<value option="false" xml:base="http://localhost:8501/converter/inc/value_boolean.xml"/>
				</values>
			</parameter>
			<parameter name="timeout" required="false" type="Numeric">
				<help><![CDATA[
					Value, in seconds of the maximum time the request can take.
					If the timeout passes without a response, CFML
					considers the request to have failed.
				]]></help>
				<values/>
			</parameter>
			<parameter name="getasbinary" required="false" type="String">
				<help><![CDATA[
					* No If CFML does not recognize the response body
						type as text, convert it to a CFML object.
					* Auto If CFML does not recognize the response body
						type as text, convert it to CFML Binary type data.
					* Yes Always convert the response body content into
						CFML Binary type data, even if CFML
						recognizes the response body type as text.
				]]></help>
				<values>
					<value option="no"/>
					<value option="auto"/>
					<value option="yes"/>
				</values>
			</parameter>
		</tag>
