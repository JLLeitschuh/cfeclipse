<?xml version="1.0" ?>
<!--
	Creator is who made / supports the tag. Values are:
    	MX          = 0x1;
    	BlueDragon  = 0x2;
    	W3C         = 0x4;
    	UserDefined = 0x8;
    	If support exists between two you can add them together.
    	for example 3 means MX and BlueDragon.
    Single is if the tag lacks a closing tag
    XMLStyle is if a single tag does it close thusly /&gt;
    
    Note: you can not put cfx or cf_ tags in here ... well you can
    but this is the dictionary for the cfxxxxx tags only (system tags)
   	If you want to do it anyway, leave off the cf portion. so for
   	example cfxRohanCrypt becomes xrohancrypt (needs to be lowercase too)
    
	::NOTES::
    Missing: cfslider, cfregistry, cfldap, cfinput
 -->
<dictionary>
	<tags>
		<!-- tag template -->
		<!-- 
		
		<tag creator="3" name="xml" single="false" xmlstyle="false">
			<help><![CDATA[
				
			]]></help>
			<parameter name="variable" type="String" required="true">
				<help><![CDATA[
					
				]]></help>
				<values/>
			</parameter>
			<parameter name="casesensitive" type="boolean" required="false">
				<help><![CDATA[
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
		</tag> -->
		
		<!-- 
			cfabort 
				showError = "error_message"
		-->
		<tag creator="3" name="abort" single="true" xmlstyle="false">
			<help><![CDATA[
				Stops the processing of a ColdFusion page at the tag location. 
				ColdFusion returns everything that was processed before the 
				tag. The tag is often used with conditional logic to stop 
				processing a page when a condition occurs.			
			]]></help>
			<parameter name="showerror" type="String" required="true">
				<help><![CDATA[
					Error to display, in a standard ColdFusion error page, 
					when tag executes
				]]></help>
				<values/>
			</parameter>
		</tag>
				
		<!-- 
			cfapplet    
				appletSource = "applet_name"   
				name = "form_variable_name"   
				height = "height_in_pixels"   
				width = "width_in_pixels"   
				vSpace = "space_above_and_below_in_pixels"   
				hSpace = "space_on_each_side_in_pixels"   
				align = "alignment_option"   
				notSupported = "message_to_display_for_nonJava_browser"   
				param_1 = "applet_parameter_name"   
				param_2 = "applet_parameter_name"   
				param_n = "applet_parameter_name"
		-->
		<tag creator="3" name="applet" single="true" xmlstyle="false">
			<help><![CDATA[
				This tag references a registered custom Java applet. To 
				register a Java applet, in the ColdFusion Administrator, click 
				Extensions \ Java Applets. 

				Using this tag within a cfform tag is optional. If you use it 
				within cfform, and the method attribute is defined in the 
				Administrator, the return value is incorporated into the 
				form.
			]]></help>
			<parameter name="appletsource" type="String" required="true">
				<help><![CDATA[
					Name of registered applet
				]]></help>
				<values/>
			</parameter>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Form variable name for applet
				]]></help>
				<values/>
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help><![CDATA[
					Control's height, in pixels.
				]]></help>
				<values/>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help><![CDATA[
					Control's width, in pixels.
				]]></help>
				<values/>
			</parameter>
			<parameter name="vspace" type="Numeric" required="false">
				<help><![CDATA[
					Vertical margin above and below control, in pixels.
				]]></help>
				<values/>
			</parameter>
			<parameter name="hspace" type="Numeric" required="false">
				<help><![CDATA[
					Horizontal spacing to left and right of control, in pixels.
				]]></help>
				<values/>
			</parameter>
			<parameter name="align" type="String" required="false">
				<help><![CDATA[
					Alignment
				]]></help>
				<values>
					<value option="top" />
					<value option="left" />
					<value option="bottom" />
					<value option="baseline" />
					<value option="texttop" />
					<value option="absbottom" />
					<value option="middle" />
					<value option="absmiddle" />
					<value option="right" />
				</values>
			</parameter>									
			<parameter name="notsupported" type="String" required="false">
				<help><![CDATA[
					Message to display if page that contains Java applet-based 
					form control is opened by browser that does not support 
					Java, or has Java support disabled. For example:

					notSupported = "<b> Browser must support Java to view 
					ColdFusion Java Applets</b>"

					If no message is specified, this message displays:

					<b>Browser must support Java to <br> view ColdFusion Java 
					Applets!</b>
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfapplication    
				name = "application_name"   
				loginStorage = "cookie" or "session"   
				clientManagement = "Yes" or "No"   
				clientStorage = "datasource_name" or "Registry" or "Cookie"    
				setClientCookies = "Yes" or "No"    
				sessionManagement = "Yes" or "No"   
				sessionTimeout = #CreateTimeSpan(days, hours, minutes, seconds)#   
				applicationTimeout = #CreateTimeSpan(days, hours, minutes, seconds)#   
				setDomainCookies = "Yes" or "No"
		-->
		<tag creator="3" name="application" single="true" xmlstyle="false">
			<help><![CDATA[
				Defines the scope of a ColdFusion application; enables and 
				disables storage of Client variables; specifies the Client 
				variable storage mechanism; enables Session variables; and 
				sets Application variable timeouts.
			]]></help>
			<parameter name="name" type="String" required="false">
				<help><![CDATA[
					Name of application. Up to 64 characters
				]]></help>
				<values/>
			</parameter>
			<parameter name="loginstorage" type="String" required="false">
				<help><![CDATA[
				]]></help>
				<values>
					<value option="cookie" />
					<value option="session" />
				</values>
			</parameter>
			<parameter name="clientmanagement" type="boolean" required="false">
				<help><![CDATA[
					enables client variables 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="clientstorage" type="String" required="false">
				<help><![CDATA[
					How client variables are stored
					* datasource_name: in ODBC or native data source. 
						You must create storage repository in the 
						Administrator. 
					* registry: in the system registry. 
					* cookie: on client computer in a cookie. Scalable. 
						If client disables cookies in the browser, client 
						variables do not work
				]]></help>
				<values>
					<value option="cookie" />
					<value option="session" />
				</values>
			</parameter>
			<parameter name="setclientcookies" type="boolean" required="false">
				<help><![CDATA[
					No: ColdFusion does not automatically send CFID and CFTOKEN
					cookies to client browser; you must manually code CFID and
					CFTOKEN on the URL for every page that uses Session or 
					Client variables
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="sessionmanagement" type="boolean" required="false">
				<help><![CDATA[
					enables session variables
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="sessiontimeout" type="Timespan" required="false">
				<help><![CDATA[
					Lifespan of session variables. CreateTimeSpan function and 
					values in days, hours, minutes, and seconds, separated by 
					commas
				]]></help>
				<values/>
			</parameter>
			<parameter name="applicationtimeout" type="Timespan" required="false">
				<help><![CDATA[
					Lifespan of application variables. CreateTimeSpan function 
					and values in days, hours, minutes, and seconds, separated 
					by commas.
				]]></help>
				<values/>
			</parameter>
			<parameter name="setdomaincookies" type="boolean" required="false">
				<help><![CDATA[
					Yes: Sets CFID and CFTOKEN cookies for a domain (not a host)
					Required, for applications running on clusters. 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
			cfargument    
				name="string"    
				type="data type"    
				required="Yes or No"    
				default="default value"    
				displayname="descriptive name"   
				hint="extended description"
		-->
		<tag creator="3" name="argument" single="true" xmlstyle="false">
			<help><![CDATA[
				Creates a parameter definition within a component definition. 
				Defines a function argument. Used within a cffunction tag. 
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					An argument name.
				]]></help>
				<values/>
			</parameter>
			<parameter name="type" type="String" required="true">
				<help><![CDATA[
					a type name; data type of the argument.
				]]></help>
				<values>
					<value option="any" />
					<value option="array" />
					<value option="binary" />
					<value option="boolean" />
					<value option="date" />
					<value option="guid" />
					<value option="numeric" />
					<value option="query" />
					<value option="string" />
					<value option="struct" />
					<value option="uuid" />
					<value option="variable_name" />
				</values>
			</parameter>
			<parameter name="required" type="boolean" required="false">
				<help><![CDATA[
					Whether the parameter is required to execute the component 
					method.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="default" type="String" required="false">
				<help><![CDATA[
					If no argument is passed, specifies a default argument 
					value.
				]]></help>
				<values/>
			</parameter>
			<parameter name="displayname" type="String" required="false">
				<help><![CDATA[
					Meaningful only for CFC method parameters. A value to be 
					displayed when using introspection to show information 
					about the CFC.
				]]></help>
				<values/>
			</parameter>
			<parameter name="hint" type="String" required="false">
				<help><![CDATA[
					Meaningful only for CFC method parameters. Text to be 
					displayed when using introspection to show information 
					about the CFC. The hint attribute value follows the 
					displayname attribute value in the parameter description 
					line. This attribute can be useful for describing the 
					purpose of the parameter
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfassociate    
				baseTag = "base_tag_name"   
				dataCollection = "collection_name"
		-->
		<tag creator="3" name="associate" single="true" xmlstyle="false">
			<help><![CDATA[
				Allows subtag data to be saved with a base tag. Applies only 
				to custom tags.
			]]></help>
			<parameter name="basetag" type="String" required="true">
				<help><![CDATA[
					Base tag name		
				]]></help>
				<values/>
			</parameter>
			<parameter name="datacollection" type="String" required="false">
				<help><![CDATA[
					Structure in which base tag stores subtag data	
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfbreak
		-->
		<tag creator="3" name="break" single="true" xmlstyle="false">
			<help><![CDATA[
				Used within a cfloop tag. Breaks out of a loop.
			]]></help>
		</tag>
		
		<!-- 
			cfcache    
				action = "action"   
				directory = "directory_name"   
				timespan = "value"   
				expireURL = "wildcarded_URL_reference"   
				username = "username"   
				password = "password"   
				port = "port_number"   
				protocol = "protocol"
		-->
		<tag creator="3" name="cache" single="true" xmlstyle="false">
			<help><![CDATA[
				Stores a copy of a page on the server and/or client computer, 
				to improve page rendering performance. To do this, the tag 
				creates temporary files that contain the static HTML returned 
				from a ColdFusion page.

				Use this tag if it is not necessary to get dynamic content each
				time a user accesses a page. 
				You can use this tag for simple URLs and for URLs that contain 
				URL parameters.
			]]></help>
			<parameter name="action" type="String" required="true">
				<help><![CDATA[
				]]></help>
				<values>
					<value option="cache" />
					<value option="flush" />
					<value option="clientcache" />
					<value option="servercache" />
					<value option="optimal" />
				</values>
			</parameter>
			<parameter name="directory" type="String" required="false">
				<help><![CDATA[
					Absolute path of cache directory. 
				]]></help>
				<values/>
			</parameter>
			<parameter name="timespan" type="Timespan" required="false">
				<help><![CDATA[
					Absolute path of cache directory. 
				]]></help>
				<values/>
			</parameter>
			<parameter name="expireurl" type="String" required="false">
				<help><![CDATA[
					Used with action = "flush". A URL reference. ColdFusion 
					matches it against the mappings in the specified cache 
					directory. Can include wildcards. For example: 
					"*/view.cfm?id=*".
				]]></help>
				<values/>
			</parameter>
			<parameter name="username" type="String" required="false">
				<help><![CDATA[
					A username
				]]></help>
				<values/>
			</parameter>
			<parameter name="password" type="String" required="false">
				<help><![CDATA[
					A password
				]]></help>
				<values/>
			</parameter>
			<parameter name="port" type="Numeric" required="false">
				<help><![CDATA[
					Remote port to which to connect
				]]></help>
				<values/>
			</parameter>
			<parameter name="protocol" type="String" required="false">
				<help><![CDATA[
					Protocol that is used to create URL from cache.
				]]></help>
				<values>
					<value option="http://" />
					<value option="https://" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
			cfcase    
				value = "value or delimited set of values"   
				delimiters = "delimiter characters"
		-->
		<tag creator="3" name="case" single="true" xmlstyle="false">
			<help><![CDATA[
				Used only inside the cfswitch tag body. Contains code to 
				execute when the expression specified in the cfswitch tag has 
				one or more specific values. 
			]]></help>
			<parameter name="value" type="String" required="true">
				<help><![CDATA[
					The value or values that the expression attribute of the 
					cfswitch tag must match. To specify multiple matching 
					values, separate the values with the delimiter character. 
					The value or values must be simple constants or constant 
					expressions, not variables.
				]]></help>
				<values/>
			</parameter>
			<parameter name="delimiter" type="String" required="false">
				<help><![CDATA[
					Specifies the delimiter character or characters that 
					separate multiple values to match. If you specify multiple 
					delimiter characters, you can use any of them to separate 
					the values to be matched.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfcatch 
				type = "exceptiontype"
				[Exception processing code here]
			/cfcatch
		
		-->
		<tag creator="3" name="catch" single="false" xmlstyle="false">
			<help><![CDATA[
				Used inside a cftry tag. Together, they catch and process 
				exceptions in ColdFusion pages. Exceptions are events that 
				disrupt the normal flow of instructions in a ColdFusion page, 
				such as failed database operations, missing include files, and 
				developer-specified events.
			]]></help>
			<parameter name="type" type="String" required="false">
				<help><![CDATA[
				]]></help>
				<values>
					<value option="application" />
					<value option="database" />
					<value option="template" />
					<value option="security" />
					<value option="object" />
					<value option="missingInclude" />
					<value option="expression" />
					<value option="lock" />
					<value option="custom_type" />
					<value option="searchengine" />
					<value option="any" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
			cfchart    
				format = "flash, jpg, png"    
				chartHeight = "integer number of pixels"    
				chartWidth = "integer number of pixels"    
				scaleFrom = "integer minimum value"    
				scaleTo = "integer maximum value"    
				showXGridlines = "yes" or "no"    
				showYGridlines = "yes" or "no"    
				gridlines = "integer number of lines"    
				seriesPlacement = "default, cluster, stacked, percent"    
				foregroundColor = "Hex value or Web color"    
				dataBackgroundColor = "Hex value or Web color"    
				showBorder = "yes" or "no"    
				font = "font name"    
				fontSize = "integer font size"    
				fontBold = "yes" or "no"    
				fontItalic = "yes" or "no"    
				labelFormat = "number, currency, percent, date"    
				xAxisTitle = "title text"    
				yAxisTitle = "title text"    
				xAxisType = "scale or category"   
				yAxisType = "scale or category"   
				sortXAxis = "yes/no"    
				show3D = "yes" or "no"    
				xOffset = "number between -1 and 1"    
				yOffset = "number between -1 and 1"    
				rotated = "yes/no"   
				showLegend = "yes/no"    
				tipStyle = "MouseDown, MouseOver, none"   
				tipBGColor = "hex value or web color"    
				showMarkers = "yes" or "no"    
				markerSize = "integer number of pixels"    
				pieSliceStyle = "solid, sliced"    
				url = "onClick destination page"    
				name = "String"   
			/cfchart
		-->
		<tag creator="3" name="chart" single="false" xmlstyle="false">
			<help><![CDATA[
				Generates and displays a chart.
			]]></help>
			<parameter name="format" type="String" required="false">
				<help><![CDATA[
					File format in which to save graph.
				]]></help>
				<values>
					<value option="flash" />
					<value option="jpg" />
					<value option="png" />
				</values>
			</parameter>
			<parameter name="chartheight" type="Numeric" required="false">
				<help><![CDATA[
					Chart height; integer number of pixels
				]]></help>
				<values/>
			</parameter>
			<parameter name="chartwidth" type="Numeric" required="false">
				<help><![CDATA[
					Chart width; integer number of pixels
				]]></help>
				<values/>
			</parameter>
			<parameter name="scalefrom" type="Numeric" required="false">
				<help><![CDATA[
					Y-axis minimum value; integer
				]]></help>
				<values/>
			</parameter>
			<parameter name="scaleto" type="Numeric" required="false">
				<help><![CDATA[
					Y-axis max value; integer
				]]></help>
				<values/>
			</parameter>
			<parameter name="showxgridlines" type="boolean" required="false">
				<help><![CDATA[
					yes: display X-axis gridlines 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="showygridlines" type="boolean" required="false">
				<help><![CDATA[
					yes: display Y-axis gridlines 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="gridlines" type="Numeric" required="false">
				<help><![CDATA[
					Number of grid lines to display on value axis, including 
					axis; positive integer.
				]]></help>
				<values/>
			</parameter>
			<parameter name="seriesplacement" type="String" required="false">
				<help><![CDATA[
					Applies to charts that have more than one data series. 
					Relative positions of series.
				]]></help>
				<values>
					<value option="cluster" />
					<value option="stacked" />
					<value option="percent" />
				</values>
			</parameter>
			<parameter name="foregroundcolor" type="String" required="false">
				<help><![CDATA[
					color for control. For a hex value, use the form:
					textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
					signs or none.
				]]></help>
				<values>
					<value option="black" />
					<value option="red" />
					<value option="blue" />
					<value option="magenta" />
					<value option="cyan" />
					<value option="orange" />
					<value option="darkgray" />
					<value option="pink" />
					<value option="white" />
					<value option="lightgray" />
					<value option="yellow" />
				</values>
			</parameter>
			<parameter name="databackgroundcolor" type="String" required="false">
				<help><![CDATA[
					color for control. For a hex value, use the form:
					textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
					signs or none.
				]]></help>
				<values>
					<value option="black" />
					<value option="red" />
					<value option="blue" />
					<value option="magenta" />
					<value option="cyan" />
					<value option="orange" />
					<value option="darkgray" />
					<value option="pink" />
					<value option="white" />
					<value option="lightgray" />
					<value option="yellow" />
				</values>
			</parameter>
			<parameter name="showborder" type="boolean" required="false">
				<help><![CDATA[
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help><![CDATA[
					Font of data in column. 
				]]></help>
				<values/>
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help><![CDATA[
					Size of text in column.
				]]></help>
				<values/>
			</parameter>
			<parameter name="fontitalic" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays grid control text in italics
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="fontbold" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays grid control text in bold
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>			
			<parameter name="labelformat" type="String" required="false">
				<help><![CDATA[
					Format for Y-axis labels.
				]]></help>
				<values>
					<value option="number" />
					<value option="currency" />
					<value option="percent" />
					<value option="date" />
				</values>
			</parameter>
			<parameter name="xaxistitle" type="String" required="false">
				<help><![CDATA[
					text; X-axis title
				]]></help>
				<values/>
			</parameter>
			<parameter name="yaxistitle" type="String" required="false">
				<help><![CDATA[
					text; X-axis title
				]]></help>
				<values/>
			</parameter>
			<parameter name="xaxistype" type="String" required="false">
				<help><![CDATA[
					category The axis indicates the data category. Data is 
					sorted according to the sortXAxis attribute. 
					scale The axis is numeric. All cfchartdata item attribute 
					values must numeric. The X axis is automatically sorted 
					numerically.
				]]></help>
				<values/>
			</parameter>
			<parameter name="yaxistype" type="String" required="false">
				<help><![CDATA[
					Currently has no effect, as Y axis is always used for data 
					values. Valid values are category and scale
				]]></help>
				<values/>
			</parameter>
			<parameter name="sortxaxis" type="boolean" required="false">
				<help><![CDATA[
					yes: display column labels in alphabetic order along X-axis
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="show3d" type="boolean" required="false">
				<help><![CDATA[
					yes: display chart with three-dimensional appearance
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="xoffset" type="Numeric" required="false">
				<help><![CDATA[
					Applies if show3D="yes". Number of units by which to 
					display the chart as angled, horizontally
				]]></help>
				<values/>
			</parameter>
			<parameter name="yoffset" type="Numeric" required="false">
				<help><![CDATA[
					Applies if show3D="yes". Number of units by which to 
					display the chart as angled, horizontally
				]]></help>
				<values/>
			</parameter>
			<parameter name="rotated" type="boolean" required="false">
				<help><![CDATA[
					yes: rotate chart 90 degrees. For a horizontal bar chart, 
					use this option. 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="showlegend" type="boolean" required="false">
				<help><![CDATA[
					yes: if chart contains more than one data series, display 
					legend
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="tipstyle" type="String" required="false">
				<help><![CDATA[
					Determines the action that opens a popup window to display 
					information about the current chart element.
				]]></help>
				<values>
					<value option="mouseDown" />
					<value option="mouseOver" />
					<value option="none" />
				</values>
			</parameter>
			<parameter name="tipbgcolor" type="String" required="false">
				<help><![CDATA[
					color for control. For a hex value, use the form:
					textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
					signs or none.
				]]></help>
				<values>
					<value option="black" />
					<value option="red" />
					<value option="blue" />
					<value option="magenta" />
					<value option="cyan" />
					<value option="orange" />
					<value option="darkgray" />
					<value option="pink" />
					<value option="white" />
					<value option="lightgray" />
					<value option="yellow" />
				</values>
			</parameter>
			<parameter name="showmarkers" type="boolean" required="false">
				<help><![CDATA[
					Applies to chartseries type attribute values line, curve 
					and scatter.
					yes: display markers at data points
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="markersize" type="Numeric" required="false">
				<help><![CDATA[
					Size of data point marker. in pixels. Integer.
				]]></help>
				<values/>
			</parameter>
			<parameter name="pieslicestyle" type="String" required="false">
				<help><![CDATA[
					Applies to chartseries type attribute value pie.
				]]></help>
				<values>
					<value option="solid" />
					<value option="sliced" />
				</values>
			</parameter>
			<parameter name="url" type="URL" required="false">
				<help><![CDATA[
					URL to open if the user clicks item in a data series; the 
					onClick destination page.

					You can specify variables within the URL string; 
					ColdFusion passes current values of the variables.
				]]></help>
				<values/>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help><![CDATA[
					Page variable name. String. Generates the the graph as 
					binary data and assigns it to the specified variable. 
					Suppresses chart display. You can use the name value in 
					the cffile tag to write the chart to a file.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfchartdata    
				item = "text"    
				value = "number"
		-->
		<tag creator="3" name="chartdata" single="true" xmlstyle="false">
			<help><![CDATA[
				Used with the cfchart and cfchartseries tags. This tag defines 
				chart data points. Its data is submitted to the cfchartseries 
				tag.
			]]></help>
			<parameter name="item" type="String" required="true">
				<help><![CDATA[
					string; data point name 
				]]></help>
				<values/>
			</parameter>
			<parameter name="value" type="String" required="true">
				<help><![CDATA[
					number or expression; data point value
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfchartseries    
				type="type"   
				query="queryName"   
				itemColumn="queryColumn"   
				valueColumn="queryColumn"   
				seriesLabel="Label Text"   
				seriesColor="Hex value or Web color"    
				paintStyle="plain, raise, shade, light"   
				markerStyle="style"   
				colorlist = "list"
			/cfchartseries
		-->
		<tag creator="3" name="chartseries" single="false" xmlstyle="false">
			<help><![CDATA[
				Used with the cfchart tag. This tag defines the style in which 
				chart data displays: bar, line, pie, and so on.
			]]></help>
			<parameter name="type" type="String" required="true">
				<help><![CDATA[
					Sets the chart display style	
				]]></help>
				<values>
					<value option="bar" />
					<value option="line" />
					<value option="pyramid" />
					<value option="area" />
					<value option="cone" />
					<value option="curve" />
					<value option="cylinder" />
					<value option="step" />
					<value option="scatter" />
					<value option="pie" />
				</values>
			</parameter>
			<parameter name="query" type="String" required="false">
				<help><![CDATA[
					Name of ColdFusion query from which to get data.	
				]]></help>
				<values/>
			</parameter>
			<parameter name="itemcolumn" type="String" required="false">
				<help><![CDATA[
					Name of a column in the query specified in the query 
					attribute; contains the item label for a data point to 
					graph.
				]]></help>
				<values/>
			</parameter>
			<parameter name="valuecolumn" type="String" required="false">
				<help><![CDATA[
					Name of a column in the query specified in the query 
					attribute; contains data values to graph.
				]]></help>
				<values/>
			</parameter>
			<parameter name="serieslabel" type="String" required="false">
				<help><![CDATA[
					Text of data series label
				]]></help>
				<values/>
			</parameter>
			<parameter name="seriescolor" type="String" required="false">
				<help><![CDATA[
					Color of the main element (such as the bars) of a chart. 
					For a pie chart, the color of the first slice.

					Hex value or supported named color; see name list in the 
					cfchart Usage section.
					For a hex value, use the form "##xxxxxx", where x = 0-9 or 
					A-F; use two pound signs or none.
				]]></help>
				<values/>
			</parameter>
			<parameter name="paintstyle" type="String" required="false">
				<help><![CDATA[
					Sets the paint display style of the data series.
				]]></help>
				<values>
					<value option="plain" />
					<value option="raise" />
					<value option="shade" />
					<value option="light" />
				</values>
			</parameter>
			<parameter name="markerstyle" type="String" required="false">
				<help><![CDATA[
					Applies to chartseries type attribute values line, curve 
					and scatter, and show3D attribute value no.
				]]></help>
				<values>
					<value option="rectangle" />
					<value option="triangle" />
					<value option="diamond" />
					<value option="circle" />
					<value option="letter" />
					<value option="mcross" />
					<value option="snow" />
					<value option="rcross" />
				</values>
			</parameter>
			<parameter name="colorlist" type="String" required="false">
				<help><![CDATA[
					Applies if chartseries type attribute = "pie". Sets pie 
					slice colors.

					Comma-delimited list of hex values or supported, named web 
					colors; see name list in the cfchart Usage section.

					For a hex value, use the form "##xxxxxx", where x = 0-9 or 
					A-F; use two pound signs or none.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		
		<!-- 
			cfcol    
				header = "column_header_text"   
				width = "number_indicating_width_of_column"   
				align = "Left" or "Right" or "Center"   
				text = "column_text"
		-->
		<tag creator="3" name="col" single="true" xmlstyle="false">
			<help><![CDATA[
				Defines table column header, width, alignment, and text. Used 
				within a cftable tag.
			]]></help>
			<parameter name="header" type="String" required="true">
				<help><![CDATA[
					Column header text. To use this attribute, you must also 
					use the cftable colHeaders attribute.
				]]></help>
				<values/>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help><![CDATA[
					Column width. If the length of data displayed exceeds this 
					value, data is truncated to fit. To avoid this, use an 
					HTML table tag.
				]]></help>
				<values/>
			</parameter>
			<parameter name="align" type="String" required="false">
				<help><![CDATA[
					Column alignment
				]]></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="text" type="String" required="true">
				<help><![CDATA[
					Double-quotation mark-delimited text; determines what to 
					display. Rules: same as for cfoutput sections. You can 
					embed hyperlinks, image references, and input controls
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfcollection    
				action = "action"   
				collection = "collection_name"   
				path = "path_to_verity_collection"   
				language = "language"   
				name = "queryname"
		-->
		<tag creator="3" name="collection" single="true" xmlstyle="false">
			<help><![CDATA[
				Creates, registers, and administers Verity search engine 
				collections. 

				A collection that is created with the cfcollection tag is 
				internal. A collection created any other way is external. 

				A collection that is registered with ColdFusion using the 
				cfcollection tag or registered with the K2 Server by editing 
				the k2server.ini file is registered. Other collections are 
				unregistered.
			]]></help>
			<parameter name="action" type="String" required="true">
				<help><![CDATA[
					create: registers the collection with ColdFusion. 
						- If the collection is present: creates a map to it
						- If the collection is not present: creates it
					repair: fixes data corruption in a collection. 
					delete: unregisters a collection. 
						- If the collection was registered with action = create:
							deletes its directories
						- If the collection was registered and mapped: does not
							delete collection directories
					map: creates a map to the collection. It is not necessary 
						to specify this value. (ColdFusion maps collections 
						automatically.) 
					optimize: optimizes the structure and contents of the 
						collection for searching; recovers space. 
					list: returns a query result set, named from the name 
						attribute value, of the attributes of the collections 
						that are registered by ColdFusion and K2 Server.
				]]></help>
				<values>
					<value option="create" />
					<value option="repair" />
					<value option="delete" />
					<value option="map" />
					<value option="optimize" />
					<value option="list" />
				</values>
			</parameter>
			<parameter name="collection" type="String" required="false">
				<help><![CDATA[
					A collection name. The name can include spaces
				]]></help>
				<values/>
			</parameter>
			<parameter name="path" type="String" required="false">
				<help><![CDATA[
					Absolute path to a Verity collection.
				]]></help>
				<values/>
			</parameter>
			<parameter name="language" type="String" required="false">
				<help><![CDATA[
					Options are listed in Usage section. Requires the 
					appropriate (European or Asian) Verity Locales language 
					pack.
				]]></help>
				<values/>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help><![CDATA[
					Name for the query results returned by the list action.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfcomponent   
				extends ="anotherComponent"   
				output = "yes" or "no"   
				displayname = "text string"
				hint = "text string">
			    [variable declarations cffunction ...]
			/cfcomponent
		-->
		<tag creator="3" name="component" single="false" xmlstyle="false">
			<help><![CDATA[
				Creates and defines a component object; encloses functionality 
				that you build in CFML and enclose within cffunction tags. 
				This tag contains one or more cffunction tags that define 
				methods. Code within the body of this tag, other than 
				cffunction tags, is executed when the component is 
				instantiated.				
			]]></help>
			<parameter name="extends" type="String" required="false">
				<help><![CDATA[
					Name of parent component from which to inherit methods and 
					properties.
				]]></help>
				<values/>
			</parameter>
			<parameter name="output" type="boolean" required="false">
				<help><![CDATA[
					Specifies whether constructor code in the component can 
					generate HTML output; does not affect output in the body 
					of cffunction tags in the component.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="displayname" type="String" required="false">
				<help><![CDATA[
					A string to be displayed when using introspection to show 
					information about the CFC. The information appears on the 
					heading, following the component name.
				]]></help>
				<values/>
			</parameter>
			<parameter name="hint" type="String" required="false">
				<help><![CDATA[
					Text to be displayed when using introspection to show 
					information about the CFC. The hint attribute value 
					appears below the component name heading. This attribute 
					can be useful for describing the purpose of the parameter.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfcontent    
				type = "file_type"   
				deleteFile = "Yes" or "No"   
				file = "filename"   
				reset = "Yes" or "No"
			[starting with a drive letter and a colon, or a forward 
			or backward slash]
		-->
		<tag creator="3" name="content" single="true" xmlstyle="false">
			<help><![CDATA[
				Does either or both of the following:
				* Sets the MIME content encoding header for the current page 
				* Sends the contents of a file from the server as the page 
					output
			]]></help>
			<parameter name="type" type="String" required="false">
				<help><![CDATA[
					The MIME content type of the page, optionally followed by 
					a semicolon and the character encoding. By default, 
					ColdFusion sends pages as text/html content type in 
					the UTF-8 character encoding.
				]]></help>
				<values/>
			</parameter>
			<parameter name="deletefile" type="boolean" required="false">
				<help><![CDATA[
					Applies only if you specify a file with the file attribute.

					Yes: deletes the file on the server after sending its 
						contents to the client. 
					No: leaves the file on the server. 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="file" type="String" required="false">
				<help><![CDATA[
					Name of file whose contents will be the page output. When 
					using ColdFusion in a distributed configuration, the file 
					attribute must refer to a path on the system on which the 
					web server runs. When you use this attribute, any other 
					output on the current CFML page is ignored; only the 
					contents of the file is sent to the client.
				]]></help>
				<values/>
			</parameter>
			<parameter name="reset" type="boolean" required="false">
				<help><![CDATA[
					The reset and file attributes are mutually exclusive. 
					If you specify a file, this attribute has no effect.
	
					Yes: discards output that precedes call to cfcontent 
					No: preserves output that precedes call to cfcontent. In 
					this case all output is sent with the specified type.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
			cfcookie    
				name = "cookie_name"   
				value = "text"   
				expires = "period"   
				secure = "Yes" or "No"   
				path = "url"   
				domain = ".domain"
		-->
		<tag creator="3" name="cookie" single="true" xmlstyle="false">
			<help><![CDATA[
				Defines web browser cookie variables, including expiration and
				security options.
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Name of cookie variable. ColdFusion converts cookie names 
					to all-uppercase. Cookie names set using this tag can 
					include any printable ASCII characters except commas, 
					semicolons or white space characters.
				]]></help>
				<values/>
			</parameter>
			<parameter name="value" type="String" required="false">
				<help><![CDATA[
					Value to assign to cookie variable. Must be a string or 
					variable that can be stored as a string.
				]]></help>
				<values/>
			</parameter>
			<parameter name="expires" type="Object" required="false">
				<help><![CDATA[
					Expiration of cookie variable. 

					* The default: the cookie expires when the user closes the 
						browser, that is, the cookie is "session only". 
					* A date or date/time object (for example, 10/09/97) 
					* A number of days (for example, 10, or 100) 
					* now: deletes cookie from client cookie.txt file 
						(but does not delete the corresponding variable the 
						Cookie scope of the active page). 
					* never: The cookie expires in 30 years from the time it 
						was created (effectively never in web years). 
				]]></help>
				<values/>
			</parameter>
			<parameter name="secure" type="boolean" required="false">
				<help><![CDATA[
					If browser does not support Secure Sockets Layer (SSL) 
					security, the cookie is not sent. To use the cookie, the 
					page must be accessed using the https protocol.			
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="path" type="String" required="false">
				<help><![CDATA[
					URL, within a domain, to which the cookie applies; 
					typically a directory. Only pages in this path can use the 
					cookie. By default, all pages on the server that set the 
					cookie can access the cookie.

					path = "/services/login"
				]]></help>
				<values/>
			</parameter>
			<parameter name="domain" type="String" required="false">
				<help><![CDATA[
					Domain in which cookie is valid and to which cookie content
					can be sent from the user's system. By default, the cookie 
					is only available to the server that set it. Use this 
					attribute to make the cookie available to other servers.

					Must start with a period. If the value is a subdomain, the 
					valid domain is all domain names that end with this string.
					This attribute sets the available subdomains on the site 
					upon which the cookie can be used.
				]]></help>
				<values/>
			</parameter>
		</tag> 
		
		<!-- 
			cfdefaultcase
			...
			/cfdefaultcase
		-->
		<tag creator="3" name="defaultcase" single="false" xmlstyle="false">
			<help><![CDATA[
				Used only inside the cfswitch tag body. Contains code to 
				execute when the expression specified in the cfswitch tag does 
				not match a of the value specified by a cfcase tag.
			]]></help>
		</tag>
		
		<!-- 
			cfdirectory    
				action = "directory action"   
				directory = "directory name"   
				name = "query name"   
				filter = "list filter"   
				mode = "permission"   
				sort = "sort specification"   
				newDirectory = "new directory name"
		-->
		<tag creator="3" name="directory" single="true" xmlstyle="false">
			<help><![CDATA[
				Manages interactions with directories.
				Different combos cause different attributes to be 
				required.
			]]></help>
			<parameter name="action" type="String" required="false">
				<help><![CDATA[
				]]></help>
				<values>
					<value option="list" />
					<value option="create" />
					<value option="delete" />
					<value option="rename" />
				</values>
			</parameter>
			<parameter name="directory" type="String" required="true">
				<help><![CDATA[
					Absolute pathname of directory against which to perform 
					action.
				]]></help>
				<values/>
			</parameter>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Name for output record set.
				]]></help>
				<values/>
			</parameter>
			<parameter name="filter" type="String" required="true">
				<help><![CDATA[
					File extension filter applied to returned names. For 
					example: *.cfm. One filter can be applied.
				]]></help>
				<values/>
			</parameter>
			<parameter name="mode" type="String" required="false">
				<help><![CDATA[
					Applies only to UNIX and Linux. Permissions. Octal values 
					of Unix chmod command. Assigned to owner, group, and 
					other, respectively. 
				]]></help>
				<values/>
			</parameter>
			<parameter name="sort" type="String" required="false">
				<help><![CDATA[
					Query column(s) by which to sort directory listing. 
					Delimited list of columns from query output.
				]]></help>
				<values>
					<value option="asc" />
					<value option="desc" />
				</values>
			</parameter>
			<parameter name="newdirectory" type="String" required="false">
				<help><![CDATA[
					New name for directory
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfdump    
				var = "#variable#"   
				expand = "Yes or No"    
				label = "text"
		-->
		<tag creator="3" name="dump" single="false" xmlstyle="false">
			<help><![CDATA[
				Outputs the elements, variables and values of most kinds of 
				ColdFusion objects. Useful for debugging. You can display the 
				contents of simple and complex variables, objects, components, 
				user-defined functions, and other elements.
			]]></help>
			<parameter name="var" type="Object" required="true">
				<help><![CDATA[
					Variable to display. Enclose a variable name in pound 
					signs. 
				]]></help>
				<values/>
			</parameter>
			<parameter name="expand" type="boolean" required="false">
				<help><![CDATA[
					Yes: In Internet Explorer and Mozilla, expands views 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="label" type="String" required="false">
				<help><![CDATA[
					A string; header for the dump output.
				]]></help>
				<values/>
			</parameter>
		</tag> 
		
		<!-- 
			<cfelse>
		-->
		<tag creator="3" name="else" single="true" xmlstyle="false">
			<help><![CDATA[
				Used as the last control block in a cfif tag block to handle 
				any case not identified by the cfif tag or a cfelseif tag.
			]]></help>
		</tag>
		
		<!-- 
			cfelseif 
				expression
		-->
		<tag creator="3" name="elseif" single="true" xmlstyle="false">
			<help><![CDATA[
				Used as a control block in a cfif tag block to handle any case 
				not identified by the cfif tag or a cfelseif tag.
			]]></help>
		</tag>
		
		<!-- 
			cferror    
				type = "a type"   
				template = "template_path"   
				mailTo = "email_address"   
				exception = "exception_type"
		-->
		<tag creator="3" name="error" single="true" xmlstyle="false">
			<help><![CDATA[
				Displays a custom HTML page when an error occurs. This lets 
				you maintain a consistent look and feel among an application's 
				functional and error pages
			]]></help>
			<parameter name="type" type="String" required="true">
				<help><![CDATA[
					Type of error that the custom error page handles. The type 
					also determines how ColdFusion handles the error page. For 
					more information, see Specifying a custom error page in 
					Developing ColdFusion MX Applications.

					exception: a exception of the type specified by the 
						exception attribute. 
					validation: errors recognized by sever-side type 
						validation. 
					request: any encountered error. 
				]]></help>
				<values>
					<value option="exception" />
					<value option="validation" />
					<value option="request" />
				</values>
			</parameter>
			<parameter name="template" type="String" required="true">
				<help><![CDATA[
					Relative path to the custom error page. 
					(A ColdFusion page was formerly called a template.)
				]]></help>
				<values/>
			</parameter>
			<parameter name="mailto" type="String" required="false">
				<help><![CDATA[
					An E-mail address. This attribute is available on the 
					error page as the variable error.mailto. ColdFusion does 
					not automatically send anything to this address.
				]]></help>
				<values/>
			</parameter>
			<parameter name="exception" type="String" required="false">
				<help><![CDATA[
					Type of exception that the tag handles: 

					application: application exceptions 
					database: database exceptions 
					template: ColdFusion page exceptions 
					security: security exceptions 
					object: object exceptions 
					missingInclude: missing include file exceptions 
					expression: expression exceptions 
					lock: lock exceptions 
					custom_type: developer-defined exceptions, defined in the 
						cfthrow tag 
					any: all exception types
				]]></help>
				<values>
					<value option="application" />
					<value option="database" />
					<value option="template" />
					<value option="security" />
					<value option="object" />
					<value option="missingInclude" />
					<value option="expression" />
					<value option="lock" />
					<value option="custom_type" />
					<value option="any" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
			cfexecute    
				name = " ApplicationName "   
				arguments = "CommandLine Arguments"   
				outputFile = "Output file name"
			   	variable = "variable name"   
			   	timeout = "Timeout interval"
			   	...
			/cfexecute
		-->
		<tag creator="3" name="execute" single="false" xmlstyle="false">
			<help><![CDATA[
				Executes a ColdFusion developer-specified process on a server 
				computer.
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Absolute path of the application to execute.

					On Windows, you must specify an extension; for example, 
					C:\myapp.exe.
				]]></help>
				<values/>
			</parameter>
			<parameter name="arguments" type="Object" required="false">
				<help><![CDATA[
					Command-line variables passed to application. If specified 
					as string, it is processed as follows:
					* Windows: passed to process control subsystem for parsing.
					* UNIX: tokenized into an array of arguments. The default 
						token separator is a space; you can delimit arguments 
						that have embedded spaces with double quotation marks.
					If passed as array, it is processed as follows:
					* Windows: elements are concatenated into a string of 
						tokens, separated by spaces. Passed to process control 
						subsystem for parsing. 
					* UNIX: elements are copied into an array of exec() 
						arguments
				]]></help>
				<values/>
			</parameter>
			<parameter name="outputfile" type="String" required="false">
				<help><![CDATA[
					File to which to direct program output. If no outputfile or 
					variable attribute is specified, output is displayed on 
					the page from which it was called. 

					If not an absolute path (starting a with a drive letter and
					a colon, or a forward or backward slash), it is relative 
					to the ColdFusion temporary directory, which is returned 
					by the GetTempDirectory function.
				]]></help>
				<values/>
			</parameter>
			<parameter name="variable" type="String" required="false">
				<help><![CDATA[
					Variable in which to put program output. If no outputfile 
					or variable attribute is specified, output is displayed on 
					page from which it was called.
				]]></help>
				<values/>
			</parameter>
			<parameter name="timeout" type="Numeric" required="false">
				<help><![CDATA[
					Length of time, in seconds, that ColdFusion waits for 
					output from the spawned program.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfexit    
				method = "method"
		-->
		<tag creator="3" name="exit" single="true" xmlstyle="false">
			<help><![CDATA[
				This tag aborts processing of the currently executing CFML 
				custom tag, exits the page within the currently executing CFML 
				custom tag, or re-executes a section of code within the 
				currently executing CFML custom tag.
			]]></help>
			<parameter name="method" type="String" required="false">
				<help><![CDATA[
					exittag: aborts processing of currently executing tag 
					exittemplate: exits page of currently executing tag 
					loop: reexecutes body of currently executing tag
				]]></help>
				<values>
					<value option="exittag" />
					<value option="exittemplate" />
					<value option="loop" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
    		cffile 
    		 action = "upload"
    		 fileField = "formfield"
    		 destination = "full_path_name"
    		 nameConflict = "behavior"
    		 accept = "mime_type/file_type"
    		 mode = "permission"
    		 attributes = "file_attribute_or_list"> 
    		 source = "full_path_name"
    		 charset = "charset_option"> 
    		 file = "full_path_name"> 
    		 variable = "var_name"> 
    		 output = "content"
    		 addNewLine = "Yes" or "No"
		-->
		<tag creator="3" name="file" single="true" xmlstyle="false">
			<help><![CDATA[
				Manages interactions with server files. 
				Different combonations cause different attributes to be 
				required.
			]]></help>
			<parameter name="action" type="String" required="true">
				<help><![CDATA[
					Type of file manipulation that the tag performs.
				]]></help>
				<values>
					<value option="append" />
					<value option="copy" />
					<value option="delete" />
					<value option="move" />
					<value option="read" />
					<value option="readbinary" />
					<value option="rename" />
					<value option="upload" />
					<value option="write" />
				</values>
			</parameter>
			<parameter name="file" type="String" required="true">
				<help><![CDATA[
					Pathname of the file
				]]></help>
				<values/>
			</parameter>
			<parameter name="mode" type="String" required="false">
				<help><![CDATA[
					Applies only to UNIX and Linux. Permissions. Octal values 
					of Unix chmod command. Assigned to owner, group, and 
					other, respectively. 
				]]></help>
				<values/>
			</parameter>
			<parameter name="output" type="String" required="true">
				<help><![CDATA[
					String to add to the file
				]]></help>
				<values/>
			</parameter>
			<parameter name="addnewline" type="boolean" required="false">
				<help><![CDATA[
					Yes: appends newline character to text written to file 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="attributes" type="String" required="false">
				<help><![CDATA[
					Applies to Windows. A comma-delimited list of attributes 
					to set on the file.
					
					If omitted, the file's attributes are maintained.
				]]></help>
				<values>
					<value option="readonly" />
					<value option="hidden" />
					<value option="normal" />
				</values>
			</parameter>
			<parameter name="charset" type="String" required="false">
				<help><![CDATA[
					The character encoding in which the file contents is 
					encoded. 
					
					For more information on character encodings, see:
					www.w3.org/International/O-charset.html.
				]]></help>
				<values>
					<value option="utf-8" />
					<value option="iso-8859-1" />
					<value option="windows-1252" />
					<value option="us-ascii" />
					<value option="shift_jis" />
					<value option="iso-2022-jp" />
					<value option="euc-jp" />
					<value option="euc-kr" />
					<value option="big5" />
					<value option="euc-cn" />
					<value option="utf-16" />
				</values>
			</parameter>
			<parameter name="source" type="String" required="true">
				<help><![CDATA[
					Pathname of the file (durring copy).
				]]></help>
				<values/>
			</parameter>
			<parameter name="destination" type="String" required="true">
				<help><![CDATA[
					Pathname of a directory or file on web server
					(durring copy).
				]]></help>
				<values/>
			</parameter>
			<parameter name="variable" type="String" required="true">
				<help><![CDATA[
					Name of variable to contain contents of text file.
				]]></help>
				<values/>
			</parameter>
			<parameter name="filefield" type="String" required="true">
				<help><![CDATA[
					Name of form field used to select the file. 

					Do not use pound signs (#) to specify the field name.
				]]></help>
				<values/>
			</parameter>
			<parameter name="nameconflict" type="String" required="false">
				<help><![CDATA[
					Action to take if filename is the same as that of a file 
					in the directory.
				]]></help>
				<values>
					<value option="error" />
					<value option="skip" />
					<value option="overwrite" />
					<value option="makeunique" />
				</values>
			</parameter>
			<parameter name="accept" type="String" required="true">
				<help><![CDATA[
					Limits the MIME types to accept. Comma-delimited list. For 
					example, to permit JPG and Microsoft Word file uploads:

					accept = "image/jpg, application/msword"
				]]></help>
				<values/>
			</parameter>
		</tag> 
		
		<!-- 
			cfflush   
				interval = "integer number of bytes"
		-->
		<tag creator="3" name="flush" single="false" xmlstyle="false">
			<help><![CDATA[
				Flushes currently available data to the client.
			]]></help>
			<parameter name="interval" type="Numeric" required="false">
				<help><![CDATA[
					Flushes output each time this number of bytes becomes 
					available. HTML headers, and data that is already 
					available when the tag is executed, are omitted from the 
					count.
				]]></help>
				<values/>
			</parameter>
		</tag> 
		
		<!-- 
			cfform    
				name = "name"   
				action = "form_action"   
				preserveData = "Yes" or "No"   
				onSubmit = "javascript"    
				target = "window_name"   
				encType = "type"   
				passThrough = "HTML_attribute(s)"  
				codeBase = "URL"   
				archive = "URL"    
				scriptSrc = "path"   
				standard HTML attributes>
				...
			/cfform
		-->
		<tag creator="3" name="form" single="false" xmlstyle="false">
			<help><![CDATA[
				Builds a form with CFML custom control tags; these provide 
				more functionality than standard HTML form input elements.
			]]></help>
			<parameter name="name" type="String" required="false">
				<help><![CDATA[
					A name for the form.
				]]></help>
				<values/>
			</parameter>
			<parameter name="action" type="String" required="false">
				<help><![CDATA[
					Name of ColdFusion page to execute when the form is 
					submitted for processing.
				]]></help>
				<values/>
			</parameter>
			<parameter name="scriptsrc" type="String" required="false">
				<help><![CDATA[
					Lets the user control the URL of the script file; useful 
					if you do not keep the file in the /cfide directory.
				]]></help>
				<values/>
			</parameter>
			<parameter name="preservedata" type="boolean" required="false">
				<help><![CDATA[
					When the cfform action attribute posts back to the same 
					page as the form, this determines whether to override the 
					control values with the submitted values. 

            		false: values specified in the control tag attributes are 
            			used 
		            true: corresponding submitted values are used 			
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="onsubmit" type="String" required="false">
				<help><![CDATA[
					JavaScript function to execute after input validation. Use 
					for preprocessing data before form is submitted
				]]></help>
				<values/>
			</parameter>
			<parameter name="passthrough" type="String" required="false">
				<help><![CDATA[
					Passes arbitrary attribute-value pairs to the HTML code 
					that is generated for the tag. You can use either of the 
					following formats:

					passthrough="title=""myTitle"""
					passthrough='title="mytitle"'
				]]></help>
				<values/>
			</parameter>
			<parameter name="codebase" type="String" required="false">
				<help><![CDATA[
					URL of downloadable JRE plug-in (for Internet Explorer 
					only).

					Default: /CFIDE/classes/cf-j2re-win.cab
				]]></help>
				<values/>
			</parameter>
			<parameter name="archive" type="String" required="false">
				<help><![CDATA[
					URL of downloadable Java classes for ColdFusion controls. 

					Default: /CFIDE/classes/CFJava2.jar
				]]></help>
				<values/>
			</parameter>
			<parameter name="class" type="String" required="false">
				<help><![CDATA[
				]]></help>
				<values/>
			</parameter>
			<parameter name="enctype" type="String" required="false">
				<help><![CDATA[
				]]></help>
				<values/>
			</parameter>
			<parameter name="id" type="String" required="false">
				<help><![CDATA[
				]]></help>
				<values/>
			</parameter>
			<parameter name="onreset" type="String" required="false">
				<help><![CDATA[
				]]></help>
				<values/>
			</parameter>
			<parameter name="style" type="String" required="false">
				<help><![CDATA[
				]]></help>
				<values/>
			</parameter>
			<parameter name="target" type="String" required="false">
				<help><![CDATA[
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfftp    
				action = "action"   
				username = "name"   
				password = "password"   
				server = "server"   
				timeout = "timeout in seconds"   
				port = "port"   
				connection = "name"   
				proxyServer = "proxy server"   
				retryCount = "number"   
				stopOnError = "Yes" or "No"   
				passive = "Yes" or "No"
			OR	
			cfftp    
				action = "action"   
				username = "name"   
				password = "password"   
				name = "query_name"   
				server = "server"   
				ASCIIExtensionList = "extensions"   
				transferMode = "mode"   
				failIfExists = "Yes" or "No"   
				directory = "directory name"   
				localFile = "filename"   
				remoteFile = "filename"   
				item = "directory or file"   
				existing = "file or directory name"   
				new = "file or directory name"   
				proxyServer = "proxy server"   
				passive = "Yes" or "No"
			============================================
			cfftp    
				action = "action"   
				username = "name"   
				password = "password"   
				name = "query_name"   
				server = "server"   
				ASCIIExtensionList = "extensions"   
				transferMode = "mode"   
				failIfExists = "Yes" or "No"   
				directory = "directory name"   
				localFile = "filename"   
				remoteFile = "filename"   
				item = "directory or file"   
				existing = "file or directory name"   
				new = "file or directory name"   
				proxyServer = "proxy server"   
				passive = "Yes" or "No"
				timeout = "timeout in seconds"
				port = "port"
				connection = "name" 
				retryCount = "number"   
				stopOnError = "Yes" or "No"
		-->
		<tag creator="3" name="ftp" single="false" xmlstyle="false">
			<help><![CDATA[
				Lets users implement File Transfer Protocol (FTP) operations.
			]]></help>
			<parameter name="action" type="String" required="true">
				<help><![CDATA[
					FTP operation to perform. 
					open: create an FTP connection 
					close: terminate an FTP connection 
				]]></help>
				<values>
					<value option="open" />
					<value option="close" />
					<value option="changedir" />
					<value option="createdir" />
					<value option="listdir" />
					<value option="removedir" />
					<value option="getfile" />
					<value option="putfile" />
					<value option="rename" />
					<value option="remove" />
					<value option="getcurrentdir" />
					<value option="getcurrenturl" />
					<value option="existsdir" />
					<value option="existsfile" />
					<value option="exists" />
				</values>
			</parameter>
			<parameter name="username" type="String" required="false">
				<help><![CDATA[
					Overrides username specified in ODBC setup.
				]]></help>
				<values/>
			</parameter>
			<parameter name="password" type="String" required="false">
				<help><![CDATA[
					Overrides password specified in ODBC setup.
				]]></help>
				<values/>
			</parameter>
			<parameter name="server" type="String" required="false">
				<help><![CDATA[
					FTP server to which to connect; for example, 
					ftp.myserver.com
				]]></help>
				<values/>
			</parameter>
			<parameter name="timeout" type="Numeric" required="false">
				<help><![CDATA[
					Value in seconds for the timeout of all operations, 
					including individual data request operations.
				]]></help>
				<values/>
			</parameter>
			<parameter name="port" type="Numeric" required="false">
				<help><![CDATA[
					Remote port to which to connect
				]]></help>
				<values/>
			</parameter>
			<parameter name="connection" type="String" required="false">
				<help><![CDATA[
					Name of the FTP connection. If you specify the username, 
					password, and server attributes, and if no connection 
					exists for them, ColdFusion creates one. Calls to cfftp 
					with the same connection name reuse the connection.
				]]></help>
				<values/>
			</parameter>
			<parameter name="proxyserver" type="String" required="false">
				<help><![CDATA[
					The proxy server required to access the URL.
				]]></help>
				<values/>
			</parameter>
			<parameter name="retrycount" type="Numeric" required="false">
				<help><![CDATA[
					Number of retries until failure is reported.
				]]></help>
				<values/>
			</parameter>
			<parameter name="stoponerror" type="boolean" required="false">
				<help><![CDATA[
					Yes: halts processing, displays an appropriate error. 
					No: populates the error	variables
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="passive" type="boolean" required="false">
				<help><![CDATA[
					Yes: enable passive mode 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="asciiextensionist" type="String" required="false">
				<help><![CDATA[
					Delimited list of file extensions that force ASCII 
					transfer mode, if transferMode = "auto".
				]]></help>
				<values/>
			</parameter>
			<parameter name="transfermode" type="String" required="false">
				<help><![CDATA[
					ASCII FTP transfer mode 
                    Binary FTP transfer mode 
                    Auto FTP transfer mode 
				]]></help>
				<values>
					<value option="ascii" />
					<value option="binary" />
					<value option="auto" />
				</values>
			</parameter>
			<parameter name="failifexists" type="boolean" required="false">
				<help><![CDATA[
					Yes: if a local file with same name exists, getFile fails
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="directory" type="String" required="false">
				<help><![CDATA[
					Directory on which to perform an operation
				]]></help>
				<values/>
			</parameter>
			<parameter name="localfile" type="String" required="false">
				<help><![CDATA[
					Name of the file on the local file system
				]]></help>
				<values/>
			</parameter>
			<parameter name="remotefile" type="String" required="false">
				<help><![CDATA[
					Name of the file on the FTP server file system.
				]]></help>
				<values/>
			</parameter>
			<parameter name="item" type="String" required="false">
				<help><![CDATA[
					Object of these actions: file or directory.
				]]></help>
				<values/>
			</parameter>
			<parameter name="existing" type="String" required="false">
				<help><![CDATA[
					Current name of the file or directory on the remote server.
				]]></help>
				<values/>
			</parameter>
			<parameter name="new" type="String" required="false">
				<help><![CDATA[
					New name of file or directory on the remote server
				]]></help>
				<values/>
			</parameter>
		</tag> 
		
		<!-- 
			cffunction   
				name = "methodName"   
				returnType = "dataType"   
				roles = "securityRoles"   
				access = "methodAccess"   
				output = "yes" or "no"   
				displayName = "name"   
				Hint = "hint text"
		-->
		<tag creator="3" name="function" single="false" xmlstyle="false">
			<help><![CDATA[
				Defines a function that you can call in CFML. Required to 
				defined ColdFusion component methods.
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					A string; a component method that is used within the 
					cfcomponent tag.
				]]></help>
				<values/>
			</parameter>
			<parameter name="returntype" type="String" required="true">
				<help><![CDATA[
					String; a type name; data type of the function return value
					Required for a web service; Optional, otherwise.
				]]></help>
				<values>
					<value option="any" />
					<value option="array" />
					<value option="binary" />
					<value option="boolean" />
					<value option="date" />
					<value option="guid" />
					<value option="numeric" />
					<value option="query" />
					<value option="string" />
					<value option="struct" />
					<value option="uuid" />
					<value option="variable_name" />
				</values>
			</parameter>
			<parameter name="roles" type="String" required="false">
				<help><![CDATA[
					A comma-delimited list of ColdFusion security roles that 
					can invoke the method. Only users who are logged in with 
					the specified roles can execute the function. If this 
					attribute is omitted, all users can invoke the method
				]]></help>
				<values/>
			</parameter>
			<parameter name="access" type="String" required="false">
				<help><![CDATA[
					The client security context from which the method can be 
					invoked:

					private: available only to the component that declares the 
						method and any components that extend the component in 
						which it is defined 
					package: available only to the component that declares the 
						method, components that extend the component, or any 
						other components in the package 
					public: available to a locally executing page or component 
						method 
					remote: available to a locally or remotely executing page 
						or component method, or a remote client through a URL, 
						Flash, or a web service. To publish the function as a 
						web service, this option is required. 
				]]></help>
				<values>
					<value option="private" />
					<value option="package" />
					<value option="public" />
					<value option="remote" />
				</values>
			</parameter>
			<parameter name="output" type="boolean" required="false">
				<help><![CDATA[
					Specifies under which conditions the function can generate 
					HTML output.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>	
			<parameter name="displayname" type="String" required="false">
				<help><![CDATA[
					Meaningful only for CFC method parameters. A value to be 
					displayed in parentheses following the function name when 
					using introspection to show information about the CFC
				]]></help>
				<values/>
			</parameter>
			<parameter name="hint" type="String" required="false">
				<help><![CDATA[
					Meaningful only for CFC method parameters. Text to be 
					displayed when using introspection to show information 
					about the CFC. The hint attribute value follows the syntax 
					line in the function description
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfgrid    
				name = "name"   
				height = "integer"   
				width = "integer"   
				autoWidth = "Yes" or "No"   
				vSpace = "integer"   
				hSpace = "integer"   
				align = "value"   
				query = "query_name"   
				insert = "Yes" or "No"   
				delete = "Yes" or "No"   
				sort = "Yes" or "No"   
				font = "column_font"   
				fontSize = "size"   
				italic = "Yes" or "No"   
				bold = "Yes" or "No"   
				textColor = "web color"   
				href = "URL"   
				hrefKey = "column_name"   
				target = "URL_target"   
				appendKey = "Yes" or "No"   
				highlightHref = "Yes" or "No"   
				onValidate = "javascript_function"   
				onError = "text"   
				gridDataAlign = "position"   
				gridLines = "Yes" or "No"   
				rowHeight = "pixels"   
				rowHeaders = "Yes" or "No"   
				rowHeaderAlign = "position"   
				rowHeaderFont = "font_name"   
				rowHeaderFontSize = "size"   
				rowHeaderItalic = "Yes" or "No"   
				rowHeaderBold = "Yes" or "No"   
				rowHeaderTextColor = "web color"   
				colHeaders = "Yes" or "No"   
				colHeaderAlign = "position"   
				colHeaderFont = "font_name"   
				colHeaderFontSize = "size"   
				colHeaderItalic = "Yes" or "No"   
				colHeaderBold = "Yes" or "No"   
				colHeaderTextColor = "web color"   
				bgColor = "web color"   
				selectColor = "web color"   
				selectMode = "mode"   
				maxRows = "number"   
				notSupported = "text"   
				pictureBar = "Yes" or "No"   
				insertButton = "text"   
				deleteButton = "text"   
				sortAscendingButton = "text"   
				sortDescendingButton = "text"
			/cfgrid
		-->
		<tag creator="3" name="grid" single="false" xmlstyle="false">
			<help><![CDATA[
				Used within the cfform tag. Puts a grid control (a table of 
				data) in a ColdFusion form. To specify grid columns and row 
				data, use the cfgridcolumn and cfgridrow tags, or use the 
				query attribute, with or without cfgridcolumn tags.
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Name of grid element.
				]]></help>
				<values/>
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help><![CDATA[
					Control's height, in pixels.
				]]></help>
				<values/>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help><![CDATA[
					Control's width, in pixels.
				]]></help>
				<values/>
			</parameter>	
			<parameter name="autowidth" type="boolean" required="false">
				<help><![CDATA[
					Yes: sets column widths so that all columns display within 
						grid width. 
					No: sets columns to equal widths. User can resize columns. 
						Horizontal scroll bars are not available, because if 
						you specify a column width and set autoWidth = "Yes", 
						ColdFusion sets to this width, if possible
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="vspace" type="Numeric" required="false">
				<help><![CDATA[
					Vertical margin above and below control, in pixels.
				]]></help>
				<values/>
			</parameter>
			<parameter name="hspace" type="Numeric" required="false">
				<help><![CDATA[
					Horizontal spacing to left and right of control, in pixels.
				]]></help>
				<values/>
			</parameter>
			<parameter name="align" type="String" required="false">
				<help><![CDATA[
					Alignment of the grid cell contents
				]]></help>
				<values>
					<value option="top" />
					<value option="left" />
					<value option="bottom" />
					<value option="baseline" />
					<value option="texttop" />
					<value option="absbottom" />
					<value option="middle" />
					<value option="absmiddle" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="query" type="String" required="false">
				<help><![CDATA[
					Name of query associated with grid control. 
				]]></help>
				<values/>
			</parameter>
			<parameter name="insert" type="boolean" required="false">
				<help><![CDATA[
					Yes: user can insert row data in grid. Takes effect only if
					selectmode="edit"
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="delete" type="boolean" required="false">
				<help><![CDATA[
					Yes: user can delete row data from grid. Takes effect only 
					if selectmode="edit"
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="sort" type="boolean" required="false">
				<help><![CDATA[
					The sort button performs simple text sort on column. User 
					can sort columns by clicking column head or by clicking 
					sort buttons. Not valid with selectmode=browse.
					
					Yes: sort buttons display on grid control 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help><![CDATA[
					Font of data in column. 
				]]></help>
				<values/>
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help><![CDATA[
					Size of text in column.
				]]></help>
				<values/>
			</parameter>
			<parameter name="italic" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays grid control text in italics
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="bold" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays grid control text in bold
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="textcolor" type="String" required="false">
				<help><![CDATA[
					Text color for control. For a hex value, use the form:
					textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
					signs or none.
				]]></help>
				<values>
					<value option="black" />
					<value option="red" />
					<value option="blue" />
					<value option="magenta" />
					<value option="cyan" />
					<value option="orange" />
					<value option="darkgray" />
					<value option="pink" />
					<value option="white" />
					<value option="lightgray" />
					<value option="yellow" />
				</values>
			</parameter>
			<parameter name="href" type="String" required="false">
				<help><![CDATA[
					URL o r query column name that contains a URL to hyperlink 
					each grid column with.
				]]></help>
				<values/>
			</parameter>
			<parameter name="hrefkey" type="String" required="false">
				<help><![CDATA[
					The query column to use for the value appended to the href 
					URL of each column, instead of the column's value.
				]]></help>
				<values/>
			</parameter>
			<parameter name="target" type="String" required="false">
				<help><![CDATA[
					Frame in which to open link specified in href.
				]]></help>
				<values/>
			</parameter>
			<parameter name="appendkey" type="boolean" required="false">
				<help><![CDATA[
					Yes: when used with href, passes CFTREEITEMKEY variable 
						with the value of the selected tree item in URL to the 
						application page specified in the cfform action 
						attribute 
					No
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="highlighthref" type="boolean" required="false">
				<help><![CDATA[
					Yes: highlights links that are associated with a cftreeitem 
						with a URL attribute value 
					No: disables highlight
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="onvalidate" type="String" required="false">
				<help><![CDATA[
					JavaScript function to validate user input. The form object,
					input object, and input object value are passed to the 
					specified routine, which should return True if validation 
					succeeds; False, otherwise.
				]]></help>
				<values/>
			</parameter>
			<parameter name="onerror" type="String" required="false">
				<help><![CDATA[
					JavaScript function to execute if validation fails.
				]]></help>
				<values/>
			</parameter>
			<parameter name="griddataalign" type="String" required="false">
				<help><![CDATA[
					Left: left-aligns data within column. 
                    Right: right-aligns data within column. 
                    Center: center-aligns data within column.
				]]></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="gridlines" type="boolean" required="false">
				<help><![CDATA[
					Yes: enables row and column rules in grid control
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="rowheight" type="Numeric" required="false">
				<help><![CDATA[
					Minimum row height, in pixels, of grid control. Used with 
					cfgridcolumn type = "Image"; defines space for graphics to 
					display in row.
				]]></help>
				<values/>
			</parameter>
			<parameter name="rowheaders" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays a column of numeric row labels in grid 
					control 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="rowheaderalign" type="String" required="false">
				<help><![CDATA[
					Left: left-aligns data within row header 
                    Right: right-aligns data within row header
                    Center: center-aligns data within row header
				]]></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="rowheaderfont" type="String" required="false">
				<help><![CDATA[
					Font of data in column. 
				]]></help>
				<values/>
			</parameter>
			<parameter name="rowheaderfontsize" type="Numeric" required="false">
				<help><![CDATA[
					Size of text in column.
				]]></help>
				<values/>
			</parameter>
			<parameter name="rowheaderitalic" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays grid control text in italics
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="rowheaderbold" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays grid control text in bold
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="rowheadertextcolor" type="String" required="false">
				<help><![CDATA[
					Text color for control. For a hex value, use the form:
					textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
					signs or none.
				]]></help>
				<values>
					<value option="black" />
					<value option="red" />
					<value option="blue" />
					<value option="magenta" />
					<value option="cyan" />
					<value option="orange" />
					<value option="darkgray" />
					<value option="pink" />
					<value option="white" />
					<value option="lightgray" />
					<value option="yellow" />
				</values>
			</parameter>
			<parameter name="colheaders" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays a column of numeric row labels in grid 
					control 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="colheaderalign" type="String" required="false">
				<help><![CDATA[
					Left: left-aligns data within row header 
                    Right: right-aligns data within row header
                    Center: center-aligns data within row header
				]]></help>
				<values>
					<value option="left" />
					<value option="center" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="colheaderfont" type="String" required="false">
				<help><![CDATA[
					Font of data in column. 
				]]></help>
				<values/>
			</parameter>
			<parameter name="colheaderfontsize" type="Numeric" required="false">
				<help><![CDATA[
					Size of text in column.
				]]></help>
				<values/>
			</parameter>
			<parameter name="colheaderitalic" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays grid control text in italics
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="colheaderbold" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays grid control text in bold
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="colheadertextcolor" type="String" required="false">
				<help><![CDATA[
					Text color for control. For a hex value, use the form:
					textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
					signs or none.
				]]></help>
				<values>
					<value option="black" />
					<value option="red" />
					<value option="blue" />
					<value option="magenta" />
					<value option="cyan" />
					<value option="orange" />
					<value option="darkgray" />
					<value option="pink" />
					<value option="white" />
					<value option="lightgray" />
					<value option="yellow" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="String" required="false">
				<help><![CDATA[
					Background color of grid control.
				]]></help>
				<values>
					<value option="black" />
					<value option="red" />
					<value option="blue" />
					<value option="magenta" />
					<value option="cyan" />
					<value option="orange" />
					<value option="darkgray" />
					<value option="pink" />
					<value option="white" />
					<value option="lightgray" />
					<value option="yellow" />
				</values>
			</parameter>
			<parameter name="selectcolor" type="String" required="false">
				<help><![CDATA[
					Background color for a selected item.
				]]></help>
				<values>
					<value option="black" />
					<value option="red" />
					<value option="blue" />
					<value option="magenta" />
					<value option="cyan" />
					<value option="orange" />
					<value option="darkgray" />
					<value option="pink" />
					<value option="white" />
					<value option="lightgray" />
					<value option="yellow" />
				</values>
			</parameter>
			<parameter name="selectmode" type="String" required="false">
				<help><![CDATA[
					Selection mode for items in grid control. 

					Edit: user can edit grid data. Selecting a cell opens the 
						editor for the cell type. 
					Single: user selections are limited to selected cell. 
					Row: user selections automatically extend to the row that 
						contains selected cell. 
					Column: user selections automatically extend to column 
						that contains selected cell. 
					Browse: user can only browse grid data 
				]]></help>
				<values>
					<value option="edit" />
					<value option="single" />
					<value option="row" />
					<value option="column" />
					<value option="browse" />
				</values>
			</parameter>
			<parameter name="maxrows" type="Numeric" required="false">
				<help><![CDATA[
					Maximum number of rows to display in grid.
				]]></help>
				<values/>
			</parameter>
			<parameter name="notsupported" type="String" required="false">
				<help><![CDATA[
					Message to display if page that contains Java applet-based 
					form control is opened by browser that does not support 
					Java, or has Java support disabled. For example:

					notSupported = "<b> Browser must support Java to view 
					ColdFusion Java Applets</b>"

					If no message is specified, this message displays:

					<b>Browser must support Java to <br> view ColdFusion Java 
					Applets!</b>
				]]></help>
				<values/>
			</parameter>			
			<parameter name="picturebar" type="boolean" required="false">
				<help><![CDATA[
					Yes: images for Insert, Delete, Sort buttons
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="insertbutton" type="String" required="false">
				<help><![CDATA[
					Text for the insert button. Takes effect only if 
					selectmode="edit".
				]]></help>
				<values/>
			</parameter>
			<parameter name="deletebutton" type="String" required="false">
				<help><![CDATA[
					Text of Delete button text. Takes effect only if 
					selectmode="edit".
				]]></help>
				<values/>
			</parameter>
			<parameter name="sortascendingbutton" type="String" required="false">
				<help><![CDATA[
					Sort button text
				]]></help>
				<values/>
			</parameter>			
			<parameter name="sortdescendingbutton" type="String" required="false">
				<help><![CDATA[
					Sort button text
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfgridcolumn    
				name = "column_name"   
				header = "header"   
				width = "column_width"   
				font = "column_font"   
				fontSize = "size"   
				italic = "Yes" or "No"   
				bold = "Yes" or "No"   
				textColor = "web color" or "expression"   
				bgColor = "web color" or "expression"   
				href = "URL"   
				hrefKey = "column_name"   
				target = "URL_target"   
				select = "Yes" or "No"   
				display = "Yes" or "No"   
				type = "type"   
				headerFont = "font_name"   
				headerFontSize = "size"   
				headerItalic = "Yes" or "No"   
				headerBold = "Yes" or "No"   
				headerTextColor = "web color"   
				dataAlign = "position"   
				headerAlign = "position"   
				numberFormat = "format"   
				values = "Comma separated strings and/or numeric range"   
				valuesDisplay = "Comma separated strings and/or numeric range"   
				valuesDelimiter = "delimiter character"
		-->
		<tag creator="3" name="gridcolumn" single="true" xmlstyle="false">
			<help><![CDATA[
				Used with the cfgrid tag in a cfform. Use this tag to specify 
				column data in a cfgrid control. The font and alignment 
				attributes used in cfgridcolumn override global font or 
				alignment settings defined in cfgrid.
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Name of grid column element. If grid uses a query, column 
					name must specify name of a query column.
				]]></help>
				<values/>
			</parameter>
			<parameter name="header" type="boolean" required="false">
				<help><![CDATA[
					Column header text. Used only if cfgrid colHeaders = "Yes".
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help><![CDATA[
					Column width, in pixels.
				]]></help>
				<values/>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help><![CDATA[
					Font of data in column. 
				]]></help>
				<values/>
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help><![CDATA[
					Size of text in column.
				]]></help>
				<values/>
			</parameter>
			<parameter name="italic" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays grid control text in italics
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="bold" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays grid control text in bold
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="String" required="false">
				<help><![CDATA[
					Background color of control. For a hex value, use the form:
					textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
					signs or none.
				]]></help>
				<values>
					<value option="black" />
					<value option="red" />
					<value option="blue" />
					<value option="magenta" />
					<value option="cyan" />
					<value option="orange" />
					<value option="darkgray" />
					<value option="pink" />
					<value option="white" />
					<value option="lightgray" />
					<value option="yellow" />
				</values>
			</parameter>
			<parameter name="textcolor" type="String" required="false">
				<help><![CDATA[
					Text color for control. For a hex value, use the form:
					textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
					signs or none.
				]]></help>
				<values>
					<value option="black" />
					<value option="red" />
					<value option="blue" />
					<value option="magenta" />
					<value option="cyan" />
					<value option="orange" />
					<value option="darkgray" />
					<value option="pink" />
					<value option="white" />
					<value option="lightgray" />
					<value option="yellow" />
				</values>
			</parameter>
			<parameter name="href" type="String" required="false">
				<help><![CDATA[
					URL o r query column name that contains a URL to hyperlink 
					each grid column with.
				]]></help>
				<values/>
			</parameter>
			<parameter name="hrefkey" type="String" required="false">
				<help><![CDATA[
					The query column to use for the value appended to the href 
					URL of each column, instead of the column's value.
				]]></help>
				<values/>
			</parameter>
			<parameter name="target" type="String" required="false">
				<help><![CDATA[
					Frame in which to open link specified in href.
				]]></help>
				<values/>
			</parameter>
			<parameter name="select" type="boolean" required="false">
				<help><![CDATA[
					Yes: user can select the column in grid control. 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="display" type="boolean" required="false">
				<help><![CDATA[
					No: hides column 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="type" type="String" required="false">
				<help><![CDATA[
					image: grid displays image that corresponds to value in 
					column (a built-in ColdFusion image name, or an image in 
					cfide\classes directory or subdirectory referenced with 
					relative URL). If image is larger than column cell, it is 
					clipped to fit. Built-in image names 
				]]></help>
				<values>
					<value option="cd" />
					<value option="computer" />
					<value option="document" />
					<value option="element" />
					<value option="folder" />
					<value option="floppy" />
					<value option="fixed" />
					<value option="remote" />
				</values>
			</parameter>
			<parameter name="headerfont" type="String" required="false">
				<help><![CDATA[
					Font of data in column. 
				]]></help>
				<values/>
			</parameter>
			<parameter name="headerfontsize" type="Numeric" required="false">
				<help><![CDATA[
					Size of text in column.
				]]></help>
				<values/>
			</parameter>
			<parameter name="headeritalic" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays grid control text in italics
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="headerbold" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays grid control text in bold
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="headertextcolor" type="String" required="false">
				<help><![CDATA[
					Text color for control. For a hex value, use the form:
					textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
					signs or none.
				]]></help>
				<values>
					<value option="black" />
					<value option="red" />
					<value option="blue" />
					<value option="magenta" />
					<value option="cyan" />
					<value option="orange" />
					<value option="darkgray" />
					<value option="pink" />
					<value option="white" />
					<value option="lightgray" />
					<value option="yellow" />
				</values>
			</parameter>
			<parameter name="dataalign" type="String" required="false">
				<help><![CDATA[
					Column data alignment
				]]></help>
				<values>
					<value option="left" />
					<value option="right" />
					<value option="center" />
				</values>
			</parameter>
			<parameter name="headeralign" type="String" required="false">
				<help><![CDATA[
					Column header text alignment
				]]></help>
				<values>
					<value option="left" />
					<value option="right" />
					<value option="center" />
				</values>
			</parameter>
			<parameter name="numberformat" type="String" required="false">
				<help><![CDATA[
					Format for displaying numeric data in grid. See 
					numberFormat mask characters.
				]]></help>
				<values/>
			</parameter>
			<parameter name="values" type="String" required="false">
				<help><![CDATA[
					Formats cells in column as drop-down list boxes; specify 
					items in drop-down list. Example:
					values = "arthur, scott, charles, 1-20, mabel"
				]]></help>
				<values/>
			</parameter>
			<parameter name="valuesdisplay" type="String" required="false">
				<help><![CDATA[
					Maps elements in values attribute to string to display in 
					drop-down list. Delimited strings and/or numeric range(s). 
				]]></help>
				<values/>
			</parameter>
			<parameter name="valuesdelimiter" type="String" required="false">
				<help><![CDATA[
					Maps elements in values attribute to string to display in 
					drop-down list. Delimited strings and/or numeric range(s). 
				]]></help>
				<values/>
			</parameter>
		</tag> 
		
		<!-- 
			cfgridrow
				data = "col1, col2, ..."
		-->
		<tag creator="3" name="gridrow" single="true" xmlstyle="false">
			<help><![CDATA[
				Lets you define a cfgrid that does not use a query as source 
				for row data. If a query attribute is specified in cfgrid, the 
				cfgridrow tags are ignored.
			]]></help>
			<parameter name="data" type="String" required="true">
				<help><![CDATA[
					Delimited list of column values. If a value contains a 
					comma, it must be escaped with another comma
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfgridupdate    
				grid = "gridname"   
				dataSource = "data source name"   
				tableName = "table name"   
				username = "data source username"   
				password = "data source password"   
				tableOwner = "table owner"   
				tableQualifier = "qualifier"   
				keyOnly = "Yes" or "No"
		-->
		<tag creator="3" name="gridupdate" single="true" xmlstyle="false">
			<help><![CDATA[
				Used within a cfgrid tag. Updates data sources directly from 
				edited grid data. This tag provides a direct interface with 
				your data source.

				This tag applies delete row actions first, then insert row 
				actions, then update row actions. If it encounters an error, 
				it stops processing rows.
			]]></help>
			<parameter name="grid" type="String" required="true">
				<help><![CDATA[
					Name of cfgrid form element that is the source for the 
					update action.
				]]></help>
				<values/>
			</parameter>
			<parameter name="datasource" type="String" required="true">
				<help><![CDATA[
					Name of data source for the update action.
				]]></help>
				<values/>
			</parameter>
			<parameter name="tablename" type="String" required="true">
				<help><![CDATA[
					Table in which to insert form fields.

					ORACLE drivers: must be uppercase.
					Sybase driver: case-sensitive. Must be the same case used 
						when table was created
				]]></help>
				<values/>
			</parameter>
			<parameter name="username" type="String" required="false">
				<help><![CDATA[
					Overrides username specified in ODBC setup.
				]]></help>
				<values/>
			</parameter>
			<parameter name="password" type="String" required="false">
				<help><![CDATA[
					Overrides password specified in ODBC setup.
				]]></help>
				<values/>
			</parameter>
			<parameter name="tableowner" type="String" required="false">
				<help><![CDATA[
					Table owner, if supported.
				]]></help>
				<values/>
			</parameter>
			<parameter name="tablequalifier" type="String" required="false">
				<help><![CDATA[
					For data sources that support table qualifiers, use this 
					field to specify qualifier for table. The purpose of table 
					qualifiers varies among drivers. For SQL Server and 
					Oracle, qualifier refers to name of database that contains 
					table. For Intersolv dBASE driver, qualifier refers to 
					directory where DBF files are located.
				]]></help>
				<values/>
			</parameter>			
			<parameter name="keyonly" type="boolean" required="false">
				<help><![CDATA[
					Applies to the update action:
					Yes: the WHERE criteria are limited to the key values 
					No: the WHERE criteria include key values and the original 
						values of changed fields 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
			cfheader    
				name = "header_name"   
				value = "header_value"   
				charset="charset"
			OR
			cfheader    
				statusCode = "status_code"   
				statusText = "status_text"
		-->
		<tag creator="3" name="header" single="true" xmlstyle="false">
			<help><![CDATA[
				Generates custom HTTP response headers to return to the client.
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Header name
					Required if statusCode not specified
				]]></help>
				<values/>
			</parameter>
			<parameter name="value" type="String" required="false">
				<help><![CDATA[
					HTTP header value
				]]></help>
				<values/>
			</parameter>
			<parameter name="charset" type="String" required="false">
				<help><![CDATA[
					The character encoding in which to encode the header value.
					
					For more information on character encodings, see:
					www.w3.org/International/O-charset.html.
				]]></help>
				<values>
					<value option="utf-8" />
					<value option="iso-8859-1" />
					<value option="windows-1252" />
					<value option="us-ascii" />
					<value option="shift_jis" />
					<value option="iso-2022-jp" />
					<value option="euc-jp" />
					<value option="euc-kr" />
					<value option="big5" />
					<value option="euc-cn" />
					<value option="utf-16" />
				</values>
			</parameter>
			<parameter name="statuscode" type="Numeric" required="true">
				<help><![CDATA[
					HTTP status code
					Required if name not specified
  				]]></help>
				<values/>
			</parameter>
			<parameter name="statustext" type="String" required="false">
				<help><![CDATA[
					Explains status code
  				]]></help>
				<values/>
			</parameter>
		</tag> 
		
		<!-- 
			cfhtmlhead    
				text = "text"
		-->
		<tag creator="3" name="htmlhead" single="true" xmlstyle="false">
			<help><![CDATA[
				Writes text to the head section of a generated HTML page. It is
				useful for embedding JavaScript code, or putting other HTML 
				tags, such as meta, link, title, or base in an HTML page 
				header.
			]]></help>
			<parameter name="text" type="String" required="true">
				<help><![CDATA[
					Text to add to the <head> area of an HTML page.
				]]></help>
				<values/>
			</parameter>
		</tag> 
		
		<!-- 
			cfhttp    
				url = "server_URL"   
				port = "port_number"   
				method = "method_name"   
				proxyServer = "hostname"   
				proxyPort = "port_number"   
				proxyUser = "username"   
				proxyPassword = "password"   
				username = "username"   
				password = "password"   
				userAgent = "user_agent"   
				charset = "character encoding"   
				resolveURL = "yes" or "no"   
				throwOnError = "yes" or no"   
				redirect = "yes" or "no"   
				timeout = "timeout_period"   
				getasbinary = "yes or no"   
				multipart = "yes or no"   
				path = "path"   
				file = "filename"   
				name = "queryname"   
				columns = "query_columns"   
				firstrowasheaders = "yes" or "no"   
				delimiter = "character"   
				textQualifier = "character"
			   [cfhttpparam tags - optional for some methods]
		   /cfhttp
		-->
		<tag creator="3" name="http" single="false" xmlstyle="false">
			<help><![CDATA[
				Generates an HTTP request and handles the response from the 
				server. 
			]]></help>
			<parameter name="url" type="URL" required="true">
				<help><![CDATA[
					Address of the resource on the server which will handle 
					the request. The URL must include the hostname or IP 
					address.

					If you do not specify the transaction protocol (http:// or 
					https://), ColdFusion defaults to http.

					If you specify a port number in this attribute, it 
					overrides any port attribute value.

					The cfhttppparam tag URL attribute appends query string 
					attribute-value pairs to the URL.
				]]></help>
				<values/>
			</parameter>
			<parameter name="port" type="Numeric" required="false">
				<help><![CDATA[
					Port number on the server to which to send the request. 
					A port value in the url attribute overrides this value. 
					(default: http 80 - https 443)
				]]></help>
				<values/>
			</parameter>
			<parameter name="method" type="String" required="false">
				<help><![CDATA[
                    * GET Requests information from the server. Any data that 
                    	the server requires to identify the requested 
                    	information must be in the URL or in cfhttp type="URL"
                    	tags. 
                    * POST Sends information to the server for processing. 
                    	Requires one or more cfhttpparam tags. Often used for 
                    	submitting form-like data. 
                    * PUT Requests the server to store the message body at the 
                    	specified URL. Use this method to send files to the 
                    	server. 
                    * DELETE Requests the server to delete the specified URL. 
                    * HEAD Identical to the GET method, but the server does 
                    	not send a message body in the response. Use this 
                    	method for testing hypertext links for validity and 
                    	accessibility, determining the type or modification 
                    	time of a document, or determining the type of server. 
                    * TRACE Requests that the server echo the received HTTP 
                    	headers back to the sender in the response body. Trace 
                    	requests cannot have bodies. This method enables the 
                    	ColdFusion application to see what is being received 
                    	at the server, and use that data for testing or 
                    	diagnostic information. 
                    * OPTIONS A request for information about the 
                    	communication options available for the server or the 
                    	specified URL. This method enables the ColdFusion 
                    	application to determine the options and requirements 
                    	associated with a URL, or the capabilities of a server,
                    	without requesting any additional activity by the 
                    	server.
				]]></help>
				<values>
					<value option="get" />
					<value option="post" />
					<value option="put" />
					<value option="delete" />
					<value option="head" />
					<value option="trace" />
					<value option="options" />
				</values>
			</parameter>
			<parameter name="proxyserver" type="String" required="false">
				<help><![CDATA[
					The proxy server required to access the URL.
				]]></help>
				<values/>
			</parameter>
			<parameter name="proxyport" type="Numeric" required="false">
				<help><![CDATA[
					The port to use on The proxy server.
				]]></help>
				<values/>
			</parameter>
			<parameter name="proxyuser" type="String" required="false">
				<help><![CDATA[
					The user ID to send to the proxy server.
				]]></help>
				<values/>
			</parameter>
			<parameter name="proxypassword" type="String" required="false">
				<help><![CDATA[
					The user's password on the proxy server.
				]]></help>
				<values/>
			</parameter>
			<parameter name="username" type="String" required="false">
				<help><![CDATA[
					A username. May be required by server.
				]]></help>
				<values/>
			</parameter>
			<parameter name="password" type="String" required="false">
				<help><![CDATA[
					A password. May be required by server
				]]></help>
				<values/>
			</parameter>
			<parameter name="useragent" type="String" required="false">
				<help><![CDATA[
					Text to put in the user agent request header. Used to 
					identify the request client software. Can make the 
					ColdFusion application appear to be a browser.
				]]></help>
				<values/>
			</parameter>
			<parameter name="charset" type="String" required="false">
				<help><![CDATA[
					TThe character encoding of the request, including the URL 
					query string and form or file data, and the response. 
					
					For more information on character encodings, see:
					www.w3.org/International/O-charset.html.
				]]></help>
				<values>
					<value option="utf-8" />
					<value option="iso-8859-1" />
					<value option="windows-1252" />
					<value option="us-ascii" />
					<value option="shift_jis" />
					<value option="iso-2022-jp" />
					<value option="euc-jp" />
					<value option="euc-kr" />
					<value option="big5" />
					<value option="euc-cn" />
					<value option="utf-16" />
				</values>
			</parameter>
			<parameter name="resolveurl" type="boolean" required="false">
				<help><![CDATA[
					No does not resolve URLs in the response body. As a result,
						any relative URL links in the response body do not work. 
					Yes resolves URLs in the response body to absolute URLs, 
						including the port number, so that links in a retrieved
						page remain functional.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="throwonerror" type="boolean" required="false">
				<help><![CDATA[
					Yes if the server returns an error response code, throws 
						an exception that can be caught using the cftry and 
						cfcatch or ColdFusion error pages. 
					No does not throw an exception if an error response is 
						returned. In this case, your application can use the 
						cfhttp.StatusCode variable to determine if there was 
						an error and its cause.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="redirect" type="boolean" required="false">
				<help><![CDATA[
					If the response header includes a Location field, 
					determines whether to redirect execution to the URL 
					specified in the field.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="timeout" type="Numeric" required="false">
				<help><![CDATA[
					Value, in seconds of the maximum time the request can take.
					If the timeout passes without a response, ColdFusion 
					considers the request to have failed. 
				]]></help>
				<values/>
			</parameter>
			<parameter name="getasbinary" type="String" required="false">
				<help><![CDATA[
					* No If ColdFusion does not recognize the response body 
						type as text, convert it to a ColdFusion object. 
					* Auto If ColdFusion does not recognize the response body 
						type as text, convert it to ColdFusion Binary type data. 
					* Yes Always convert the response body content into 
						ColdFusion Binary type data, even if ColdFusion 
						recognizes the response body type as text.
				]]></help>
				<values>
					<value option="no" />
					<value option="auto" />
					<value option="yes" />
				</values>
			</parameter>
		</tag> 
		
		<!-- 
			cfhttpparam    
				type = "transaction type"   
				name = "data name"   
				value = "data value"   
				file = "filename"   
				encoded = "Yes or No"   
				mimeType = "MIME type designator"
		-->
		<tag creator="3" name="httpparam" single="true" xmlstyle="false">
			<help><![CDATA[
				Allowed inside cfhttp tag bodies only. Required for cfhttp POST 
				operations. Optional for all others. Specifies parameters to 
				build an HTTP request.
			]]></help>
			<parameter name="type" type="String" required="true">
				<help><![CDATA[
					Information type
					* Header: The parameter specifies an HTTP header. 
						ColdFusion does not URL encode the header. 
					* CGI: Specifies an HTTP header. ColdFusion URL encodes 
						the header by default. 
					* Body: Specifies the body of the HTTP request. ColdFusion 
						does not URL encode the body contents. 
					* XML: Identifies the request as having a content-type of 
						text/xml. Specifies that the value attribute contains 
						the body of the HTTP request. Used to send XML to the 
						destination URL. ColdFusion does not URL encode the XML
						data. 
					* File: Tells ColdFusion to send the contents of the 
						specified file. ColdFusion does not URL encode the 
						file contents 
					* URL: Specifies a URL query string name-value pair to 
						append to the cfhttp url attribute. ColdFusion URL 
						encodes the query string. 
					* FormField: Specifies a form field to send. ColdFusion 
						URL encodes the Form field by default. 
					* Cookie: Specifies a cookie to send as an HTTP header. 
						ColdFusion URL encodes the cookie.
				]]></help>
				<values>
					<value option="header" />
					<value option="cgi" />
					<value option="body" />
					<value option="xml" />
					<value option="file" />
					<value option="url" />
					<value option="formfield" />
					<value option="cookie" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help><![CDATA[
					Variable name for data that is passed. Ignored for Body 
					and XML types. For File type, specifies the filename to 
					send in the request.
				]]></help>
				<values/>
			</parameter>
			<parameter name="value" type="String" required="false">
				<help><![CDATA[
					Value of the data that is sent. Ignored for File type. The 
					value must contain string data or data that ColdFusion can 
					convert to a string for all type attributes except Body. 
					Body types can have string or binary values.
				]]></help>
				<values/>
			</parameter>
			<parameter name="file" type="String" required="false">
				<help><![CDATA[
					Applies to File type; ignored for all other types. The 
					absolute path to the file that is sent in the request body.
				]]></help>
				<values/>
			</parameter>
			<parameter name="encoded" type="boolean" required="false">
				<help><![CDATA[
					Applies to FormField and CGI types; ignored for all other 
					types. Specifies whether to URLEncode the form field or 
					header.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="mimetype" type="String" required="false">
				<help><![CDATA[
					Applies to File type; invalid for all other types. 
					Specifies the MIME media type of the file contents. 
					The content type can include an identifier for the 
					character encoding of the file; for example, text/html; 
					charset=ISO-8859-1 indicates that the file is HTML text in 
					the ISO Latin-1 character encoding.
				]]></help>
				<values>
					<value option="text/plain" />
					<value option="text/html" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
			cfif expression
			   [HTML and CFML tags]
			/cfif
		-->
		<tag creator="3" name="if" single="false" xmlstyle="false">
			<help><![CDATA[
				Creates simple and compound conditional statements in CFML. 
				Tests an expression, variable, function return value, or 
				string. Used, optionally, with the cfelse and cfelseif tags.
			]]></help>
		</tag>
		
		<!-- 
			cfimport    
				taglib = "taglib-location"   
				prefix = "custom"
		-->
		<tag creator="3" name="import" single="true" xmlstyle="false">
			<help><![CDATA[
				You can use the cfimport tag to import either of the following:
				
				* All ColdFusion pages in a directory, as a tag custom tag 
				library. 
				* A Java Server Page (JSP) tag library. A JSP tag library is a 
				packaged set of tag handlers that conform to the JSP 1.1 tag 
				extension API.
			]]></help>
			<parameter name="taglib" type="String" required="true">
				<help><![CDATA[
					Tag library URI. The path must be relative to the web root 
					(and start with /), the current page location, or a 
					directory specified in the Administrator ColdFusion 
					mappings page.

					A directory in which custom ColdFusion tags are stored. In 
					this case, all the cfm pages in this directory are treated 
					as custom tags in a tag library. 
					A path to a JAR in a web-application; for example, 
					"/WEB-INF/lib/sometags.jar" 
					A path to a tag library descriptor; for example, 
					"/sometags.tld" 
					Note: You must put JSP custom tag libraries in the
					/WEB-IN/lib directory. This limitation does not apply to 
					ColdFusion pages.
				]]></help>
				<values/>
			</parameter>
			<parameter name="prefix" type="String" required="true">
				<help><![CDATA[
					Prefix by which to access the imported custom CFML tags JSP
					tags. 

					If you import a CFML custom tag directory and specify an 
					empty value, "", for this attribute, you can call the 
					custom tags without using a prefix. You must specify and 
					use a prefix for a JSP tag library.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfinclude    
				template = "template_name"
		-->
		<tag creator="3" name="include" single="true" xmlstyle="false">
			<help><![CDATA[
				Embeds references to ColdFusion pages in CFML. You can embed 
				cfinclude tags recursively. For another way to encapsulate 
				CFML, see cfmodule. (A ColdFusion page was formerly sometimes 
				called a ColdFusion template or a template.)
			]]></help>
			<parameter name="template" type="String" required="true">
				<help><![CDATA[
					A logical path to a ColdFusion page.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfindex    
				collection = "collection_name"   
				action = "action"   
				type = "type"   
				title = "title"   
				key = "ID"   
				body = "body"   
				custom1 = "custom_value"   
				custom2 = "custom_value"   
				URLpath = "URL"   
				extensions = "file_extensions"   
				query = "query_name"   
				recurse = "Yes" or "No"   
				language = "language"
		-->
		<tag creator="3" name="index" single="true" xmlstyle="false">
			<help><![CDATA[
				Populates a Verity search engine collection with an index of 
				documents on a file system or of ColdFusion query result sets. 

				A collection must exist before it can be populated.
			]]></help>
			<parameter name="collection " type="String" required="true">
				<help><![CDATA[
					Name of a collection that is registered by ColdFusion; for 
						example, "personnel" 
					Name and absolute path of a collection that is not 
					registered by ColdFusion; for example: 
					"e:\collections\personnel" 
				]]></help>
				<values/>
			</parameter>
			<parameter name="action" type="String" required="false">
				<help><![CDATA[
					update: updates a collection and adds key to the index. Do 
						not use the cflock tag with this option. 
					delete: deletes data in the entities specified by the type 
						attribute 
					purge: deletes all keys from a collection 
					refresh: purges all keys from a collection, then updates it. 
				]]></help>
				<values>
					<value option="update" />
					<value option="delete" />
					<value option="purge" />
					<value option="refresh" />
				</values>
			</parameter>
			<parameter name="type" type="String" required="false">
				<help><![CDATA[
					file: using the key attribute value of the query result as 
						input, applies action value to filenames or filepaths. 
					path: using the key attribute value of the query result as 
						input, applies action to filenames or filepaths that 
						pass the extensions filter 
					custom: If action = "update" or "delete": applies action to
						custom entities in query results. 
				]]></help>
				<values>
					<value option="file" />
					<value option="path" />
					<value option="custom" />
				</values>
			</parameter>
			<parameter name="title" type="String" required="false">
				<help><![CDATA[
					* Title for collection 
					* Query column name for type and a valid query name 
					Permits searching collections by title or displaying a 
					separate title from the key
				]]></help>
				<values/>
			</parameter>
			<parameter name="key" type="String" required="false">
				<help><![CDATA[
					* Absolute path and filename, if type = "file" 
					* Absolute path, if type = "path" 
					* A query column name (typically, the primary key column 
						name), if type = "custom" 
					* A query column name, if type = any other value 
					
					This attribute is required for the actions listed, unless 
					you intend for its value to be an empty string.
				]]></help>
				<values/>
			</parameter>
			<parameter name="body" type="String" required="false">
				<help><![CDATA[
					* ASCII text to index 
					* Query column name(s), if name is specified in query 
					
					You can specify columns in a delimited list. For example: 
					"emp_name, dept_name, location"
				]]></help>
				<values/>
			</parameter>
			<parameter name="custom1" type="String" required="false">
				<help><![CDATA[
					Custom field in which you can store data during an indexing
					operation. Specify a query column name for type, and a 
					query name.
				]]></help>
				<values/>
			</parameter>
			<parameter name="custom2" type="String" required="false">
				<help><![CDATA[
					Custom field in which you can store data during an indexing
					operation. Specify a query column name for type, and a 
					query name.
				]]></help>
				<values/>
			</parameter>
			<parameter name="urlpath" type="URL" required="false">
				<help><![CDATA[
					If type="file" or "path", specifies the URL path. When the 
					collection is searched with cfsearch, this pathname is 
					prefixed to filenames and returned as the url attribute.
				]]></help>
				<values/>
			</parameter>
			<parameter name="extensions" type="String" required="false">
				<help><![CDATA[
					Delimited list of file extensions that ColdFusion uses to 
					index files, if type = "Path". 
					"*." returns files with no extension.
					
					For example: the following code returns files with a 
					listed extension or no extension: 
					extensions = ".htm, .html, .cfm, .cfml, "*."
				]]></help>
				<values/>
			</parameter>
			<parameter name="query" type="String" required="false">
				<help><![CDATA[
					Query against which collection is generated
				]]></help>
				<values/>
			</parameter>
			<parameter name="recurse" type="boolean" required="false">
				<help><![CDATA[
					Yes: if type = "path", directories below the path 
						specified in key are included in indexing operation
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="language" type="String" required="false">
				<help><![CDATA[
					For options, see cfcollection. Requires the appropriate 
					(European or Asian) Verity Locales language pack.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfinput    
				type = "input_type"   
				name = "name"   
				value = "initial_value"   
				required = "Yes" or "No"   
				range = "min_value, max_value"   
				validate = "data_type"   
				onValidate = "javascript_function"   
				pattern = "regexp"   
				message = "validation_msg"   
				onError = "text"   
				size = "integer"   
				maxLength = "integer"   
				checked    
				passThrough = "HTML_attributes"
		-->
		<tag creator="3" name="input" single="true" xmlstyle="false">
			<help><![CDATA[
				Used within the cfform tag, to place radio buttons, check boxes,
				or text boxes on a form. Provides input validation for the 
				specified control type. 
			]]></help>
			<parameter name="type" type="String" required="false">
				<help><![CDATA[
					text: creates a text entry box control 
                    radio: creates a radio button control 
                    checkbox: creates a check box control 
                    password: creates a password entry control 
				]]></help>
				<values>
					<value option="text" />
					<value option="radio" />
					<value option="checkbox" />
					<value option="password" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Name for form input element.
				]]></help>
				<values/>
			</parameter>
			<parameter name="value" type="String" required="false">
				<help><![CDATA[
					Initial value for form input element.
				]]></help>
				<values/>
			</parameter>
			<parameter name="required" type="boolean" required="false">
				<help><![CDATA[
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="range" type="String" required="false">
				<help><![CDATA[
					Minimum and maximum value range, separated by a comma. If 
					type = "text" or "password", this applies only to numeric 
					data.
				]]></help>
				<values/>
			</parameter>
			<parameter name="validate" type="String" required="false">
				<help><![CDATA[
					date: verifies format mm/dd/yy. 
					eurodate: verifies date format dd/mm/yyyy. 
					time: verifies time format hh:mm:ss. 
					float: verifies floating point format. 
					integer: verifies integer format. 
					telephone: verifies telephone format ###-###-####. The 
						separator can be a blank. Area code and exchange must 
						begin with digit 1 - 9. 
					zipcode: verifies, in U.S. formats only, 5- or 9-digit 
						format #####-####. The separator can be a blank. 
					creditcard: strips blanks and dashes; verifies number using
						mod10 algorithm. Number must have 13-16 digits. 
					social_security_number: verifies format ###-##-####. The 
						separator can be a blank. 
					regular_expression: matches input against pattern 
						attribute. 
				]]></help>
				<values>
					<value option="date" />
					<value option="eurodate" />
					<value option="time" />
					<value option="float" />
					<value option="integer" />
					<value option="telephone" />
					<value option="zipcode" />
					<value option="creditcard" />
					<value option="social_security_number" />
					<value option="regular_expression" />
				</values>
			</parameter>
			<parameter name="onvalidate" type="String" required="false">
				<help><![CDATA[
					Custom JavaScript function to validate user input. The form
					 object, input object, and input object values are passed 
					 to the routine, which should return True if validation 
					 succeeds, and False otherwise. If used, the validate 
					 attribute is ignored.
				]]></help>
				<values/>
			</parameter>
			<parameter name="pattern" type="Regex" required="false">
				<help><![CDATA[
					JavaScript regular expression pattern to validate input. 
					Omit leading and trailing slashes.
				]]></help>
				<values/>
			</parameter>
			<parameter name="message" type="String" required="false">
				<help><![CDATA[
					Message text to display if validation fails
				]]></help>
				<values/>
			</parameter>
			<parameter name="onerror" type="String" required="false">
				<help><![CDATA[
					Custom JavaScript function to execute if validation fails.
				]]></help>
				<values/>
			</parameter>
			<parameter name="size" type="Numeric" required="false">
				<help><![CDATA[
					Size of input control. Ignored, if type = "radio" or 
					"checkbox".
				]]></help>
				<values/>
			</parameter>
			<parameter name="maxlength" type="Numeric" required="false">
				<help><![CDATA[
					Maximum length of text entered, if type = "Text" or 
					"password".
				]]></help>
				<values/>
			</parameter>
			<parameter name="checked" type="boolean" required="false">
				<help><![CDATA[
					Selects a control. No value is required. 

					Applies if type = "radio" or "checkbox".
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="passthrough" type="String" required="false">
				<help><![CDATA[
					Passes one or more arbitrary attribute-value pairs to the 
					HTML code that is generated for the tag. You can use either
					of the following formats to include the quotation marks
					around the attribute value:

					passthrough="ID=""myID"""
					passthrough='ID="myID"'

					The second format, which surrounds all the attribute-value 
					pairs to be passed through in single quotation marks is 
					clearer, particularly when you pass multiple HTML 
					attributes.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfinsert    
				dataSource = "ds_name"   
				tableName = "tbl_name"   
				tableOwner = "owner"   
				tableQualifier = "tbl_qualifier"   
				username = "username"   
				password = "password"   
				formFields = "formfield1, formfield2, ..."
		-->
		<tag creator="3" name="insert" single="true" xmlstyle="false">
			<help><![CDATA[
				Inserts records in data sources from data in a ColdFusion form 
				or form Scope.
			]]></help>
			<parameter name="datasource" type="String" required="true">
				<help><![CDATA[
					Data source; contains table.
				]]></help>
				<values/>
			</parameter>
			<parameter name="tablename" type="String" required="true">
				<help><![CDATA[
					Table in which to insert form fields.

					ORACLE drivers: must be uppercase.
					Sybase driver: case-sensitive. Must be the same case used 
						when table was created
				]]></help>
				<values/>
			</parameter>
			<parameter name="tableowner" type="String" required="false">
				<help><![CDATA[
					For data sources that support table ownership (such as SQL 
					Server, Oracle, and Sybase SQL Anywhere), use this field to
					specify the owner of the table.
				]]></help>
				<values/>
			</parameter>
			<parameter name="tablequalifier" type="String" required="false">
				<help><![CDATA[
					For data sources that support table qualifiers, use this 
					field to specify qualifier for table. The purpose of table 
					qualifiers varies among drivers. For SQL Server and 
					Oracle, qualifier refers to name of database that contains 
					table. For Intersolv dBASE driver, qualifier refers to 
					directory where DBF files are located.
				]]></help>
				<values/>
			</parameter>
			<parameter name="username" type="String" required="false">
				<help><![CDATA[
					Overrides username specified in ODBC setup.
				]]></help>
				<values/>
			</parameter>
			<parameter name="password" type="String" required="false">
				<help><![CDATA[
					Overrides password specified in ODBC setup.
				]]></help>
				<values/>
			</parameter>
			<parameter name="formfields" type="String" required="false">
				<help><![CDATA[
					Comma-delimited list of form fields to insert. If not 
					specified, all fields in the form are included.

					If a form field is not matched by a column name in the 
					database, ColdFusion throws an error. 

					The database table key field must be present in the form. 
					It may be hidden.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfinvoke   
				component = "component name or reference"   
				method = "method name"   
				returnVariable = "variable name"   
				argumentCollection = "argument collection"   
			OR
			cfinvoke   
				method = "method name"   
				returnVariable = "variable name"   
				argumentCollection = "argument collection"
			OR
			cfinvoke    
				webservice = "URLtoWSDL_location"    
				method = "operation_name"   
				username = user name"   
				password = "password"   
				timeout = "request timeout in seconds"
				proxyServer = "WSDL proxy server URL
				proxyPort = "port on proxy server"
				proxyUser = "user id for proxy server"
				proxyPassword = "password for proxy server"
				inputParam1 = "value1"   
				inputParam2 = "value2"
				...   
				returnVariable = "var_name"
			OR
			cfinvoke   
				component = "#mystringname for instantiated component#" 
				method = "method name" 
				returnVariable = "variable name"   
				argumentCollection = "argument collection" 
			OR
			cfinvoke  
				webservice = "#my stringname for instantiated web service#" 
				timeout = "request timeout in seconds"
				proxyServer = "WSDL proxy server url
				proxyPort = "numeric port on proxy server"
				proxyUser = "string user id for proxy server"
				proxyPassword = "string user password for proxy server"
			=============================================================
			cfinvoke    
				webservice = "URLtoWSDL_location"    
				method = "operation_name"   
				username = user name"   
				password = "password"   
				timeout = "request timeout in seconds"
				proxyServer = "WSDL proxy server URL
				proxyPort = "port on proxy server"
				proxyUser = "user id for proxy server"
				proxyPassword = "password for proxy server"
				returnVariable = "var_name"
				component = "component name or reference"     
				argumentCollection = "argument collection"
		-->
		<tag creator="3" name="invoke" single="true" xmlstyle="false">
			<help><![CDATA[
				Does either of the following:

				* Invokes a component method from within a ColdFusion page or 
					component. 
				* Invokes a web service.
				Different attribute combonations make some attributes required
				at sometimes and not at others.
			]]></help>
			<parameter name="component" type="String" required="false">
				<help><![CDATA[
					String or component object; a reference to a component, or 
					component to instantiate.
				]]></help>
				<values/>
			</parameter>
			<parameter name="method" type="String" required="true">
				<help><![CDATA[
					Name of a method. For a web service, the name of an 
					operation.
				]]></help>
				<values/>
			</parameter>
			<parameter name="returnvariable" type="String" required="false">
				<help><![CDATA[
					Name of a variable for the invocation result.
				]]></help>
				<values/>
			</parameter>
			<parameter name="argumentcollection" type="String" required="false">
				<help><![CDATA[
					Name of a structure; associative array of arguments to pass
					to the method.
				]]></help>
				<values/>
			</parameter>
			<parameter name="username" type="String" required="false">
				<help><![CDATA[
					Overrides username specified in Administrator > Web Services
				]]></help>
				<values/>
			</parameter>
			<parameter name="passowrd" type="String" required="false">
				<help><![CDATA[
					Overrides passowrd specified in Administrator > Web Services
				]]></help>
				<values/>
			</parameter>
			<parameter name="webservice" type="URL" required="false">
				<help><![CDATA[
					The URL of the WSDL file for the web service.
				]]></help>
				<values/>
			</parameter>
			<parameter name="timeout" type="Numeric" required="false">
				<help><![CDATA[
					The timeout for the web service request, in seconds
				]]></help>
				<values/>
			</parameter>
			<parameter name="proxyserver" type="String" required="false">
				<help><![CDATA[
					The proxy server required to access the webservice URL.
				]]></help>
				<values/>
			</parameter>
			<parameter name="proxyport" type="Numeric" required="false">
				<help><![CDATA[
					The port to use on The proxy server.
				]]></help>
				<values/>
			</parameter>
			<parameter name="proxyuser" type="String" required="false">
				<help><![CDATA[
					The user ID to send to the proxy server.
				]]></help>
				<values/>
			</parameter>
			<parameter name="proxypassword" type="String" required="false">
				<help><![CDATA[
					The user's password on the proxy server.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfinvokeargument   
				name="argument name"   
				value="argument value"
		-->
		<tag creator="3" name="invokeargument" single="true" xmlstyle="false">
			<help><![CDATA[
				Passes the name and value of a parameter to a component method 
				or a web service. This tag is used within the cfinvoke tag. 			
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Argument name
				]]></help>
				<values/>
			</parameter>
			<parameter name="value" type="String" required="true">
				<help><![CDATA[
					Argument value
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cflocation   
				url = "url"   
				addToken = "Yes" or "No"
		-->
		<tag creator="3" name="location" single="false" xmlstyle="false">
			<help><![CDATA[
				Stops execution of the current page and opens a ColdFusion page or HTML file. 
			]]></help>
			<parameter name="url" type="String" required="true">
				<help><![CDATA[
					URL of HTML file or CFML page to open.
				]]></help>
				<values/>
			</parameter>
			<parameter name="addtoken" type="boolean" required="false">
				<help><![CDATA[
					clientManagement must be enabled (see cfapplication).
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
			cflock    
				timeout = "timeout in seconds "   
				scope = "Application" or "Server" or "Session"   
				name = "lockname"    
				throwOnTimeout = "Yes" or "No"   
				type = "readOnly" or "exclusive "
				[...CFML to be synchronized...]
			/cflock
		-->
		<tag creator="3" name="lock" single="false" xmlstyle="false">
			<help><![CDATA[
				Ensures the integrity of shared data. Instantiates the 
				following kinds of locks:

				* Exclusive allows single-thread access to the CFML constructs 
				* Read-only allows multiple requests to access CFML constructs
			]]></help>
			<parameter name="timeout" type="Numeric" required="true">
				<help><![CDATA[
					Maximum length of time, in seconds, to wait to obtain a 
					lock. If lock is obtained, tag execution continues. 
					Otherwise, behavior depends on throwOnTimeout attribute 
					value.
				]]></help>
				<values/>
			</parameter>
			<parameter name="scope" type="String" required="false">
				<help><![CDATA[
					Lock scope. Mutually exclusive with the name attribute. 
					Lock name. Only one request in the specified scope can 
					execute the code within this tag (or within any other 
					cflock tag with the same lock scope scope) at a time.
				]]></help>
				<values>
					<value option="Application" />
					<value option="Server" />
					<value option="Session" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help><![CDATA[
					Lock name. Mutually exclusive with the scope attribute. 
					Only one request can execute the code within a cflock tag 
					with a given name at a time. Cannot be an empty string.
				]]></help>
				<values/>
			</parameter>
			<parameter name="throwontimeout" type="boolean" required="false">
				<help><![CDATA[
					How timeout conditions are handled.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="type" type="String" required="false">
				<help><![CDATA[
					readOnly: lets more than one request read shared data. 
					exclusive: lets one request read or write shared data.
				]]></help>
				<values>
					<value option="readonly" />
					<value option="exclusive" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
			cflog    
				text = "text"   
				log = "log type"   
				file = "filename"   
				type = "message type"   
				application = "application name yes or no"
		-->
		<tag creator="3" name="log" single="false" xmlstyle="false">
			<help><![CDATA[
				Writes a message to a log file. 
			]]></help>
			<parameter name="text" type="String" required="true">
				<help><![CDATA[
					Message text to log.
				]]></help>
				<values/>
			</parameter>
			<parameter name="log" type="String" required="false">
				<help><![CDATA[
					If you omit the file attribute, writes messages to standard
					log file. Ignored, if you specify file attribute. 

					Application: writes to Application.log, normally used for 
						application-specific messages. 
					Scheduler: writes to Scheduler.log, normally used to log 
						the execution of scheduled tasks. 
				]]></help>
				<values>
					<value option="Application" />
					<value option="Scheduler" />
				</values>
			</parameter>
			<parameter name="file" type="String" required="false">
				<help><![CDATA[
					Message file. Specify only the main part of the filename. 
					For example, to log to the Testing.log file, specify 
					"Testing". 

					The file must be located in the default log directory. You 
					cannot specify a directory path. If the file does not 
					exist, it is created automatically, with the suffix .log.
				]]></help>
				<values/>
			</parameter>
			<parameter name="type" type="String" required="false">
				<help><![CDATA[
					Type (severity) of the message
				]]></help>
				<values>
					<value option="information" />
					<value option="warning" />
					<value option="error" />
					<value option="fatal information" />
				</values>
			</parameter>
			<parameter name="application" type="boolean" required="false">
				<help><![CDATA[
					log application name, if it is specified in a cfapplication
					tag.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
			cflogin   
				idletimeout = "value"   
				applicationToken = "token"   
				cookieDomain = "domain"   
				...
			/cflogin
		-->
		<tag creator="3" name="login" single="false" xmlstyle="false">
			<help><![CDATA[
				A container for user login and authentication code. ColdFusion 
				runs the code in this tag if a user is not already logged in. 
				You put code in the tag that authenticates the user and 
				identifies the user with a set of roles. Used with cfloginuser 
				tag.
			]]></help>
			<parameter name="idletimeout" type="Numeric" required="false">
				<help><![CDATA[
					Time interval with no keyboard activity after which 
					ColdFusion logs the user off. Seconds.
				]]></help>
				<values/>
			</parameter>
			<parameter name="applicationtoken" type="String" required="false">
				<help><![CDATA[
					Unique application identifier. Limits the login validity to 
					one application, as specified by the cfapplication tag.
				]]></help>
				<values/>
			</parameter>
			<parameter name="cookiedomain" type="String" required="false">
				<help><![CDATA[
					Domain of the cookie that is used to mark a user as logged 
					in. Use this attribute to enable a user login cookie to
					work with multiple clustered servers in the same domain.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfloginuser   
				name = "name"   
				password = "password-string"   
				roles = "roles"
		-->
		<tag creator="3" name="loginuser" single="true" xmlstyle="false">
			<help><![CDATA[
				Identifies an authenticated user to ColdFusion. Specifies the 
				user ID and roles. Used within a cflogin tag.
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					A username.
				]]></help>
				<values/>
			</parameter>
			<parameter name="password" type="String" required="true">
				<help><![CDATA[
					A user password.
				]]></help>
				<values/>
			</parameter>
			<parameter name="roles" type="String" required="true">
				<help><![CDATA[
					A comma-delimited list of role identifiers.

					ColdFusion processes spaces in a list element as part of 
					the element. 
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cflogout
		-->
		<tag creator="3" name="logout" single="true" xmlstyle="false">
			<help><![CDATA[
				Logs the current user out. Removes knowledge of the user ID, 
				password, and roles from the server. If you do not use this 
				tag, the user is automatically logged out when the session 
				ends.
			]]></help>
		</tag>
		
		<!-- 
			cfloop
				index = "parameter_name"   
				from = "beginning_value"   
				to = "ending_value"   
				step = "increment"
				... HTML or CFML code ...
			/cfloop
			
			cfloop    
				condition = "expression"
				...
			/cfloop
			
			cfloop    
				query = "query_name"   
				startRow = "row_num"   
				endRow = "row_num"
				...
			/cfloop
			
			cfloop    
				index = "index_name"   
				list = "list_items"   
				delimiters = "item_delimiter"
				...
			/cfloop
			===============================================
			cfloop
				index = "parameter_name"   
				from = "beginning_value"   
				to = "ending_value"   
				step = "increment"
				condition = "expression"
				query = "query_name"   
				startRow = "row_num"   
				endRow = "row_num"
				list = "list_items"   
				delimiters = "item_delimiter"
				collection = "object"
				item = "string"
				... HTML or CFML code ...
			/cfloop
		-->
		<tag creator="3" name="loop" single="false" xmlstyle="false">
			<help><![CDATA[
				Different items are required based on loop type. Items listed
				at required can be required but may not be depending on your
				loop type.
				[query] [condition] [index + from + to ] [index + list]
				[collection + item ]
			]]></help>
			<parameter name="index" type="String" required="true">
				<help><![CDATA[
					Index value. ColdFusion sets it to from value and 
					increments or decrements by step value, until it equals to 
					value.
				]]></help>
				<values/>
			</parameter>
			<parameter name="to" type="Numeric" required="true">
				<help><![CDATA[
					Beginning value of index.
				]]></help>
				<values/>
			</parameter>
			<parameter name="from" type="Numeric" required="true">
				<help><![CDATA[
					Ending value of index.
				]]></help>
				<values/>
			</parameter>
			<parameter name="step" type="Numeric" required="false">
				<help><![CDATA[
					Ending value of index.
				]]></help>
				<values/>
			</parameter>
			<parameter name="condition" type="boolean" required="true">
				<help><![CDATA[
					Condition that controls the loop.
				]]></help>
				<values/>
			</parameter>
			<parameter name="query" type="String" required="true">
				<help><![CDATA[
					Query that controls the loop.
				]]></help>
				<values/>
			</parameter>
			<parameter name="startrow" type="Numeric" required="false">
				<help><![CDATA[
					First row of query that is included in the loop.
				]]></help>
				<values/>
			</parameter>
			<parameter name="endrow" type="Numeric" required="false">
				<help><![CDATA[
					Last row of query that is included in the loop.
				]]></help>
				<values/>
			</parameter>
			<parameter name="list" type="String" required="true">
				<help><![CDATA[
					A list, variable, or filename; contains a list
				]]></help>
				<values/>
			</parameter>
			<parameter name="delimiters" type="String" required="false">
				<help><![CDATA[
					Character(s) that separates items in list
				]]></help>
				<values/>
			</parameter>
			<parameter name="collection" type="Object" required="true">
				<help><![CDATA[
					The collection attribute is used with the item attribute.
					often to loop over a structure
				]]></help>
				<values/>
			</parameter>
			<parameter name="item" type="String" required="true">
				<help><![CDATA[
					The item attribute is used with the collection attribute.
					often to loop over a structure
				]]></help>
				<values/>
			</parameter>
		</tag>
				
		<!-- 
			cfmail    
				to = "recipient"   
				from = "sender"   
				cc = "copy_to"   
				bcc = "blind_copy_to"   
				subject = "msg_subject"   
				replyto = "reply_to_addr"
			 	failto = "fail_message_addr"   
			 	username = "user name"   
			 	password = "password"   
			 	wraptext = "column number"   
			 	charset = "character encoding"   
			 	type = "msg_type"   
			 	mimeattach = "path"   
			 	query = "query_name"   
			 	group = "query_column"   
			 	groupcasesensitive = "yes" or "no"   
			 	startrow = "query_row"   
			 	maxrows = "max_msgs"   
			 	server = "serverspecs"   
			 	port = "port_id"   
			 	mailerid = "headerid"   
			 	timeout = "seconds"   
			 	spoolenable = "yes" or "no"
			
			[(Optional) Mail message body and/or cfhttpparam tags]
			/cfmail
		-->
		<tag creator="3" name="mail" single="false" xmlstyle="false">
			<help><![CDATA[
				Sends an e-mail message that optionally contains query output,
				using an SMTP server. 
			]]></help>
			<parameter name="to" type="String" required="true">
				<help><![CDATA[
					Message recipient e-mail addresses.
				]]></help>
				<values/>
			</parameter>
			<parameter name="from" type="String" required="true">
				<help><![CDATA[
					E-mail message sender:
				]]></help>
				<values/>
			</parameter>
			<parameter name="cc" type="String" required="false">
				<help><![CDATA[
					Address(es) to which to copy the message
				]]></help>
				<values/>
			</parameter>
			<parameter name="bcc" type="String" required="false">
				<help><![CDATA[
					Address(es) to which to copy the message, without listing 
					them in the message header.
				]]></help>
				<values/>
			</parameter>
			<parameter name="subject" type="String" required="true">
				<help><![CDATA[
					Message subject. Can be dynamically generated.
				]]></help>
				<values/>
			</parameter>
			<parameter name="replyto" type="String" required="false">
				<help><![CDATA[
					Address(es) to which the recipient is directed to send 
					replies.
				]]></help>
				<values/>
			</parameter>
			<parameter name="failto" type="String" required="false">
				<help><![CDATA[
					Address to which mailing systems should send delivery 
					failure notifications. Sets the mail envelope reverse-path 
					value.
				]]></help>
				<values/>
			</parameter>
			<parameter name="username" type="String" required="false">
				<help><![CDATA[
					A user name to send to SMTP servers that require 
					authentication. Requires a password attribute
				]]></help>
				<values/>
			</parameter>
			<parameter name="password" type="String" required="false">
				<help><![CDATA[
					A password to send to SMTP servers that require 
					authentication. Requires a username attribute.
				]]></help>
				<values/>
			</parameter>
			<parameter name="wraptext" type="Numeric" required="false">
				<help><![CDATA[
					Specifies the maximum line length, in characters of the 
					mail text. If a line has more than the specified number of
					characters, replaces the last white space character, such 
					as a tab or space, preceding the specified position with 
					a line break. If there are no white space characters, 
					inserts a line break at the specified position. A common 
					value for this attribute is 72.
				]]></help>
				<values/>
			</parameter>
			<parameter name="charset" type="String" required="false">
				<help><![CDATA[
					The character encoding in which the part text is encoded.
					
					For more information on character encodings, see:
					www.w3.org/International/O-charset.html.
				]]></help>
				<values>
					<value option="utf-8" />
					<value option="iso-8859-1" />
					<value option="windows-1252" />
					<value option="us-ascii" />
					<value option="shift_jis" />
					<value option="iso-2022-jp" />
					<value option="euc-jp" />
					<value option="euc-kr" />
					<value option="big5" />
					<value option="euc-cn" />
					<value option="utf-16" />
				</values>
			</parameter>
			<parameter name="type" type="String" required="false">
				<help><![CDATA[
					The MIME media type of the part. Can be a can be valid MIME 
					media type
				]]></help>
				<values>
					<value option="text/plain" />
					<value option="text/html" />
				</values>
			</parameter>
			<parameter name="mimeattach" type="String" required="false">
				<help><![CDATA[
					Path of file to attach to message. Attached file is 
					MIME-encoded. ColdFusion attempts to determine the MIME 
					type of the file; use the cfmailparam tag to send an 
					attachement and specify the MIME type.
				]]></help>
				<values/>
			</parameter>
			<parameter name="query" type="String" required="false">
				<help><![CDATA[
					Name of cfquery from which to draw data for message(s). 
					Use this attribute to send more than one message, or to 
					send query results within a message.
				]]></help>
				<values/>
			</parameter>
			<parameter name="group" type="String" required="false">
				<help><![CDATA[
					Query column to use when you group sets of records to send 
					as a message. For example, to send a set of billing 
					statements to a customer, group on "Customer_ID." 
					Case-sensitive. Eliminates adjacent duplicates when data is
					sorted by the specified field.
				]]></help>
				<values/>
			</parameter>
			<parameter name="groupcasesensitive" type="boolean" required="false">
				<help><![CDATA[
					Whether to consider case when using the group attribute. To
					group on case-sensitive records, set this attribute to Yes.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="startrow" type="Numeric" required="false">
				<help><![CDATA[
					Row in a query to start from.
				]]></help>
				<values/>
			</parameter>
			<parameter name="maxrows" type="Numeric" required="false">
				<help><![CDATA[
					Maximum number of messages to send when looping over a 
					query.
				]]></help>
				<values/>
			</parameter>
			<parameter name="server" type="String" required="false">
				<help><![CDATA[
					SMTP server address, or (Enterprise edition only) a 
					comma-delimited list of server addresses, to use for 
					sending messages. At least one server must be specified 
					here or in the ColdFusion MX Administrator. A value here 
					overrides the Administrator. A value that includes a port 
					specification overrides the port attribute. See the Usage 
					section for details.
				]]></help>
				<values/>
			</parameter>
			<parameter name="port" type="Numeric" required="false">
				<help><![CDATA[
					TCP/IP port on which SMTP server listens for requests 
					(normally 25). A value here overrides the Administrator.
				]]></help>
				<values/>
			</parameter>
			<parameter name="mailerid" type="String" required="false">
				<help><![CDATA[
					Mailer ID to be passed in X-Mailer SMTP header, which 
					identifies the mailer application.
				]]></help>
				<values/>
			</parameter>
			<parameter name="timeout" type="Numeric" required="false">
				<help><![CDATA[
					Number of seconds to wait before timing out connection to 
					SMTP server. A value here overrides the Administrator.
				]]></help>
				<values/>
			</parameter>
			<parameter name="spoolenable" type="boolean" required="false">
				<help><![CDATA[
					Specifies whether to spool mail or always send it 
					Immediately. Overrides the ColdFusion MX Administrator 
					Spool mail messages to disk for delivery setting.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
			cfmailparam       
				file = "file-name"       
				type ="media type"
		   	or   
		   	cfmailparam       
		   		name = "header-name"       
		   		value = "header-value"
		-->
		<tag creator="3" name="xml" single="true" xmlstyle="false">
			<help><![CDATA[
				Attaches a file or adds a header to an e-mail message. Can only
				be used in the cfmail tag. You can use more than one 
				cfmailparam tag within a cfmail tag.
			]]></help>
			<parameter name="file" type="String" required="true">
				<help><![CDATA[
					Attaches file to a message. Mutually exclusive with name 
					attribute. The file is MIME encoded before sending.
				]]></help>
				<values/>
			</parameter>
			<parameter name="type" type="String" required="false">
				<help><![CDATA[
					The MIME media type of the part. Can be a can be valid MIME 
					media type
				]]></help>
				<values>
					<value option="text/plain" />
					<value option="text/html" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Name of header. Case-insensitive. Mutually exclusive with 
					file attribute.
				]]></help>
				<values/>
			</parameter>
			<parameter name="value" type="String" required="false">
				<help><![CDATA[
					Value of the header.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfmailpart       
				type="mime type"
	            charset="character encoding"
              	wraptext="number"
	           [Mail part contents]
	        /cfmailpart
		-->
		<tag creator="3" name="mailpart" single="false" xmlstyle="false">
			<help><![CDATA[
				Specifies one part of a multipart e-mail message. Can only be 
				used in the cfmail tag. You can use more than one cfmailpart 
				tag within a cfmail tag.
			]]></help>
			<parameter name="type" type="String" required="true">
				<help><![CDATA[
					The MIME media type of the part. Can be a can be valid MIME 
					media type
				]]></help>
				<values>
					<value option="text/plain" />
					<value option="text/html" />
				</values>
			</parameter>
			<parameter name="wraptext" type="Numeric" required="false">
				<help><![CDATA[
					Specifies the maximum line length, in characters of the 
					mail text. If a line has more than the specified number of 
					characters, replaces the last white space character, such 
					as a tab or space, preceding the specified position with a
					line break. If there are no white space characters, 
					inserts a line break at the specified position. A common 
					value for this attribute is 72.
				]]></help>
				<values/>
			</parameter>
			<parameter name="charset" type="String" required="false">
				<help><![CDATA[
					The character encoding in which the part text is encoded.
					
					For more information on character encodings, see:
					www.w3.org/International/O-charset.html.
				]]></help>
				<values>
					<value option="utf-8" />
					<value option="iso-8859-1" />
					<value option="windows-1252" />
					<value option="us-ascii" />
					<value option="shift_jis" />
					<value option="iso-2022-jp" />
					<value option="euc-jp" />
					<value option="euc-kr" />
					<value option="big5" />
					<value option="euc-cn" />
					<value option="utf-16" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
			cfmodule    
				template = "path"   
				name = "tag_name"   
				attributeCollection = "collection_structure"   
				attribute_name1 = "valuea"   
				attribute_name2 = "valueb" ...
		-->
		<tag creator="3" name="module" single="true" xmlstyle="false">
			<help><![CDATA[
				Invokes a custom tag for use in ColdFusion application pages. 
				This tag processes custom tag name conflicts.			
			]]></help>
			<parameter name="template" type="String" required="true">
				<help><![CDATA[
					Mutually exclusive with the name attribute. A path to the 
					page that implements the tag. 
                    
                    Relative path: expanded from the current page 
                    Absolute path: expanded using ColdFusion mapping 
                    A physical path is not valid.					
				]]></help>
				<values/>
			</parameter>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Mutually exclusive with the template attribute. A custom 
					tag name, in the form "Name.Name.Name..." Identifies 
					subdirectory, under the ColdFusion tag root directory, 
					that contains custom tag page. For example (Windows format):
					
					<cfmodule name = "superduper.Forums40.GetUserOptions"> 

					This identifies the page GetUserOptions.cfm in the 
					directory CustomTags\superduper\Forums40 under the 
					ColdFusion root directory.
				]]></help>
				<values/>
			</parameter>
			<parameter name="attributecollection" type="Struct" required="false">
				<help><![CDATA[
					A collection of key-value pairs that represent 
					attribute names and values. You can specify multiple 
					key-value pairs. You can specify this attribute only 
					once. 
				]]></help>
				<values/>
			</parameter>
			<parameter name="attribute_name1" type="String" required="false">
				<help><![CDATA[
					Attribute for a custom tag. You can include multiple 
					instances of this attribute to specify the parameters of 
					a custom tag.					
				]]></help>
				<values/>
			</parameter>
			<parameter name="attribute_nameN" type="String" required="false">
				<help><![CDATA[
					Attribute for a custom tag. You can include multiple 
					instances of this attribute to specify the parameters of 
					a custom tag.					
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfobject
				type = "com"   
				action = "action"   
				class = "program_ID"   
				name = "text"   
				context = "context"   
				server = "server_name"
				
			cfobject    
				name = "variable name"   
				component = "component name"
				
			cfobject    
				type = "corba"   
				context = "context"   
				class = "file or naming service"   
				name = "text"   
				locale = "type-value arguments"
			
			cfobject    
				type = "Java"   
				action = "Create"   
				class = "Java class"   
				name = "object name"
				
			cfobject    
				webservice= "http://....?wsdl" or "name set in Administrator"
				name = "myobjectname"
			=============================================================
			cfobject
				type = "com" "Java" "corba"
				action = "action"
				class = "program_ID"
				name = "text"   
				context = "context"   
				server = "server_name"
				component = "component name"
				locale = "type-value arguments"
				webservice= "http://....?wsdl" or "name set in Administrator"
		-->
		<tag creator="3" name="object" single="true" xmlstyle="false">
			<help><![CDATA[
				Creates a ColdFusion object, of a specified type.
				
				The tag syntax depends on the object type. Some types use the 
				type attribute; others do not.
			]]></help>
			<parameter name="type" type="String" required="false">
				<help><![CDATA[
					
				]]></help>
				<values>
					<value option="com" />
					<value option="java" />
					<value option="corba" />
				</values>
			</parameter>
			<parameter name="action" type="String" required="true">
				<help><![CDATA[
					
				]]></help>
				<values>
					<value option="create" />
					<value option="connect" />
				</values>
			</parameter>
			<parameter name="class" type="String" required="true">
				<help><![CDATA[
					
				]]></help>
				<values/>
			</parameter>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					
				]]></help>
				<values/>
			</parameter>
			<parameter name="context" type="String" required="true">
				<help><![CDATA[
					
				]]></help>
				<values>
					<value option="inproc" />
					<value option="local" />
					<value option="remote" />
					<value option="ior" />
					<value option="nameservice" />
				</values>
			</parameter>
			<parameter name="server" type="String" required="false">
				<help><![CDATA[
					
				]]></help>
				<values/>
			</parameter>
			<parameter name="component" type="String" required="true">
				<help><![CDATA[
					
				]]></help>
				<values/>
			</parameter>
			<parameter name="locale" type="String" required="false">
				<help><![CDATA[
					
				]]></help>
				<values/>
			</parameter>
			<parameter name="webservice" type="URL" required="true">
				<help><![CDATA[
					
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfobjectcache    
				action = "clear"
		-->
		<tag creator="3" name="objectcache" single="false" xmlstyle="false">
			<help><![CDATA[
				Flushes the query cache.
			]]></help>
			<parameter name="action" type="String" required="true">
				<help><![CDATA[
					clear: Clears queries from the cache in the Application 
					scope
				]]></help>
				<values>
					<value option="clear" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
			cfoutput    
				query = "query_name"   
				group = "query_column"   
				groupCaseSensitive = "Yes" or "No"   
				startRow = "start_row"   
				maxRows = "max_rows_output"
			/cfoutput
		-->
		<tag creator="3" name="output" single="false" xmlstyle="false">
			<help><![CDATA[
				Displays output that can contain the results of processing 
				ColdFusion variables and functions. Can loop over the results 
				of a database query.
			]]></help>
			<parameter name="query" type="String" required="false">
				<help><![CDATA[
					Name of cfquery from which to draw data for output section.
				]]></help>
				<values/>
			</parameter>
			<parameter name="group" type="String" required="false">
				<help><![CDATA[
					Query column to use to group sets of records. Eliminates 
					adjacent duplicate rows when data is sorted. Use if you 
					retrieved a record set ordered on one or more a query 
					columns. For example, if a record set is ordered on 
					"Customer_ID" in the cfquery tag, you can group the output 
					on "Customer_ID." 
				]]></help>
				<values/>
			</parameter>
			<parameter name="groupcasesensitive" type="boolean" required="false">
				<help><![CDATA[
					Whether to consider the case in grouping rows.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="startrow" type="Numeric" required="false">
				<help><![CDATA[
					Row from which to start output.
				]]></help>
				<values/>
			</parameter>
			<parameter name="maxrows" type="Numeric" required="false">
				<help><![CDATA[
					Maximum number of rows to display.
				]]></help>
				<values/>
			</parameter>
		</tag> 
		
		<!-- 
			cfparam    
				name = "param_name"   
				type = "data_type"   
				default = "value"
		-->
		<tag creator="3" name="param" single="true" xmlstyle="false">
			<help><![CDATA[
				Tests for a parameter's existence, tests its data type, and, if
				a default value is not assigned, optionally provides one. 
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Name of parameter to test (such as "Client.Email " or 
					"Cookie.BackgroundColor "). If omitted, and if the 
					parameter does not exist, an error is thrown.
				]]></help>
				<values/>
			</parameter>
			<parameter name="type" type="String" required="false">
				<help><![CDATA[
					The parameter data type 
				]]></help>
				<values>
					<value option="any" />
					<value option="array" />
					<value option="binary" />
					<value option="boolean" />
					<value option="date" />
					<value option="guid" />
					<value option="numeric" />
					<value option="query" />
					<value option="string" />
					<value option="struct" />
					<value option="uuid" />
					<value option="variable_name" />
				</values>
			</parameter>
			<parameter name="default" type="Object" required="false">
				<help><![CDATA[
					Value to set parameter to if it does not exist.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfpop    
				server = "servername"   
				port = "port_number"   
				username = "username"   
				password = "password"   
				action = "action"   
				name = "queryname"   
				messageNumber = "number"   
				uid = "number"    
				attachmentPath = "path"   
				timeout = "seconds"   
				maxRows = "number"   
				startRow = "number"   
				generateUniqueFilenames = "boolean"
		-->
		<tag creator="3" name="pop" single="true" xmlstyle="false">
			<help><![CDATA[
				Retrieves or deletes e-mail messages from a POP mail server.
			]]></help>
			<parameter name="server" type="String" required="true">
				<help><![CDATA[
					POP server identifier:
						A host name; for example, "biff.upperlip.com" 
						An IP address; for example, "192.1.2.225"
				]]></help>
				<values/>
			</parameter>
			<parameter name="port" type="Numeric" required="false">
				<help><![CDATA[
					POP port
				]]></help>
				<values/>
			</parameter>
			<parameter name="username" type="String" required="false">
				<help><![CDATA[
					Overrides username.
				]]></help>
				<values/>
			</parameter>
			<parameter name="password" type="String" required="false">
				<help><![CDATA[
					Overrides password
				]]></help>
				<values/>
			</parameter>
			<parameter name="action" type="String" required="false">
				<help><![CDATA[
					getHeaderOnly: returns message header information only 
    	            getAll: returns message header information, message text, 
    	            	and attachments if attachmentPath is specified 
        	        delete: deletes messages on POP server
				]]></help>
				<values>
					<value option="getHeaderOnly" />
					<value option="getAll" />
					<value option="delete" />
				</values>
			</parameter>
			<parameter name="name" type="String" required="false">
				<help><![CDATA[
					Name for query object that contains the retrieved message 
					information.
				]]></help>
				<values/>
			</parameter>
			<parameter name="messagenumber" type="Numeric" required="false">
				<help><![CDATA[
					Message number or comma-delimited list of message numbers 
					to get or delete. Invalid message numbers are ignored.
					Ignored if uid is specified.
				]]></help>
				<values/>
			</parameter>
			<parameter name="uid" type="String" required="false">
				<help><![CDATA[
					UID or a comma-delimited list of UIDs to get or delete. 
					Invalid UIDs are ignored.
				]]></help>
				<values/>
			</parameter>
			<parameter name="attachmentpath" type="String" required="false">
				<help><![CDATA[
					If action="getAll", specifies a directory in which to save 
					any attachments. If the directory does not exist, 
					ColdFusion creates it.

					If you omit this attribute, ColdFusion does not save any 
					attachments. If you specify a relative path, the path root 
					is the ColdFusion temporary directory, which is returned by 
					the GetTempDirectory function.
				]]></help>
				<values/>
			</parameter>
			<parameter name="timeout" type="Numeric" required="false">
				<help><![CDATA[
					Maximum time, in seconds, to wait for mail processing
				]]></help>
				<values/>
			</parameter>
			<parameter name="maxrows" type="Numeric" required="false">
				<help><![CDATA[
					Number of messages to return or delete, starting with the 
					number in startRow. Ignored if messageNumber or uid is 
					specified.
				]]></help>
				<values/>
			</parameter>
			<parameter name="startrow" type="Numeric" required="false">
				<help><![CDATA[
					First row number to get or delete. Ignored if messageNumber
					or uid is specified.
				]]></help>
				<values/>
			</parameter>
			<parameter name="generateuniquefilenames" type="boolean" required="false">
				<help><![CDATA[
					Yes: Generate unique filenames for files attached to an 
					e-mail message, to avoid naming conflicts when files are 
					saved 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
		</tag> 
		
		<!-- 
			cfprocessingdirective
				pageencoding = "page-encoding literal string" 
			/
			or
			cfprocessingdirective   
				suppressWhiteSpace = "Yes" or "No"   
				pageEncoding = "page-encoding literal string"
		    [CFML tags]
		    /cfprocessingdirective
		-->
		<tag creator="3" name="processingdirective" single="false" xmlstyle="true">
			<help><![CDATA[
				Provides the following insformation to ColdFusion on how to 
				process the current page: 

				* Specifies whether to remove excess whitespace character from 
				ColdFusion generated content in the tag body. 
				* Identifies the character encoding (character set) of the page 
				contents. 
			]]></help>
			<parameter name="suppresswhitespace" type="boolean" required="false">
				<help><![CDATA[
					Boolean; whether to suppress white space characters within 
					the cfprocessingdirective block that are generated by CFML 
					tags and often do not affect HTML appearance. Does not 
					affect any white space in HTML code.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="pageencoding" type="String" required="false">
				<help><![CDATA[
					A string literal; cannot be a variable. Identifies the 
					character encoding of the current CFML page. This attribute 
					affects the entire page, not just the cfprocessing tag body.
					The value may be enclosed in single or double quotation 
					marks, or none.
					
					For more information on character encodings, see:
					www.w3.org/International/O-charset.html.
				]]></help>
				<values>
					<value option="utf-8" />
					<value option="iso-8859-1" />
					<value option="windows-1252" />
					<value option="us-ascii" />
					<value option="shift_jis" />
					<value option="iso-2022-jp" />
					<value option="euc-jp" />
					<value option="euc-kr" />
					<value option="big5" />
					<value option="euc-cn" />
					<value option="utf-16" />
				</values>
			</parameter>
		</tag> 
		
		<!-- 
			cfprocparam    
				type = "in" or "out" or "inout"   
				variable = "variable name"   
				value = "parameter value"   
				CFSQLType = "parameter datatype"   
				maxLength = "length"   
				scale = "decimal places"    
				null = "Yes" or "No"
		-->
		<tag creator="3" name="procparam" single="true" xmlstyle="false">
			<help><![CDATA[
				Defines stored procedure parameters. This tag is nested within 
				a cfstoredproc tag.
			]]></help>
			<parameter name="type" type="String" required="false">
				<help><![CDATA[
					in: The parameter is used to send data to the database 
						system only. Passes the parameter by value. 
					out: The parameter is used to receive data from the 
						database system only. Passes the parameter as a bound 
						variable. 
					inout: The parameter is used to send and receive data. 
						Passes the parameter as a bound variable. 
				]]></help>
				<values>
					<value option="in" />
					<value option="out" />
					<value option="inout" />
				</values>
			</parameter>
			<parameter name="variable" type="String" required="false">
				<help><![CDATA[
					ColdFusion variable name; references the value that the 
					output parameter has after the stored procedure is called.
				]]></help>
				<values/>
			</parameter>
			<parameter name="value" type="String" required="false">
				<help><![CDATA[
					Value that ColdFusion passes to the stored procedure.
				]]></help>
				<values/>
			</parameter>
			<parameter name="cfsqltype" type="String" required="true">
				<help><![CDATA[
					SQL type to which the parameter (any type) is bound. 
					ColdFusion supports the following values, where the last 
					element of the name corresponds to the SQL data type. 
					Different database systems might support different subsets 
					of this list. See your DBMS documentation for information 
					on supported parameter types.
				]]></help>
				<values>
					<value option="CF_SQL_BIGINT" />
					<value option="CF_SQL_BIT" />
					<value option="CF_SQL_CHAR" />
					<value option="CF_SQL_BLOB" />
					<value option="CF_SQL_CLOB" />
					<value option="CF_SQL_DATE" />
					<value option="CF_SQL_DECIMAL" />
					<value option="CF_SQL_DOUBLE" />
					<value option="CF_SQL_FLOAT" />
					<value option="CF_SQL_IDSTAMP" />
					<value option="CF_SQL_INTEGER" />
					<value option="CF_SQL_LONGVARCHAR" />
					<value option="CF_SQL_MONEY" />
					<value option="CF_SQL_MONEY4" />
					<value option="CF_SQL_NUMERIC" />
					<value option="CF_SQL_REAL" />
					<value option="CF_SQL_REFCURSOR" />
					<value option="CF_SQL_SMALLINT" />
					<value option="CF_SQL_TIME" />
					<value option="CF_SQL_TIMESTAMP" />
					<value option="CF_SQL_TINYINT" />
					<value option="CF_SQL_VARCHAR" />
				</values>
			</parameter>
			<parameter name="maxlength" type="Numeric" required="false">
				<help><![CDATA[
					Maximum length of a string or character IN or INOUT value 
					attribute. A maxLength of 0 allows any length. The 
					maxLength attribute is not required when specifying 
					type=out.
				]]></help>
				<values/>
			</parameter>
			<parameter name="scale" type="Numeric" required="false">
				<help><![CDATA[
					Number of decimal places in numeric parameter. A scale of 0 
					allows any number of decimal places.
				]]></help>
				<values/>
			</parameter>
			<parameter name="null" type="boolean" required="false">
				<help><![CDATA[
					Whether the parameter is passed in as a null value. Not 
					used with OUT type parameters.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
		</tag> 
		
		<!-- 
			cfprocresult    
				name = "query_name"   
				resultSet = "1-n"    
				maxRows = "maxrows"
		-->
		<tag creator="3" name="procresult" single="true" xmlstyle="false">
			<help><![CDATA[
				Associates a query object with a result set returned by a 
				stored procedure. Other ColdFusion tags, such as cfoutput and 
				cftable, use this query object to access the result set. This 
				tag is nested within a cfstoredproc tag. 
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Name for the query result set.
				]]></help>
				<values/>
			</parameter>
			<parameter name="resultset" type="Numeric" required="false">
				<help><![CDATA[
					Names one result set, if stored procedure returns more than
					one.
				]]></help>
				<values/>
			</parameter>
			<parameter name="maxrows" type="Numeric" required="false">
				<help><![CDATA[
					Maximum number of rows returned in result set.
				]]></help>
				<values/>
			</parameter>
		</tag> 
		
		<!-- 
			cfproperty    
				name="name"    
				type="type"
				required="boolean"
				default="default value"
				displayname="descriptive name"
				hint="extended description"
		-->
		<tag creator="3" name="xml" single="true" xmlstyle="false">
			<help><![CDATA[
				Defines properties of a ColdFusion component (CFC). Used to 
				create complex data types for web services. The attributes of 
				this tag are exposed as component metadata and are subject to 
				inheritance rules.
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					A string; a property name. Must be a static value.
				]]></help>
				<values/>
			</parameter>
			<parameter name="type" type="String" required="false">
				<help><![CDATA[
					A string; identifies the property data type
				]]></help>
				<values>
					<value option="any" />
					<value option="array" />
					<value option="binary" />
					<value option="boolean" />
					<value option="date" />
					<value option="guid" />
					<value option="numeric" />
					<value option="query" />
					<value option="string" />
					<value option="struct" />
					<value option="uuid" />
					<value option="variable_name" />
					<value option="component_name" />
				</values>
			</parameter>
			<parameter name="required" type="boolean" required="false">
				<help><![CDATA[
					Whether the parameter is required 				
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="default" type="Object" required="false">
				<help><![CDATA[
					If no property value is set when the component is used for 
					a web service, specifies a default value. 

					If this attribute is present, the required attribute must 
					be set to "no" or not specified.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="displayname" type="String" required="false">
				<help><![CDATA[
					A value to be displayed when using introspection to show 
					information about the CFC. The value appears in parentheses 
					following the property name.
				]]></help>
				<values/>
			</parameter>
			<parameter name="hint" type="String" required="false">
				<help><![CDATA[
					Text to be displayed when using introspection to show 
					information about the CFC. This attribute can be useful 
					for describing the purpose of the parameter.
				]]></help>
				<values/>
			</parameter>
		</tag> 
		
		<!-- 
			cfquery    
				name = "query_name"   
				dataSource = "ds_name"   
				dbtype = "query"   
				username = "username"   
				password = "password"   
				maxRows = "number"   
				blockFactor = "blocksize"   
				timeout = "seconds"   
				cachedAfter = "date"    
				cachedWithin = "timespan"    
				Either of the following:      
				debug = "Yes" or "No"  
				[SQL statement(s)]
			/cfquery
		-->
		<tag creator="3" name="query" single="false" xmlstyle="false">
			<help><![CDATA[
				Passes queries or SQL statements to a data source.
				It is recommended that you use the cfqueryparam tag within 
				every cfquery tag, to help secure your databases from 
				unauthorized users
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Name of query. Used in page to reference query record set. 
					Must begin with a letter. Can include letters, numbers, 
					and underscores.
				]]></help>
				<values/>
			</parameter>
			<parameter name="datasource" type="String" required="true">
				<help><![CDATA[
					Name of data source from which query gets data.
				]]></help>
				<values/>
			</parameter>
			<parameter name="dbtype" type="String" required="false">
				<help><![CDATA[
					query. Use this value to specify the results of a query as 
					input.
				]]></help>
				<values/>
			</parameter>
			<parameter name="username" type="String" required="false">
				<help><![CDATA[
					Overrides username in data source setup.
				]]></help>
				<values/>
			</parameter>
			<parameter name="password" type="String" required="false">
				<help><![CDATA[
					Overrides password in data source setup.
				]]></help>
				<values/>
			</parameter>
			<parameter name="maxrows" type="Numeric" required="false">
				<help><![CDATA[
					Maximum number of rows to return in record set.
				]]></help>
				<values/>
			</parameter>
			<parameter name="blockfactor" type="Numeric" required="false">
				<help><![CDATA[
					Maximum rows to get at a time from server. Range: 1 - 100.
					Might not be supported by some database systems.
				]]></help>
				<values/>
			</parameter>
			<parameter name="timeout" type="Numeric" required="false">
				<help><![CDATA[
					Maximum number of seconds that each action of a query is 
					permitted to execute before returning an error. The 
					cumulative time may exceed this value.

					For JDBC statements, ColdFusion sets this attribute. For 
					other drivers, check driver documentation.
				]]></help>
				<values/>
			</parameter>
			<parameter name="cachedafter" type="Date" required="false">
				<help><![CDATA[
					Date value (for example, April 16, 1999, 4-16-99). If date 
					of original query is after this date, ColdFusion uses 
					cached query data. To use cached data, current query must 
					use same SQL statement, data source, query name, user name,
					password. 

					A date/time object is in the range 100 AD-9999 AD.

					When specifying a date value as a string, you must enclose 
					it in quotation marks.
				]]></help>
				<values/>
			</parameter>
			<parameter name="cachedwithin" type="Timespan" required="false">
				<help><![CDATA[
					Timespan, using the CreateTimeSpan function. If original 
					query date falls within the time span, cached query data is 
					used. CreateTimeSpan defines a period from the present, 
					back. Takes effect only if query caching is enabled in the 
					Administrator. 

					To use cached data, the current query must use the same SQL 
					statement, data source, query name, user name, and password.
				]]></help>
				<values/>
			</parameter>
			<parameter name="debug" type="boolean" required="false">
				<help><![CDATA[
					Yes: If debugging is enabled, but the Administrator 
						Database Activity option is not enabled, displays SQL 
						submitted to datasource and number of records returned 
						by query. 
					No: If the Administrator Database Activity option is 
						enabled, suppresses display.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
		</tag> 
		
		<!-- 
			cfqueryparam 
				value = "parameter value"
				CFSQLType = "parameter type"
				maxLength = "maximum parameter length"
				scale = "number of decimal places"
				null = "Yes" or "No"
				list = "Yes" or "No"
				separator = "separator character"
		-->
		<tag creator="3" name="queryparam" single="true" xmlstyle="false">
			<help><![CDATA[
				Verifies the data type of a query parameter and, for DBMSs that 
				support bind variables, enables ColdFusion to use bind variables
				in the SQL statement. Bind variable usage enhances performance 
				when executing a cfquery statement multiple times.

				This tag is nested within a cfquery tag, embedded in a query SQL
				statement. If you specify optional parameters, this tag performs
				data validation.
			]]></help>
			<parameter name="value" type="String" required="true">
				<help><![CDATA[
					Value that ColdFusion passes to the right of the comparison 
					operator in a where clause. 

					If CFSQLType is a date or time option, ensure that the date
					value uses your DBMS-specific date format. Use the 
					CreateODBCDateTime or DateFormat and TimeFormat functions 
					to format the date value.
				]]></help>
				<values/>
			</parameter>
			<parameter name="cfsqltype" type="String" required="false">
				<help><![CDATA[
					SQL type that parameter (any type) is bound to.
				]]></help>
				<values>
					<value option="CF_SQL_BIGINT" />
					<value option="CF_SQL_BIT" />
					<value option="CF_SQL_CHAR" />
					<value option="CF_SQL_BLOB" />
					<value option="CF_SQL_CLOB" />
					<value option="CF_SQL_DATE" />
					<value option="CF_SQL_DECIMAL" />
					<value option="CF_SQL_DOUBLE" />
					<value option="CF_SQL_FLOAT" />
					<value option="CF_SQL_IDSTAMP" />
					<value option="CF_SQL_INTEGER" />
					<value option="CF_SQL_LONGVARCHAR" />
					<value option="CF_SQL_MONEY" />
					<value option="CF_SQL_MONEY4" />
					<value option="CF_SQL_NUMERIC" />
					<value option="CF_SQL_REAL" />
					<value option="CF_SQL_REFCURSOR" />
					<value option="CF_SQL_SMALLINT" />
					<value option="CF_SQL_TIME" />
					<value option="CF_SQL_TIMESTAMP" />
					<value option="CF_SQL_TINYINT" />
					<value option="CF_SQL_VARCHAR" />
				</values>
			</parameter>
			<parameter name="maxlength" type="Numeric" required="false">
				<help><![CDATA[
					Maximum length of parameter.
				]]></help>
				<values/>
			</parameter>
			<parameter name="scale" type="Numeric" required="false">
				<help><![CDATA[
					Number of decimal places in parameter. Applies to 
					CF_SQL_NUMERIC and CF_SQL_DECIMAL.
				]]></help>
				<values/>
			</parameter>
			<parameter name="null" type="boolean" required="false">
				<help><![CDATA[
					Whether parameter is passed as a null value.
                    
                    Yes: tag ignores the value attribute 
                    No: does not
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="list" type="boolean" required="false">
				<help><![CDATA[
					Yes: The value attribute value is a delimited list 
					No: it is not
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="separator" type="char" required="false">
				<help><![CDATA[
					Character that separates values in list, in value attribute.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
		</tag> 
		
		<!-- 
			cfreport    
				report = "report_path"   
				dataSource = "ds_name"    
				type = "type"    
				timeout = "number of seconds"    
				orderBy = "result_order"   
				username = "username"   
				password = "password"   
				formula = "formula"
			/cfreport
		-->
		<tag creator="3" name="report" single="false" xmlstyle="false">
			<help><![CDATA[
				Runs a predefined Crystal Reports report. Applies only to 
				Windows systems. Uses the CFCRYSTAL.exe file to generate 
				reports. Sets parameters in the Crystal Reports engine 
				according to its attribute values.
			]]></help>
			<parameter name="datasource" type="String" required="false">
				<help><![CDATA[
					Name of registered or native data source.
				]]></help>
				<values/>
			</parameter>
			<parameter name="type" type="String" required="false">
				<help><![CDATA[
					* standard (not valid for Crystal Reports 8.0) 
                    * netscape 
                    * microsoft
				]]></help>
				<values>
					<value option="standard" />
					<value option="netscape" />
					<value option="microsoft" />
				</values>
			</parameter>
			<parameter name="timeout" type="Numeric" required="false">
				<help><![CDATA[
					Maximum time, in seconds, in which a connection must be 
					made to a Crystal Report. 
				]]></help>
				<values/>
			</parameter>
			<parameter name="report" type="String" required="true">
				<help><![CDATA[
					Report path. Store Crystal Reports files in the same 
					directories as ColdFusion page files.
				]]></help>
				<values/>
			</parameter>
			<parameter name="orderby" type="String" required="false">
				<help><![CDATA[
					Orders results according to your specifications.
				]]></help>
				<values/>
			</parameter>
			<parameter name="username" type="String" required="false">
				<help><![CDATA[
					Username required for entry into database from which report
					is created. Overrides default settings for data source in 
					ColdFusion Administrator.
				]]></help>
				<values/>
			</parameter>
			<parameter name="password" type="String" required="false">
				<help><![CDATA[
					Password that corresponds to username required for database
					access. Overrides default settings for data source in 
					ColdFusion Administrator.
				]]></help>
				<values/>
			</parameter>
			<parameter name="formula" type="String" required="false">
				<help><![CDATA[
					One or more named formulas. Terminate each formula with a 
					semicolon. Use the format:

					formula = "formulaname1='formula1';formulaname2='formula2';"
					
					If you use a semicolon in a formula, you must escape it by 
					typing it twice (;;). For example:

					formula = "Name1 = 'Val_1a;;Val_1b';Name2 = 'Val2';"
				]]></help>
				<values/>
			</parameter>
		</tag>	
		
		<!-- 
			cfrethrow
		-->
		<tag creator="3" name="rethrow" single="true" xmlstyle="false">
			<help><![CDATA[
				Rethrows the currently active exception. Preserves the 
				exception's cfcatch.type and cfcatch.tagContext variable 
				values. 
			]]></help>
		</tag>
		
		<!-- 
			cfreturn
				expr
		-->
		<tag creator="3" name="return" single="true" xmlstyle="false">
			<help><![CDATA[
				Returns result values from a component method. Contains an 
				expression returned as result of the function.
				An expression; the result of the function from which this tag 
				is called.
			]]></help>
		</tag>
		
		<!-- 
			cfsavecontent    
				variable = "variable name"
				[the content]
			/cfsavecontent
		-->
		<tag creator="3" name="savecontent" single="false" xmlstyle="false">
			<help><![CDATA[
				Saves the generated content of the cfsavecontent tag, including
				the results of evaluating expressions and executing custom tags,
				in the specified variable.
			]]></help>
			<parameter name="variable" type="String" required="true">
				<help><![CDATA[
					Name ofthe variable in which to save the generated content 
					of the tag.
				]]></help>
				<values/>
			</parameter>
		</tag> 
		
		<!-- 
			cfschedule    
				action = "update"   
				task = "taskname"   
				operation = "HTTPRequest"   
				file = "filename"   
				path = "path_to_file"   
				startDate = "date"   
				startTime = "time"   
				url = "URL"   
				port = "port_number"   
				publish = "Yes" or "No"   
				endDate = "date"   
				endTime = "time"   
				interval = "seconds"   
				requestTimeOut = "seconds"   
				username = "username"   
				password = "password"   
				proxyServer = "hostname"   
				proxyPort = "port_number"
				proxyUser = "username"   
				proxyPassword = "password"   
				resolveURL = "Yes" or "No"
		-->
		<tag creator="3" name="schedule" single="true" xmlstyle="false">
			<help><![CDATA[
				Provides a programmatic interface to the ColdFusion scheduling
				engine. Can run a CFML page at scheduled intervals, with the 
				option to write the page output to a static HTML page. This 
				feature enables you to schedule pages that publish data, such 
				as reports, without waiting while a database transaction is 
				performed to populate the page.
			]]></help>
			<parameter name="action" type="String" required="true">
				<help><![CDATA[
					delete: deletes the specified task 
					update: updates an existing task or creates a new task, 
						if one with the name specified by the task attribute 
						does not exist 
					run: executes the specified task 
				]]></help>
				<values>
					<value option="delete" />
					<value option="update" />
					<value option="run" />
				</values>
			</parameter>
			<parameter name="task" type="String" required="true">
				<help><![CDATA[
					Name of the task.
				]]></help>
				<values/>
			</parameter>
			<parameter name="operation" type="String" required="false">
				<help><![CDATA[
					Operation that the scheduler performs. Must be HTTPRequest.
				]]></help>
				<values/>
			</parameter>
			<parameter name="file" type="String" required="false">
				<help><![CDATA[
					Name of the file in which to store the published output of 
					the scheuled task
				]]></help>
				<values/>
			</parameter>
			<parameter name="path" type="String" required="false">
				<help><![CDATA[
					Path to the directory in which to put the published file.
				]]></help>
				<values/>
			</parameter>
			<parameter name="startdate" type="String" required="false">
				<help><![CDATA[
					Date on which to first run the scheuled task.
				]]></help>
				<values/>
			</parameter>
			<parameter name="starttime" type="String" required="false">
				<help><![CDATA[
					Time at which to run the scheduled of task starts.
				]]></help>
				<values/>
			</parameter>
			<parameter name="url" type="URL" required="false">
				<help><![CDATA[
					URL of the page to execute.
				]]></help>
				<values/>
			</parameter>
			<parameter name="port" type="Numeric" required="false">
				<help><![CDATA[
					Port to use on the server that is specified by the url 
					parameter. If resolveURL = "yes", retrieved document URLs 
					that specify a port number are automatically resolved, to
					preserve links in the retrieved document. A port value in 
					the url attribute overrides this value.
				]]></help>
				<values/>
			</parameter>
			<parameter name="publish" type="boolean" required="false">
				<help><![CDATA[
					Yes: save the result to a file 
					No: does not
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="enddate" type="String" required="false">
				<help><![CDATA[
					Date when scheduled task ends.
				]]></help>
				<values/>
			</parameter>
			<parameter name="endtime" type="Numeric" required="false">
				<help><![CDATA[
					Time when scheduled task ends (seconds).
				]]></help>
				<values/>
			</parameter>
			<parameter name="interval" type="String" required="false">
				<help><![CDATA[
				Interval at which task is scheduled.
                    * number of seconds (minimum is 60) 
                    * once 
                    * daily 
                    * weekly 
                    * monthly 
				]]></help>
				<values>
					<value option="once" />
					<value option="daily" />
					<value option="weekly" />
					<value option="monthly" />
				</values>
			</parameter>
			<parameter name="requesttimeout" type="Numeric" required="false">
				<help><![CDATA[
					Can be used to extend the default timeout period.
				]]></help>
				<values/>
			</parameter>
			<parameter name="username" type="String" required="false">
				<help><![CDATA[
					Username, if URL is protected.
				]]></help>
				<values/>
			</parameter>
			<parameter name="password" type="String" required="false">
				<help><![CDATA[
					Password, if URL is protected.
				]]></help>
				<values/>
			</parameter>
			<parameter name="proxyserver" type="String" required="false">
				<help><![CDATA[
					Host name or IP address of a proxy server.
				]]></help>
				<values/>
			</parameter>
			<parameter name="proxyport" type="Numeric" required="false">
				<help><![CDATA[
					Port number to use on the proxy server.
				]]></help>
				<values/>
			</parameter>
			<parameter name="proxyuser" type="String" required="false">
				<help><![CDATA[
					User name to provide to the proxy server.
				]]></help>
				<values/>
			</parameter>
			<parameter name="proxypassword" type="String" required="false">
				<help><![CDATA[
					Password to provide to the proxy server.
				]]></help>
				<values/>
			</parameter>
			<parameter name="resolveurl" type="boolean" required="false">
				<help><![CDATA[
					Yes: resolve links in the output page to absolute 
						references 
					No: does not
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
		</tag> 
		
		<!-- 
			cfscript
				[cfscript code here]
			/cfscript
		-->
		<tag creator="3" name="script" single="false" xmlstyle="false">
			<help><![CDATA[
				Encloses a code block that contains cfscript statements.
				
				You cannot use some ColdFusion reserved words in this tag. You 
				cannot put a user-defined function whose name begins with any 
				of these strings within this tag: 
				cf,cf_,_cf,coldfusion,coldfusion_,_coldfusion
				
				You cannot use the elseif construct within a cfscript tag. You 
				can use code such as the following:
                else if ( condition )
                {
                ...
                }
			]]></help>
		</tag> 
		
		<!-- 
			cfsearch    
				name = "search_name"   
				collection = "collection_name"   
				type = "criteria"   
				criteria = "search_expression"   
				maxRows = "number"   
				startRow = "row_number"   
				language = "language"
		-->
		<tag creator="3" name="search" single="true" xmlstyle="false">
			<help><![CDATA[
				Searches Verity collections using ColdFusion or K2Server, 
				whichever search engine a collection is registered by. 
				(ColdFusion can also search collections that have not been 
				registered, with the cfcollection tag.)

				A collection must be created and indexed before this tag can 
				return search results.
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Name of the search query.
				]]></help>
				<values/>
			</parameter>
			<parameter name="collection" type="String" required="true">
				<help><![CDATA[
					One or more path(s) and/or registered collection name(s).
					For a registered collection, specify the collection name.
					For an unregistered collection, specify an absolute path.
					Registered names are listed in the ColdFusion Administrator,
					Verity Collections and Verity Server pages.

					To specify multiple collections, use a comma delimiter. For 
					example: "CFUSER, e:\collections\personnel"

					If you specify multiple collections, you cannot include a 
					combination of collections that are registered by K2Server 
					and registered by Verity.
				]]></help>
				<values/>
			</parameter>
			<parameter name="type" type="String" required="false">
				<help><![CDATA[
					simple: STEM and MANY operators are implicitly used. See 
						Using Verity Search Expressions in Developing 
						ColdFusion MX Applications. 
					explicit: operators must be invoked explicitly
				]]></help>
				<values>
					<value option="simple" />
					<value option="explicit" />
				</values>
			</parameter>
			<parameter name="criteria" type="String" required="false">
				<help><![CDATA[
					Search criteria. Follows the syntax rules of the type 
					attribute. If you pass a mixed-case entry in this attribute,
					the search is case-sensitive. If you pass all uppercase or
					all lowercase, the search is case-insensitive. Follow 
					Verity syntax and delimiter character rules; see Using 
					Verity Search Expressions in Developing ColdFusion MX 
					Applications.
				]]></help>
				<values/>
			</parameter>
			<parameter name="maxrows" type="Numeric" required="false">
				<help><![CDATA[
					Maximum number of rows to return in query results. Use 
					double or single quotation marks.
				]]></help>
				<values/>
			</parameter>
			<parameter name="startrow" type="Numeric" required="false">
				<help><![CDATA[
					First row number to get.
				]]></help>
				<values/>
			</parameter>
			<parameter name="language" type="String" required="false">
				<help><![CDATA[
					For options, see cfcollection. Requires the ColdFusion 
					International Search Pack. 
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfselect    
				name = "name"   
				required = "Yes" or "No"   
				message = "text"   
				onError = "text"   
				size = "integer"   
				multiple = "Yes" or "No"   
				query = "queryname"   
				selected = "column_value"   
				value = "text"  
				display = "text"   
				passThrough = "HTML_attributes"	
			/cfselect
		-->
		<tag creator="3" name="select" single="false" xmlstyle="false">
			<help><![CDATA[
				Constructs a drop-down list box form control. Used within a 
				cfform tag. 

				You can populate the list from a query, or by using the HTML 
				option tag.
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Name of the select form element
				]]></help>
				<values/>
			</parameter>
			<parameter name="size" type="Numeric" required="false">
				<help><![CDATA[
					Number of entries to display at one time. The default, 1, 
					displays a drop-down list. Any other value displays a list 
					box with size number of entries visible at one time.
				]]></help>
				<values/>
			</parameter>
			<parameter name="required" type="boolean" required="false">
				<help><![CDATA[
					Yes: a list element must be selected when form is submitted.
					No:
					
					Note: This attribute has no effect if you omit the size 
						attribute or set it to 1 because the browser always 
						submits the displayed item.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="message" type="String" required="false">
				<help><![CDATA[
					Message to display if required = "Yes" and no selection is 
					made.
				]]></help>
				<values/>
			</parameter>
			<parameter name="onerror" type="String" required="false">
				<help><![CDATA[
					Custom JavaScript function to execute if validation fails
				]]></help>
				<values/>
			</parameter>
			<parameter name="multiple" type="boolean" required="false">
				<help><![CDATA[
					Yes: allow selecting multiple elements in drop-down list 
					No: does not
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="query" type="String" required="false">
				<help><![CDATA[
					Name of query to populate drop-down list.
				]]></help>
				<values/>
			</parameter>
			<parameter name="selected" type="String" required="false">
				<help><![CDATA[
					A list of option values to preselect in the selection list.
					This attribute applies only if list items are generated 
					from a query. The cfform preservedata attribute value can 
					override this value.
				]]></help>
				<values/>
			</parameter>
			<parameter name="value" type="String" required="false">
				<help><![CDATA[
					Query column to use for the value of each list element. 
					Used with query attribute.
				]]></help>
				<values/>
			</parameter>
			<parameter name="display" type="String" required="false">
				<help><![CDATA[
					Query column to use for the display label of each list 
					element. Used with query attribute.
				]]></help>
				<values/>
			</parameter>
			<parameter name="passthrough" type="String" required="false">
				<help><![CDATA[
					Passes one or more arbitrary attribute-value pairs to the 
					HTML code that is generated for the tag. You can use either 
					of the following formats to include the quotation marks 
					around the attribute value:

					passthrough="ID=""myID"""
					passthrough='ID="myID"'

					The second format, which surrounds all the attribute-value 
					pairs to be passed through in single quotation marks is 
					clearer, particularly when you pass multiple HTML 
					attributes.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfset 
				var variable_name = expression
		-->
		<tag creator="3" name="set" single="true" xmlstyle="false">
			<help><![CDATA[
				Sets a value in ColdFusion. Used to create a variable, if it 
				does not exist, and assign it a value. Also used to call 
				functions.
			]]></help>
		</tag>
		
		<!-- 
			cfsetting    
				enableCFoutputOnly = "Yes" or "No"    
				showDebugOutput = "Yes" or "No"    
				requestTimeOut = "value in seconds"
		-->
		<tag creator="3" name="setting" single="true" xmlstyle="false">
			<help><![CDATA[
				Controls aspects of page processing, such as the output of 
				HTML code in pages. 
			]]></help>
			<parameter name="enablecfoutputonly" type="boolean" required="true">
				<help><![CDATA[
					Yes: blocks output of HTML that is outside cfoutput tags 
					No: displays HTML that is outside cfoutput tags. 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="showdebugoutput" type="boolean" required="false">
				<help><![CDATA[
					Yes: If debugging is enabled in the Administrator, displays
						debugging information 
					No: suppresses debugging information that would otherwise 
						display at end of generated page.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="requesttimeout" type="Numeric" required="false">
				<help><![CDATA[
					Integer; number of seconds. Time limit, after which 
					ColdFusion processes the page as an unresponsive thread. 
					Overrides the timeout set in the ColdFusion Administrator. 
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfsilent
			...
			/cfsilent
		-->
		<tag creator="3" name="silent" single="false" xmlstyle="false">
			<help><![CDATA[
				Suppresses output produced by CFML within a tag's scope.
			]]></help>
		</tag>
		
		<!-- 
			cfstoredproc    
				procedure = "procedure name"   
				dataSource = "ds_name"   
				username = "username"   
				password = "password"   
				blockFactor = "blocksize"   
				debug = "Yes" or "No"   
				returnCode = "Yes" or "No"
		-->
		<tag creator="3" name="storedproc" single="true" xmlstyle="false">
			<help><![CDATA[
				Executes a stored procedure in a server database. It 
				specifies database connection information and identifies 
				the stored procedure.
			]]></help>
			<parameter name="procedure" type="String" required="true">
				<help><![CDATA[
					Name of stored procedure on database server.
				]]></help>
				<values/>
			</parameter>
			<parameter name="datasource" type="String" required="true">
				<help><![CDATA[
					Name of data source that points to database that contains 
					stored procedure.
				]]></help>
				<values/>
			</parameter>
			<parameter name="username" type="String" required="false">
				<help><![CDATA[
					Overrides username in data source setup.
				]]></help>
				<values/>
			</parameter>
			<parameter name="password" type="String" required="false">
				<help><![CDATA[
					Overrides password in data source setup.
				]]></help>
				<values/>
			</parameter>
			<parameter name="blockfactor" type="Numeric" required="false">
				<help><![CDATA[
					Maximum number of rows to get at a time from server. 
					Range is 1 to 100.
				]]></help>
				<values/>
			</parameter>
			<parameter name="debug" type="boolean" required="false">
				<help><![CDATA[
					Yes: Lists debug information on each statement 
					No: does not
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="returncode" type="boolean" required="false">
				<help><![CDATA[
					Yes: Tag populates cfstoredproc.statusCode with status 
						code returned by stored procedure. 
					No: does not
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
			cfswitch    
				expression = "expression"
				[one or more cfcase tags
				zero or one cfdefaultcase tags]
			/cfswitch
		-->
		<tag creator="3" name="switch" single="false" xmlstyle="false">
			<help><![CDATA[
				Evaluates a passed expression and passes control to the cfcase 
				tag that matches the expression result. You can, optionally, 
				code a cfdefaultcase tag, which receives control if there is no
				matching cfcase tag value.
			]]></help>
			<parameter name="expression" type="String" required="true">
				<help><![CDATA[
					ColdFusion expression that yields a scalar value. 
					ColdFusion converts integers, real numbers, Booleans, and 
					dates to numeric values. For example, True, 1, and 1.0 are 
					all equal.
				]]></help>
				<values/>
			</parameter>
		</tag>
				
		<!-- 
			cftable
				query = "query_name"
				maxRows = "maxrows_table"   
				colSpacing = "number_of_spaces"   
				headerLines = "number_of_lines"   
				HTMLTable
				border
				colHeaders   
				startRow = "row_number">   
			/cftable
		
		-->
		<tag creator="3" name="table" single="false" xmlstyle="false">
			<help><![CDATA[
				Builds a table in a ColdFusion page. This tag renders data as 
				preformatted text, or, with the HTMLTable attribute, in an 
				HTML table. If you do not want to write HTML table tag code, or 
				if your data can be presented as preformatted text, use this 
				tag. 

				Preformatted text (defined in HTML with the <pre> and </pre> 
				tags) displays text in a fixed-width font. It displays white 
				space and line breaks exactly as they are written within the 
				pre tags. For more information, see an HTML reference guide.

				To define table column and row characteristics, use the cfcol 
				tag within this tag.
			]]></help>
			<parameter name="query" type="String" required="true">
				<help><![CDATA[
					Name of cfquery from which to draw data.
				]]></help>
				<values/>
			</parameter>
			<parameter name="maxrows" type="Numeric" required="false">
				<help><![CDATA[
					Maximum number of rows to display in the table.
				]]></help>
				<values/>
			</parameter>
			<parameter name="colspacing" type="Numeric" required="false">
				<help><![CDATA[
					Number of spaces between columns
				]]></help>
				<values/>
			</parameter>
			<parameter name="headerlines" type="Numeric" required="false">
				<help><![CDATA[
					Number of lines to use for table header (the default leaves
					one line between header and first row of table).
				]]></help>
				<values/>
			</parameter>
			<parameter name="htmltable" type="Any" required="false">
				<help><![CDATA[
					Renders data in an HTML 3.0 table.

					If you use this attribute (regardless of its value), 
					ColdFusion renders data in an HTML table.
				]]></help>
				<values/>
			</parameter>
			<parameter name="border" type="Any" required="false">
				<help><![CDATA[
					Displays border around table. 

					If you use this attribute (regardless of its value), 
					ColdFusion displays a border around the table.

					Use this only if you use the HTMLTable attribute.
				]]></help>
				<values/>
			</parameter>
			<parameter name="colheaders" type="Any" required="false">
				<help><![CDATA[
					Displays column heads. If you use this attribute, you must 
					also use the cfcol tag header attribute to define them. 

					If you use this attribute (regardless of its value), 
					ColdFusion displays column heads.
				]]></help>
				<values/>
			</parameter>
			<parameter name="startrow" type="Numeric" required="false">
				<help><![CDATA[
					The query result row to put in the first table row.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cftextinput
				name = "name"   
				value = "text"   
				required = "Yes" or "No"   
				range = "min_value, max_value"   
				validate = "data_type"   
				pattern = "Java regular expression"   
				onValidate = "script_name"   
				message = "text"   
				onError = "text"   
				size = "integer"   
				font = "font_name"   
				fontSize = "integer"   
				italic = "Yes" or "No"   
				bold = "Yes" or "No"   
				height = "integer"   
				width = "integer"   
				vSpace = "integer"   
				hSpace = "integer"   
				align = "alignment"   
				bgColor = "color"   
				textColor = "color"   
				maxLength = "integer"   
				notSupported = "text"
		-->
		<tag creator="3" name="textinput" single="true" xmlstyle="false">
			<help><![CDATA[
				Puts a single-line text entry box in a cfform tag and controls 
				its display characteristics. 
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Name for the cftextinput control.
				]]></help>
				<values/>
			</parameter>
			<parameter name="value" type="String" required="false">
				<help><![CDATA[
					Initial value to display in text control.
				]]></help>
				<values/>
			</parameter>
			<parameter name="required" type="boolean" required="false">
				<help><![CDATA[
					Yes: the user must enter or change text 
					No
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="range" type="String" required="false">
				<help><![CDATA[
					Minimum-maximum value range, delimited by a comma. 
					Valid only for numeric data.
				]]></help>
				<values/>
			</parameter>
			<parameter name="validate" type="String" required="false">
				<help><![CDATA[
					date: verifies format mm/dd/yy. 
					eurodate: verifies date format dd/mm/yyyy. 
					time: verifies time format hh:mm:ss. 
					float: verifies floating point format. 
					integer: verifies integer format. 
					telephone: verifies telephone format ###-###-####. The 
						separator can be a blank. Area code and exchange must 
						begin with digit 1 - 9. 
					zipcode: verifies, in U.S. formats only, 5- or 9-digit 
						format #####-####. The separator can be a blank. 
					creditcard: strips blanks and dashes; verifies number using
						mod10 algorithm. Number must have 13-16 digits. 
					social_security_number: verifies format ###-##-####. The 
						separator can be a blank. 
					regular_expression: matches input against pattern 
						attribute. 
				]]></help>
				<values>
					<value option="date" />
					<value option="eurodate" />
					<value option="time" />
					<value option="float" />
					<value option="integer" />
					<value option="telephone" />
					<value option="zipcode" />
					<value option="creditcard" />
					<value option="social_security_number" />
					<value option="regular_expression" />
				</values>
			</parameter>
			<parameter name="onvalidate" type="String" required="false">
				<help><![CDATA[
					Custom JavaScript function to validate user input. The form 
					object, input object, and input object value are passed to 
					routine, which should return True if validation succeeds, 
					False otherwise. The validate attribute is ignored.
				]]></help>
				<values/>
			</parameter>
			<parameter name="pattern" type="Regex" required="false">
				<help><![CDATA[
					JavaScript regular expression pattern to validate input.
					Omit leading and trailing slashes
				]]></help>
				<values/>
			</parameter>
			<parameter name="message" type="String" required="false">
				<help><![CDATA[
					Message text to display if validation fails
				]]></help>
				<values/>
			</parameter>
			<parameter name="onerror" type="String" required="false">
				<help><![CDATA[
					Custom JavaScript function to execute if validation fails.
				]]></help>
				<values/>
			</parameter>
			<parameter name="size" type="Numeric" required="false">
				<help><![CDATA[
					Number of characters displayed before horizontal scroll 
					bar displays.
				]]></help>
				<values/>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help><![CDATA[
					Font name for data in tree control.
				]]></help>
				<values/>
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help><![CDATA[
					Font size for text in tree control, in points.
				]]></help>
				<values/>
			</parameter>
			<parameter name="italic" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays tree control text in italics 
					No: it does not
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="bold" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays tree control text in bold 
					No: it does not
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help><![CDATA[
					Tree control height, in pixels.
				]]></help>
				<values/>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help><![CDATA[
					Tree control width, in pixels.
				]]></help>
				<values/>
			</parameter>			
			<parameter name="vspace" type="Numeric" required="false">
				<help><![CDATA[
					Vertical margin above and below tree control, in pixels.
				]]></help>
				<values/>
			</parameter>
			<parameter name="hspace" type="Numeric" required="false">
				<help><![CDATA[
					Horizontal spacing to left and right of tree control, in pixels.
				]]></help>
				<values/>
			</parameter>
			<parameter name="align" type="String" required="false">
				<help><![CDATA[
					* top 
                    * left 
                    * bottom 
                    * baseline 
                    * texttop 
                    * absbottom 
                    * middle 
                    * absmiddle 
                    * right 
				]]></help>
				<values>
					<value option="top" />
					<value option="left" />
					<value option="bottom" />
					<value option="baseline" />
					<value option="texttop" />
					<value option="absbottom" />
					<value option="middle" />
					<value option="absmiddle" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="bgcolor" type="String" required="false">
				<help><![CDATA[
					Background color of control. For a hex value, use the form:
					textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
					signs or none.
				]]></help>
				<values>
					<value option="black" />
					<value option="red" />
					<value option="blue" />
					<value option="magenta" />
					<value option="cyan" />
					<value option="orange" />
					<value option="darkgray" />
					<value option="pink" />
					<value option="white" />
					<value option="lightgray" />
					<value option="yellow" />
				</values>
			</parameter>
			<parameter name="textcolor" type="String" required="false">
				<help><![CDATA[
					Text color for control. For a hex value, use the form:
					textColor = "##xxxxxx", where x = 0-9 or A-F; use two hash
					signs or none.
				]]></help>
				<values>
					<value option="black" />
					<value option="red" />
					<value option="blue" />
					<value option="magenta" />
					<value option="cyan" />
					<value option="orange" />
					<value option="darkgray" />
					<value option="pink" />
					<value option="white" />
					<value option="lightgray" />
					<value option="yellow" />
				</values>
			</parameter>
			<parameter name="maxlength" type="Numeric" required="false">
				<help><![CDATA[
					The maximum length of text entered.
				]]></help>
				<values/>
			</parameter>
			<parameter name="notsupported" type="String" required="false">
				<help><![CDATA[
					Message to display if page that contains Java applet-based 
					form control is opened by browser that does not support 
					Java, or has Java support disabled. For example:

					notSupported = "<b> Browser must support Java to view 
					ColdFusion Java Applets</b>"

					If no message is specified, this message displays:

					<b>Browser must support Java to <br> view ColdFusion Java 
					Applets!</b>
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfthrow
				type = "exception_type "
				message = "message"
				detail = "detail_description "
				errorCode = "error_code "
				extendedInfo = "additional_information"
			 	object = "java_except_object"
		-->
		<tag creator="3" name="throw" single="false" xmlstyle="false">
			<help><![CDATA[
				Throws a developer-specified exception, which can be caught 
				with a cfcatch tag that has any of the following type attribute
				options:

                type = "custom_type" 
                type = "Application" 
                type = "Any"
			]]></help>
			<parameter name="type" type="String" required="false">
				<help><![CDATA[
					* A custom type 
					* Application 
					Do not enter another predefined type; types are not 
					generated by ColdFusion applications. If you specify 
					Application, you need not specify a type for cfcatch.
				]]></help>
				<values/>
			</parameter>
			<parameter name="message" type="String" required="false">
				<help><![CDATA[
					Message that describes exception event.
				]]></help>
				<values/>
			</parameter>
			<parameter name="detail" type="String" required="false">
				<help><![CDATA[
					Description of the event. ColdFusion appends error position
					to description; server uses this parameter if an error is 
					not caught by your code.
				]]></help>
				<values/>
			</parameter>
			<parameter name="errorcode" type="String" required="false">
				<help><![CDATA[
					A custom error code that you supply.
				]]></help>
				<values/>
			</parameter>
			<parameter name="extendedinfo" type="String" required="false">
				<help><![CDATA[
					A custom error code that you supply. 
				]]></help>
				<values/>
			</parameter>
			<parameter name="object" type="Object" required="false">
				<help><![CDATA[
					Requires the value of the cfobject tag name attribute.

					Throws a Java exception from a CFML tag.

					This attribute is mutually exclusive with all other 
					attributes of this tag.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cftrace
				abort = "Yes or No"
				category = "string"
				inline = "Yes or No"
				text = "string"
				type = "format"
				var = "variable_name"
			/cftrace
		-->
		<tag creator="3" name="trace" single="false" xmlstyle="false">
			<help><![CDATA[
				Displays and logs debugging data about the state of an 
				application at the time the cftrace tag executes. Tracks 
				runtime logic flow, variable values, and execution time. 
				Displays output at the end of the request or in the debugging 
				section at the end of the request;

				ColdFusion logs cftrace output to the file logs\cftrace.log, in
				the ColdFusion installation directory.

				Note: To permit this tag to execute, you must enable debugging 
				in the ColdFusion Administrator. Optionally, to report trace 
				summaries, enable the Trace section.
			]]></help>
			<parameter name="abort" type="boolean" required="false">
				<help><![CDATA[
					Yes: calls cfabort tag when the tag is executed 
					No 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="category" type="String" required="false">
				<help><![CDATA[
					User-defined string for identifying trace groups
				]]></help>
				<values/>
			</parameter>
			<parameter name="inline" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays trace code in line on the page in the 
					location of the cftrace tag, addition to the debugging 
					information output. 
					No: does not
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="text" type="String" required="false">
				<help><![CDATA[
					User-defined string, which can include simple variable, 
					but not complex variables such as arrays. Outputs to cflog 
					text attribute
				]]></help>
				<values/>
			</parameter>
			<parameter name="type" type="String" required="false">
				<help><![CDATA[
					Corresponds to the cflog type attribute; displays an 
					appropriate icon.

					* Information
					* Warning
					* Error
					* Fatal Information
				]]></help>
				<values>
					<value option="information" />
					<value option="warning" />
					<value option="error" />
					<value option="fatal information" />
				</values>
			</parameter>
			<parameter name="var" type="String" required="false">
				<help><![CDATA[
					The name of a simple or complex variable to display. 

					Useful for displaying a temporary value, or a value that 
					does not display on any CFM page.
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!--
			cftransaction
				action = "begin" or "commit" or "rollback"
				isolation = "read_uncommitted" or "read_committed" or "repeatable_read"
			/cftransaction
		-->
		<tag creator="3" name="transaction" single="false" xmlstyle="false">
			<help><![CDATA[
				Instructs the database management system to treat multiple 
				database operations as a single transaction. Provides database 
				commit and rollback processing.
			]]></help>
			<parameter name="action" type="string" required="false">
				<help><![CDATA[
					<ul>
					<li>begin: the start of the block of code to execute</li>
					<li>commit: commits a pending transaction</li>
					<li>rollback: rolls back a pending transaction</li>
					</ul>
				]]></help>
				<values>
					<value option="begin" />
					<value option="commit" />
					<value option="rollback" />
				</values>
			</parameter>
			<parameter name="isolation" type="string" required="false">
				<help><![CDATA[
					ODBC lock type.
				]]></help>
				<values>
					<value option="read_uncommitted" />
					<value option="read_committed" />
					<value option="repeatable_read" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
			cftree 
				name = "name"   
				required = "Yes" or "No"   
				delimiter = "delimiter"   
				completePath = "Yes" or "No"   
				appendKey = "Yes" or "No"   
				highlightHref = "Yes" or "No"   
				onValidate = "script_name"  
				message = "text"   
				onError = "text"   
				lookAndFeel = "motif" or "windows" or "metal"  
				font = "font"   
				fontSize = "size"   
				italic = "Yes" or "No"   
				bold = "Yes" or "No"   
				height = "integer"   
				width = "integer"   
				vSpace = "integer"   
				hSpace = "integer"  
				align = "alignment"
				border = "Yes" or "No"  
				hScroll = "Yes" or "No"
				vScroll = "Yes" or "No"
				notSupported = "text"
			/cftree
		-->
		<tag creator="3" name="tree" single="false" xmlstyle="false">
			<help><![CDATA[
				Inserts a tree control in a form. Validates user selections. 
				Used within a cftree tag block. You can use a ColdFusion query 
				to supply data to the tree. 
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Name for tree control.
				]]></help>
				<values/>
			</parameter>
			<parameter name="required" type="boolean" required="false">
				<help><![CDATA[
					Yes: user must select an item in tree control 
					No: they do not
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="delimiter" type="String" required="false">
				<help><![CDATA[
					Character to separate elements in form variable path.
				]]></help>
				<values/>
			</parameter>
			<parameter name="completepath" type="boolean" required="false">
				<help><![CDATA[
					Yes: passes the root part of treename.path form variable 
						when cftree is submitted 
					No, or omitted: root level of form variable is not passed; 
						path value starts with the first node 
					
					For the preserveData attribute of cfform to work with the 
					tree, you must set this attribute to Yes. 

					If you specify a root name for a tree item with cftreeitem 
					queryasroot, that value is returned. If you do not specify 
					a root name, ColdFusion returns the query name as the root.
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="appendkey" type="boolean" required="false">
				<help><![CDATA[
					Yes: when used with href, passes CFTREEITEMKEY variable 
						with the value of the selected tree item in URL to the 
						application page specified in the cfform action 
						attribute 
					No
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="highlighthref" type="boolean" required="false">
				<help><![CDATA[
					Yes: highlights links that are associated with a cftreeitem 
						with a URL attribute value 
					No: disables highlight
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="onvalidate" type="String" required="false">
				<help><![CDATA[
					JavaScript function to validate user input. The form object,
					input object, and input object value are passed to the 
					specified routine, which should return True if validation 
					succeeds; False, otherwise.
				]]></help>
				<values/>
			</parameter>
			<parameter name="message" type="String" required="false">
				<help><![CDATA[
					Message to display if validation fails.
				]]></help>
				<values/>
			</parameter>
			<parameter name="onerror" type="String" required="false">
				<help><![CDATA[
					JavaScript function to execute if validation fails.
				]]></help>
				<values/>
			</parameter>
			<parameter name="lookandfeel" type="String" required="false">
				<help><![CDATA[
					motif: renders slider in Motif style 
					windows: renders slider in Windows style 
					metal: renders slider in Java Swing style 
					
					If platform does not support style option, tag defaults to 
					platform default style.
				]]></help>
				<values>
					<value option="motif" />
					<value option="windows" />
					<value option="metal" />
				</values>
			</parameter>
			<parameter name="font" type="String" required="false">
				<help><![CDATA[
					Font name for data in tree control.
				]]></help>
				<values/>
			</parameter>
			<parameter name="fontsize" type="Numeric" required="false">
				<help><![CDATA[
					Font size for text in tree control, in points.
				]]></help>
				<values/>
			</parameter>
			<parameter name="italic" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays tree control text in italics 
					No: it does not
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="bold" type="boolean" required="false">
				<help><![CDATA[
					Yes: displays tree control text in bold 
					No: it does not
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="height" type="Numeric" required="false">
				<help><![CDATA[
					Tree control height, in pixels.
				]]></help>
				<values/>
			</parameter>
			<parameter name="width" type="Numeric" required="false">
				<help><![CDATA[
					Tree control width, in pixels.
				]]></help>
				<values/>
			</parameter>			
			<parameter name="vspace" type="Numeric" required="false">
				<help><![CDATA[
					Vertical margin above and below tree control, in pixels.
				]]></help>
				<values/>
			</parameter>
			<parameter name="hspace" type="Numeric" required="false">
				<help><![CDATA[
					Horizontal spacing to left and right of tree control, in pixels.
				]]></help>
				<values/>
			</parameter>
			<parameter name="align" type="String" required="false">
				<help><![CDATA[
					* top 
                    * left 
                    * bottom 
                    * baseline 
                    * texttop 
                    * absbottom 
                    * middle 
                    * absmiddle 
                    * right 
				]]></help>
				<values>
					<value option="top" />
					<value option="left" />
					<value option="bottom" />
					<value option="baseline" />
					<value option="texttop" />
					<value option="absbottom" />
					<value option="middle" />
					<value option="absmiddle" />
					<value option="right" />
				</values>
			</parameter>
			<parameter name="border" type="boolean" required="false">
				<help><![CDATA[
					* Yes 
					* No 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="hscroll" type="boolean" required="false">
				<help><![CDATA[
					Yes: permits horizontal scrolling 
					No 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="vscroll" type="boolean" required="false">
				<help><![CDATA[
					Yes: permits vertical scrolling 
					No 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="notsupported" type="String" required="false">
				<help><![CDATA[
					Message to display if page that contains Java applet-based 
					form control is opened by browser that does not support 
					Java, or has Java support disabled. For example:

					notSupported = "<b> Browser must support Java to view 
					ColdFusion Java Applets</b>"

					If no message is specified, this message displays:

					<b>Browser must support Java to <br> view ColdFusion Java 
					Applets!</b>
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cftreeitem
				value = "text"
				display = "text"
				parent = "parent_name"
				img = "filename"
				imgopen = "filename"
				href = "URL"
				target = "URL_target"
				query = "queryname"
				queryAsRoot = "Yes" or "No"
				expand = "Yes" or "No"
		-->
		<tag creator="3" name="treeitem" single="true" xmlstyle="false">
			<help><![CDATA[
				Populates a form tree control, created with the cftree tag, 
				with elements. To display icons, you can use the img values 
				that ColdFusion provides, or reference your own icons. 
			]]></help>
			<parameter name="value" type="String" required="true">
				<help><![CDATA[
					Value passed when cfform is submitted. When populating a 
					tree with data from a cfquery, specify columns in a 
					delimited list. Example: value = "dept_id,emp_id"
				]]></help>
				<values/>
			</parameter>
			<parameter name="display" type="String" required="false">
				<help><![CDATA[
					Tree item label. When populating a tree with data from a 
					query, specify names in a delimited list. Example: 
					display = "dept_name,emp_name"
				]]></help>
				<values/>
			</parameter>
			<parameter name="parent" type="String" required="false">
				<help><![CDATA[
					Value for tree item parent.
				]]></help>
				<values/>
			</parameter>
			<parameter name="img" type="String" required="false">
				<help><![CDATA[
					Image name, filename, or file URL for tree item icon.

					You can specify a custom image. To do so, include path and 
					file extension; for example: 

					img = "../images/page1.gif"

					To specify more than one image in a tree, or an image at 
					the second or subsequent level, use commas to separate 
					names, corresponding to level; for example:
					
					img = "folder,document"
					img = ",document" (example of second level)
				]]></help>
				<values>
					<value option="cd" />
					<value option="computer" />
					<value option="document" />
					<value option="element" />
					<value option="folder" />
					<value option="floppy" />
					<value option="fixed" />
					<value option="remote" />
				</values>
			</parameter>
			<parameter name="imgopen" type="String" required="false">
				<help><![CDATA[
					Icon displayed with open tree item. You can specify icon 
					filename with a relative path. You can use a ColdFusion 
					image.
				]]></help>
				<values/>
			</parameter>
			<parameter name="href" type="String" required="false">
				<help><![CDATA[
					URL to associate with tree item or query column for a tree 
					that is populated from a query. If href is a query column, 
					its value is the value populated by query. If href is not 
					recognized as a query column, it is assumed that its text 
					is an HTML href. 

					When populating a tree with data from a query, HREFs can be
					specified in delimited list; for example:

					href = "http://dept_svr,http://emp_svr"
				]]></help>
				<values/>
			</parameter>
			<parameter name="target" type="String" required="false">
				<help><![CDATA[
					Target attribute of href URL. When populating a tree with 
					data from a query, specify target in delimited list:

					target = "FRAME_BODY,_blank"
				]]></help>
				<values/>
			</parameter>
			<parameter name="query" type="String" required="false">
				<help><![CDATA[
					Query name to generate data for the treeitem.
				]]></help>
				<values/>
			</parameter>
			<parameter name="queryAsRoot" type="String" required="false">
				<help><![CDATA[
					Defines query as the root level. This avoids having to 
					create another parent cftreeitem. 

						* Yes 
						* No 
						* String to use as the root name 
					If you do not specify a root name, ColdFusion returns the 
					query name as the root.
				]]></help>
				<values/>
			</parameter>
			<parameter name="expand" type="boolean" required="false">
				<help><![CDATA[
					Yes: expands tree to show tree item children 
					No: keeps tree item collapsed 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
			cftry
			   Code that might throw an exception
			   One or more cfcatch blocks
			/cftry
		-->
		<tag creator="3" name="try" single="false" xmlstyle="false">
			<help><![CDATA[
				Used with one or more cfcatch tags. Together, they catch and 
				process exceptions in ColdFusion pages. Exceptions are events 
				that disrupt the normal flow of instructions in a ColdFusion 
				page, such as failed database operations, missing include 
				files, and developer-specified events.
			]]></help>
		</tag>
		
		<!-- 
			cfupdate
				dataSource = "ds_name"
				tableName = "table_name"
				tableOwner = "name"
				tableQualifier = "qualifier"
				username = "username"
				password = "password"
				formFields = "field_names"
		-->
		<tag creator="3" name="update" single="true" xmlstyle="false">
			<help><![CDATA[
				Updates records in a data source from data in a ColdFusion form
				or form Scope.
			]]></help>
			<parameter name="datasource" type="String" required="true">
				<help><![CDATA[
					Name of the data source that contains the table
				]]></help>
				<values/>
			</parameter>
			<parameter name="tablename" type="String" required="true">
				<help><![CDATA[
					Name of table to update. 
						For ORACLE drivers, must be uppercase. 
						For Sybase driver: case-sensitive; must be in same case
						as used when the table was created 
				]]></help>
				<values/>
			</parameter>
			<parameter name="tableowner" type="String" required="false">
				<help><![CDATA[
					For data sources that support table ownership (for example,
					SQL Server, Oracle, Sybase SQL Anywhere), the table owner.
				]]></help>
				<values/>
			</parameter>
			<parameter name="tablequalifier" type="String" required="false">
				<help><![CDATA[
					For data sources that support table qualifiers. The purpose 
					of table qualifiers is as follows:
						SQL Server and Oracle: name of database that contains 
						table 
						Intersolv dBASE driver: directory of DBF files 
				]]></help>
				<values/>
			</parameter>
			<parameter name="username" type="String" required="false">
				<help><![CDATA[
					Overrides username value specified in ODBC setup.
				]]></help>
				<values/>
			</parameter>
			<parameter name="password" type="String" required="false">
				<help><![CDATA[
					Overrides password value specified in ODBC setup.
				]]></help>
				<values/>
			</parameter>
			<parameter name="formfields" type="String" required="false">
				<help><![CDATA[
					Comma-delimited list of form fields to update.
					
					If a form field is not matched by a column name in the 
					database, ColdFusion throws an error. 

					The formFields lies must include the database table primary
					key field, which must be present in the form. It can be 
					hidden. 
				]]></help>
				<values/>
			</parameter>
		</tag>
		
		<!-- 
			cfwddx
				action = "action" 
				input = "inputdata" 
				output = "resultvariablename"
				topLevelVariable = "toplevelvariablenameforjavascript" 
				useTimeZoneInfo = "Yes" or "No"
				validate = "Yes" or "No"
		-->
		<tag creator="3" name="wddx" single="true" xmlstyle="false">
			<help><![CDATA[
				Serializes and deserializes CFML data structures to the 
				XML-based WDDX format. The WDDX is an XML vocabulary for 
				describing complex data structures in a standard, generic way. 
				Implementing it lets you use the HTTP protocol to such 
				information among application server platforms, application 
				servers, and browsers. 

				This tag generates JavaScript statements to instantiate 
				JavaScript objects equivalent to the contents of a WDDX packet 
				or CFML data structure. Interoperates with Unicode.
			]]></help>
			<parameter name="action" type="String" required="true">
				<help><![CDATA[
					cfml2wddx: serialize CFML to WDDX 
					wddx2cfml: deserialize WDDX to CFML 
					cfml2js: serialize CFML to JavaScript 
					wddx2js: deserialize WDDX to JavaScript 
				]]></help>
				<values>
					<value option="cfml2wddx" />
					<value option="wddx2cfml" />
					<value option="cfml2js" />
					<value option="wddx2js" />
				</values>
			</parameter>
			<parameter name="input" type="String" required="true">
				<help><![CDATA[
					A value to process
				]]></help>
				<values/>
			</parameter>
			<parameter name="output" type="String" required="false">
				<help><![CDATA[
					Name of variable for output. If action = "WDDX2JS" or 
					"CFML2JS", and this attribute is omitted, result is output 
					in HTML stream. 
				]]></help>
				<values/>
			</parameter>
			<parameter name="toplevelvariable" type="String" required="false">
				<help><![CDATA[
					Name of top-level JavaScript object created by 
					deserialization. The object is an instance of the 
					WddxRecordset object.
				]]></help>
				<values/>
			</parameter>
			<parameter name="usetimezoneinfo" type="boolean" required="false">
				<help><![CDATA[
					Whether to output time-zone information when serializing 
					CFML to WDDX. 
						- Yes: the hour-minute offset, represented in ISO8601 
							format, is output. 
						- No: the local time is output. 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
			<parameter name="validate" type="boolean" required="false">
				<help><![CDATA[
					Applies if action = "wddx2cfml" or "wddx2js". 
						- Yes: validates WDDX input with an XML parser using 
							WDDX DTD. If parser processes input without error, 
							packet is deserialized. Otherwise, an error is 
							thrown. 
						- No: no input validation 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
		</tag>
		
		<!-- 
			cfxml
				variable="xmlVarName"
				caseSensitive="yes" or "no"
			/cfxml
		-->
		<tag creator="3" name="xml" single="false" xmlstyle="false">
			<help><![CDATA[
				Creates a ColdFusion XML document object that contains the 
				markup in the tag body. This tag can include XML and CFML tags. 
				ColdFusion processes the CFML code in the tag body, then assigns 
				the resulting text to an XML document object variable. 
			]]></help>
			<parameter name="variable" type="string" required="true">
				<help><![CDATA[
					Name of an xml variable
				]]></help>
				<values/>
			</parameter>
			<parameter name="casesensitive" type="boolean" required="false">
				<help><![CDATA[
					yes: maintains the case of document elements and attributes
					no 
				]]></help>
				<values>
					<value option="true" />
					<value option="false" />
				</values>
			</parameter>
		</tag>
		
	</tags>

	<!-- /////////////////////////////////////////////////////////////// -->

	<functions>
		<!-- 
			
		
		<function creator="3" name="writeoutput" returns="String">
			<help><![CDATA[
			]]></help>
			<parameter name="text" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function> -->
		
		<!-- 
			String Mid(string, start, count)
		-->
		<function creator="3" name="mid" returns="String">
			<help><![CDATA[
				Extracts a substring from a string. 
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="start" type="Numeric" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="count" type="Numeric" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Numeric Min(number1, number2)
		-->
		<function creator="3" name="min" returns="Numeric">
			<help><![CDATA[
				Determines the lesser of two numbers.
			]]></help>
			<parameter name="number1" type="Numeric" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="number2" type="Numeric" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Numeric Minute(date)
		-->
		<function creator="3" name="minute" returns="Numeric">
			<help><![CDATA[
				Extracts the minute value from a date/time object.
			]]></help>
			<parameter name="date" type="DateTime" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Numeric Month(date)
		-->
		<function creator="3" name="writeoutput" returns="Numeric">
			<help><![CDATA[
				Extracts the month value from a date/time object
			]]></help>
			<parameter name="date" type="DateTime" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String MonthAsString(month_number)
		-->
		<function creator="3" name="monthasstring" returns="String">
			<help><![CDATA[
			]]></help>
			<parameter name="month_number" type="Numeric" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			DateTime Now()
		-->
		<function creator="3" name="now" returns="DateTime">
			<help><![CDATA[
				Gets the current date and time of the computer running the 
				ColdFusion server. 
			]]></help>
		</function>
		
		<!-- 
			String NumberFormat(number [, mask ])
		-->
		<function creator="3" name="numberformat" returns="String">
			<help><![CDATA[
				Creates a custom-formatted number value. For international 
				number formatting use LSNumberFormat.
				_,9 Digit placeholder; . decimal point; 0 Pads with zeros;
 				( ) less than zero, puts parentheses around the mask
 				+ plus sign before positive number minus before negative
 				- a space before positive minus sign before negative
 				, Separates every third decimal place with a comma. 
 				L,C Left-justifies or center-justifies number
 				$ dollar sign before formatted number.
 				^ Separates left and right formatting.
 			]]></help>
			<parameter name="number" type="Numeric" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="mask" type="String" required="false">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String ParagraphFormat(string)
		-->
		<function creator="3" name="paragraphformat" returns="String">
			<help><![CDATA[
				Replaces characters in a string:
				 * Single newline characters (CR/LF sequences) with spaces 
				 * Double newline characters with HTML paragraph tags (<p>) 
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			DateTime ParseDateTime(date/time-string [, pop-conversion ] )
		-->
		<function creator="3" name="parsedatetime" returns="DateTime">
			<help><![CDATA[
				Parses a date/time string according to the English (U.S.) 
				locale conventions. (To format a date/time string for other 
				locales, use the LSParseDateTime function.) 
			]]></help>
			<parameter name="dt_string" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="pop_conversion" type="boolean" required="false">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Numeric Pi()
		-->
		<function creator="3" name="pi" returns="Numeric">
			<help><![CDATA[
				Gets the mathematical constant p, accurate to 15 digits.
				The number 3.14159265358979.
			]]></help>
		</function>
		
		<!-- 
			void PreserveSingleQuotes(variable)
		-->
		<function creator="3" name="preservesinglequotes" returns="void">
			<help><![CDATA[
				Prevents ColdFusion from automatically escaping single 
				quotation mark characters that are contained in a variable. 
				ColdFusion does not evaluate the argument.
				
				ColdFusion MX: automatically escapes simple-variable, 
				array-variable, and structure-variable references within a 
				cfquery tag body or block. 
			]]></help>
			<parameter name="variable" type="String" required="true">
				<help><![CDATA[
					Variable that contains a string in which to preserve 
					single quotation marks.
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Numeric Quarter(date)
		-->
		<function creator="3" name="quarter" returns="Numeric">
			<help><![CDATA[
				Calculates the quarter of the year in which a date falls.
			]]></help>
			<parameter name="date" type="DateTime" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Numeric QueryAddColumn(query, column-name, array-name)
		-->
		<function creator="3" name="writeoutput" returns="Numeric">
			<help><![CDATA[
				Adds a column to a query and populates its rows with the 
				contents of a one-dimensional array. Pads query columns, 
				if necessary, to ensure that all columns have the same number 
				of rows.		
			]]></help>
			<parameter name="query" type="Query" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="column-name" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="array-name" type="Array" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Numeric QueryAddRow(query [, number ])
		-->
		<function creator="3" name="queryaddrow" returns="Numeric">
			<help><![CDATA[
				Adds a specified number of empty rows to a query.
			]]></help>
			<parameter name="query" type="Query" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="number" type="Numeric" required="false">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Query QueryNew(columnlist)
		-->
		<function creator="3" name="querynew" returns="Query">
			<help><![CDATA[
				Creates an empty query (query object).
			]]></help>
			<parameter name="columnlist" type="String" required="true">
				<help><![CDATA[
					A string or a variable that contains one. Delimited list 
					of column names, or an empty string.
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			boolean QuerySetCell(query, column_name, value [, row_number ])
		-->
		<function creator="3" name="querysetcell" returns="boolean">
			<help><![CDATA[
				Sets a cell to a value. If no row number is specified, 
				the cell on the last row is set.
			]]></help>
			<parameter name="query" type="Query" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="column_name" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="value" type="Object" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="row_number" type="Numeric" required="false">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>

		<!-- 
			String QuotedValueList(query.column [, delimiter ])
		-->
		<function creator="3" name="quotedvaluelist" returns="String">
			<help><![CDATA[
				Gets the values of each record returned from an executed query.
				ColdFusion does not evaluate the arguments
			]]></help>
			<parameter name="column" type="Query.Column" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="delimiter" type="String" required="false">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Numeric Rand()
		-->
		<function creator="3" name="rand" returns="Numeric">
			<help><![CDATA[
				Generates a random number in the range 0 - 1.
			]]></help>
		</function>
		
		<!-- 
			Numeric Randomize(number)
		-->
		<function creator="3" name="randomize" returns="Numeric">
			<help><![CDATA[
				Seeds the ColdFusion random number generator with an integer 
				number. Seeding the generator helps ensure that the Rand 
				function generates highly random numbers.
				
				Note: Although this function returns a decimal number, 
				it is not a random number.
			]]></help>
			<parameter name="number" type="Numeric" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Numeric Randomize(number)
		-->
		<function creator="3" name="randomize" returns="Numeric">
			<help><![CDATA[
				Seeds the ColdFusion random number generator with an integer 
				number. Seeding the generator helps ensure that the Rand 
				function generates highly random numbers.
			]]></help>
			<parameter name="number" type="Numeric" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Numeric RandRange(number1, number2)
		-->
		<function creator="3" name="randrange" returns="Numeric">
			<help><![CDATA[
				Generates a random integer between two specified numbers. 
				Requests for random integers that are greater than 100,000,000 
				result in non-random numbers, to prevent overflow during 
				internal computations. 
			]]></help>
			<parameter name="number1" type="Numeric" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="number2" type="Numeric" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Object REFind(reg_expression, string [, start ][, returnsubexpressions ])
		-->
		<function creator="3" name="refind" returns="Object">
			<help><![CDATA[
			]]></help>
			<parameter name="reg_expression" type="Regex" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
					A string or a variable that contains one. String in which 
					to search.
				]]></help>
			</parameter>
			<parameter name="start" type="Numeric" required="false">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="returnsubexpressions" type="boolean" required="false">
				<help><![CDATA[
					True: if the regular expression is found, the first array 
						element contains the length and position, respectively,
						of the first match.
						If the regular expression contains parentheses that 
							group subexpressions, each subsequent array element
							contains the length and position, respectively, of 
							the first occurrence of each group.
						If the regular expression is not found, the arrays each
							contain one element with the value 0. 
					False: the function returns the position in the string 
						where the match begins. Default.
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Object REFindNoCase(reg_expression, string [, start] [, returnsubexpressions] )
		-->
		<function creator="3" name="refindnocase" returns="Object">
			<help><![CDATA[
				Uses a regular expression (RE) to search a string for a pattern,
				 starting from a specified position. The search is 
				 case-insensitive. 
			]]></help>
			<parameter name="reg_expression" type="Regex" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
					A string or a variable that contains one. String in which 
					to search.
				]]></help>
			</parameter>
			<parameter name="start" type="Numeric" required="false">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="returnsubexpressions" type="boolean" required="false">
				<help><![CDATA[
					True: if the regular expression is found, the first array 
						element contains the length and position, respectively,
						of the first match.
						If the regular expression contains parentheses that 
							group subexpressions, each subsequent array element
							contains the length and position, respectively, of 
							the first occurrence of each group.
						If the regular expression is not found, the arrays each
							contain one element with the value 0. 
					False: the function returns the position in the string 
						where the match begins. Default.
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			void ReleaseComObject(objectName)
		-->
		<function creator="3" name="releasecomobject" returns="void">
			<help><![CDATA[
				Releases a COM Object and frees up resources that it used. 
			]]></help>
			<parameter name="objectName" type="Object" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String RemoveChars(string, start, count)
		-->
		<function creator="3" name="removechars" returns="String">
			<help><![CDATA[
				Removes characters from a string.
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="start" type="Numeric" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="count" type="Numeric" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String RepeatString(string, count)
		-->
		<function creator="3" name="repeatstring" returns="String">
			<help><![CDATA[
				Creates a string that contains a specified number of 
				repetitions of the specified string.
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="count" type="Numeric" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String Replace(string, substring1, substring2 [, scope ])		
		-->
		<function creator="3" name="replace" returns="String">
			<help><![CDATA[
				Replaces occurrences of substring1 in a string with substring2,
				in a specified scope. The search is case-sensitive.
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="substring1" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="substring2" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="scope" type="String" required="false">
				<help><![CDATA[
					* one: replace the first occurrence (default) 
					* all: replace all occurrences 
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String ReplaceList(string, list1, list2)
		-->
		<function creator="3" name="replacelist" returns="String">
			<help><![CDATA[
				Replaces occurrences of the elements from a delimited list 
				in a string with corresponding elements from another delimited 
				list. The search is case-sensitive.
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="list1" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="list2" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String ReplaceNoCase(string, substring1, substring2 [, scope ])
		-->
		<function creator="3" name="replacenocase" returns="String">
			<help><![CDATA[
				Replaces occurrences of substring1 with substring2, in the 
				specified scope. The search is case-insensitive.
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
					A string (or variable that contains one) within which to 
					replace substring
				]]></help>
			</parameter>
			<parameter name="substring1" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="substring2" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="scope" type="String" required="false">
				<help><![CDATA[
					* one: Replace the first occurrence (default) 
					* all: Replace all occurrences
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String REReplace(string, reg_expression, substring [, scope ])
		-->
		<function creator="3" name="rereplace" returns="String">
			<help><![CDATA[
				Uses a regular expression (RE) to search a string for a string 
				pattern and replace it with another. The search is 
				case-sensitive.
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
					A string or a variable that contains one
				]]></help>
			</parameter>
			<parameter name="reg_expression" type="Regex" required="true">
				<help><![CDATA[
					Regular expression to replace.
				]]></help>
			</parameter>
			<parameter name="substring" type="String" required="true">
				<help><![CDATA[
					A string or a variable that contains one. Replaces 
					reg_expression
				]]></help>
			</parameter>
			<parameter name="scope" type="String" required="false">
				<help><![CDATA[
					* one: Replace the first occurrence of the regular 
						expression. Default. 
					* all: Replace all occurrences of the regular expression.
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String REReplaceNoCase(string, reg_expression, substring [, scope ])
		-->
		<function creator="3" name="rereplacenocase" returns="String">
			<help><![CDATA[
				Uses a regular expression to search a string for a string 
				pattern and replace it with another. The search is 
				case-insensitive.
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
					A string or a variable that contains one
				]]></help>
			</parameter>
			<parameter name="reg_expression" type="Regex" required="true">
				<help><![CDATA[
					Regular expression to replace.
				]]></help>
			</parameter>
			<parameter name="substring" type="String" required="true">
				<help><![CDATA[
					A string or a variable that contains one. Replaces 
					reg_expression
				]]></help>
			</parameter>
			<parameter name="scope" type="String" required="false">
				<help><![CDATA[
					* one: Replace the first occurrence of the regular 
						expression. Default. 
					* all: Replace all occurrences of the regular expression.
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String Reverse(string)
		-->
		<function creator="3" name="reverse" returns="String">
			<help><![CDATA[
				Reverses the order of items, such as the characters in a 
				string, the digits in a number, or the elements in an array.
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
					A string or a variable that contains one
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String Right(string, count)
		-->
		<function creator="3" name="right" returns="String">
			<help><![CDATA[
				Gets a specified number of characters from a string, 
				beginning at the right.
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="count" type="Numeric" required="true">
				<help><![CDATA[
					A positive integer or a variable that contains one. 
					Number of characters to return.
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String RJustify(string, length)
		-->
		<function creator="3" name="rjustify" returns="String">
			<help><![CDATA[
				Right justifies characters of a string. 
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="length" type="Numeric" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Numeric Round(number)
		-->
		<function creator="3" name="round" returns="Numeric">
			<help><![CDATA[
				Rounds a number to the closest integer.
			]]></help>
			<parameter name="number" type="Numeric" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		
		<!-- 
			String RTrim(string)
		-->
		<function creator="3" name="rtrim" returns="String">
			<help><![CDATA[
				Removes spaces from the end of a string.
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
					A string or a variable that contains one
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Numeric Second(date)
		-->
		<function creator="3" name="second" returns="Numeric">
			<help><![CDATA[
				Extracts the ordinal for the second from a date/time object.
			]]></help>
			<parameter name="date" type="DateTime" required="true">
				<help><![CDATA[
					A date/time object
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			void SetEncoding(scope_name,charset)
		-->
		<function creator="3" name="setencoding" returns="void">
			<help><![CDATA[
				Sets the character encoding (character set) of Form and URL 
				scope variable values; used when the character encoding of 
				the input to a form, or the character encoding of a URL, is 
				not in UTF-8 encoding.
			]]></help>
			<parameter name="scope_name" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="charset" type="String" required="true">
				<help><![CDATA[
					The character encoding in which text in the scope 
					variables is encoded. 
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String SetLocale(new_locale)
		-->
		<function creator="3" name="setlocale" returns="String">
			<help><![CDATA[
				Sets the country/language locale for ColdFusion processing 
				and the page returned to the client. The locale value 
				determines the default format of date, time, number, and 
				currency values, according to language and regional 
				conventions.
			]]></help>
			<parameter name="new_locale" type="String" required="true">
				<help><![CDATA[
					The name of a locale; for example, "English (US)"
				]]></help>
			</parameter>
		</function>
		
		
		<!-- 
			String SetProfileString(iniPath, section, entry, value)
		-->
		<function creator="3" name="setprofilestring" returns="String">
			<help><![CDATA[
				Sets the value of a profile entry in an initialization file.
			]]></help>
			<parameter name="inipath" type="String" required="true">
				<help><![CDATA[
					Absolute path of initialization file
				]]></help>
			</parameter>
			<parameter name="section" type="String" required="true">
				<help><![CDATA[
					Section of the initialization file in which the entry is 
					to be set
				]]></help>
			</parameter>
			<parameter name="entry" type="String" required="true">
				<help><![CDATA[
					Name of the entry to set
				]]></help>
			</parameter>
			<parameter name="value" type="String" required="true">
				<help><![CDATA[
					Value to which to set the entry
				]]></help>
			</parameter>
		</function>
		
		
		<!-- 
			void SetVariable(name, value)
		-->
		<function creator="3" name="setvariable" returns="void">
			<help><![CDATA[
				This function is no longer required in well-formed ColdFusion 
				pages. Sets a variable in the name parameter to the value of the 
				value parameter.
			]]></help>
			<parameter name="name" type="String" required="true">
				<help><![CDATA[
					Variable name
				]]></help>
			</parameter>
			<parameter name="value" type="String" required="true">
				<help><![CDATA[
					A string, the name of a string, or a number
				]]></help>
			</parameter>
		</function>
		
		
		<!-- 
			Numeric Sgn(number)
		-->
		<function creator="3" name="sgn" returns="Numeric">
			<help><![CDATA[
				Determines the sign of a number.
			]]></help>
			<parameter name="number" type="Numeric" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		
		<!-- 
			Numeric Sin(number)
		-->
		<function creator="3" name="sin" returns="Numeric">
			<help><![CDATA[
				Calculates the sine of an angle that is entered in radians.
			]]></help>
			<parameter name="number" type="Numeric" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String SpanExcluding(string, set)
		-->
		<function creator="3" name="spanexcluding" returns="String">
			<help><![CDATA[
				Gets characters from a string, from the beginning to a 
				character that is in a specified set of characters. The 
				search is case-sensitive.
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="set" type="String" required="true">
				<help><![CDATA[
					A string or a variable that contains a set of characters. 
					Must contain one or more characters
				]]></help>
			</parameter>
		</function>
		
		
		<!-- 
			String SpanIncluding(string, set)
		-->
		<function creator="3" name="spanincluding" returns="String">
			<help><![CDATA[
				Gets characters from a string, from the beginning to a 
				character that is not in a specified set of characters. The 
				search is case-sensitive.
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="set" type="String" required="true">
				<help><![CDATA[
					A string or a variable that contains a set of characters. 
					Must contain one or more characters
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Numeric Sqr(number)
		-->
		<function creator="3" name="sqr" returns="Numeric">
			<help><![CDATA[
				Calculates the square root of a number.
			]]></help>
			<parameter name="number" type="Numeric" required="true">
				<help><![CDATA[
					A positive integer or a variable that contains one. 
					Number whose square root to get.
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String StripCR(string)
		-->
		<function creator="3" name="stripcr" returns="String">
			<help><![CDATA[
				Deletes return characters from a string.
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
					A string or a variable that contains one
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			boolean StructAppend(struct1, struct2, overwriteFlag)
		-->
		<function creator="3" name="structappend" returns="boolean">
			<help><![CDATA[
				Appends one structure to another.
				ColdFusion MX: Changed behavior: this function can be used on 
				XML objects.
			]]></help>
			<parameter name="struct1" type="Struct" required="true">
				<help><![CDATA[
					Structure to append.
				]]></help>
			</parameter>
			<parameter name="struct2" type="Struct" required="true">
				<help><![CDATA[
					Structure that contains the data to append to struct1
				]]></help>
			</parameter>
			<parameter name="overwriteFlag" type="boolean" required="false">
				<help><![CDATA[
					Yes: values in struct2 overwrite corresponding values in 
					struct1. Default.
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			boolean StructClear(structure)
		-->
		<function creator="3" name="structclear" returns="boolean">
			<help><![CDATA[
				Removes all data from a structure.
			]]></help>
			<parameter name="structure" type="Struct" required="true">
				<help><![CDATA[
					Structure to clear
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Struct StructCopy(structure)
		-->
		<function creator="3" name="structcopy" returns="Struct">
			<help><![CDATA[
				Copies a structure. Copies top-level keys, values, and arrays 
				in the structure by value; copies nested structures by 
				reference.
			]]></help>
			<parameter name="structure" type="Struct" required="true">
				<help><![CDATA[
					Structure to copy
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Numeric StructCount(structure)
		-->
		<function creator="3" name="structcount" returns="Numeric">
			<help><![CDATA[
				Counts the keys in a structure.
			]]></help>
			<parameter name="structure" type="Struct" required="true">
				<help><![CDATA[
					Structure to access
				]]></help>
			</parameter>
		</function>
		
		
		<!-- 
			boolean StructDelete(structure, key [, indicatenotexisting ])
		-->
		<function creator="3" name="structdelete" returns="boolean">
			<help><![CDATA[
				Removes an element from a structure.
			]]></help>
			<parameter name="structure" type="String" required="true">
				<help><![CDATA[
					Structure or a variable that contains one. Contains element
					to remove
				]]></help>
			</parameter>
			<parameter name="key" type="String" required="true">
				<help><![CDATA[
					Element to remove
				]]></help>
			</parameter>
			<parameter name="indicatenotexisting" type="boolean" required="false">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Object StructFind(structure, key)
		-->
		<function creator="3" name="structfind" returns="Object">
			<help><![CDATA[
				Determines the value associated with a key in a structure.
			]]></help>
			<parameter name="structure" type="Struct" required="true">
				<help><![CDATA[
					Structure that contains the value to return
				]]></help>
			</parameter>
			<parameter name="key" type="String" required="true">
				<help><![CDATA[
					Key whose value to return
				]]></help>
			</parameter>
		</function>
		
		
		<!-- 
			Array StructFindKey(top, value, scope)
		-->
		<function creator="3" name="structfindkey" returns="Array">
			<help><![CDATA[
				Searches recursively through a substructure of nested arrays, 
				structures, and other elements, for structures whose values 
				match the search key in the value parameter. 
			]]></help>
			<parameter name="top" type="Object" required="true">
				<help><![CDATA[
					ColdFusion object (structure or array) from which to start 
					search. This attribute requires an object, not a name of 
					an object.
				]]></help>
			</parameter>
			<parameter name="value" type="String" required="true">
				<help><![CDATA[
					String or a variable that contains one for which to search.
				]]></help>
			</parameter>
			<parameter name="scope" type="String" required="true">
				<help><![CDATA[
					* one: returns one matching key. Default. 
					* all: returns all matching keys 
				]]></help>
			</parameter>
		</function>
		 
		<!-- 
			Array StructFindValue( top, value [, scope])
		-->
		<function creator="3" name="structfindvalue" returns="Array">
			<help><![CDATA[
				Searches recursively through a substructure of nested arrays, 
				structures, and other elements for structures with values that 
				match the search key in the value parameter.
			]]></help>
			<parameter name="top" type="Object" required="true">
				<help><![CDATA[
					ColdFusion object (a structure or an array) from which to 
					start search. This attribute requires an object, not a 
					name of an object.
				]]></help>
			</parameter>
			<parameter name="value" type="String" required="true">
				<help><![CDATA[
					String or a variable that contains one for which to search. 
					The type must be a simple object. Arrays and structures 
					are not supported.
				]]></help>
			</parameter>
			<parameter name="scop" type="String" required="false">
				<help><![CDATA[
					one: function returns one matching key (default) 
					all: function returns all matching keys
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Struct StructGet(pathDesired)
		-->
		<function creator="3" name="structget" returns="Struct">
			<help><![CDATA[
				Gets a structure(s) from a specified path.
			]]></help>
			<parameter name="pathdesired" type="String" required="true">
				<help><![CDATA[
					Pathname of variable that contains structure or array from 
					which ColdFusion retrieves structure
				]]></help>
			</parameter>
		</function> 
		
		
		<!-- 
			boolean StructInsert(structure, key, value [, allowoverwrite ])
		-->
		<function creator="3" name="structinsert" returns="boolean">
			<help><![CDATA[
				Inserts a key-value pair into a structure. 
			]]></help>
			<parameter name="structure" type="Struct" required="true">
				<help><![CDATA[
					Structure to contain the new key-value pair.
				]]></help>
			</parameter>
			<parameter name="key" type="String" required="true">
				<help><![CDATA[
					Key that contains the inserted value.
				]]></help>
			</parameter>
			<parameter name="value" type="Object" required="true">
				<help><![CDATA[
					Value to add.
				]]></help>
			</parameter>
			<parameter name="allowoverwrite" type="boolean" required="false">
				<help><![CDATA[
					Whether to allow overwriting a key. Default: False.
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			boolean StructIsEmpty(structure)
		-->
		<function creator="3" name="structisempty" returns="boolean">
			<help><![CDATA[
				Determines whether a structure contains data. 
			]]></help>
			<parameter name="structure" type="Struct" required="true">
				<help><![CDATA[
					Structure to test
				]]></help>
			</parameter>
		</function> 
		
		<!-- 
			Array StructKeyArray(structure)
		-->
		<function creator="3" name="structkeyarray" returns="Array">
			<help><![CDATA[
				Finds the keys in a ColdFusion structure.
				An array of keys; if structure does not exist, ColdFusion 
				throws an exception.
			]]></help>
			<parameter name="structure" type="Struct" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			boolean StructKeyExists(structure, "key")
		-->
		<function creator="3" name="structkeyexists" returns="boolean">
			<help><![CDATA[
				Determines whether a specific key is present in a structure.
			]]></help>
			<parameter name="structure" type="Struct" required="true">
				<help><![CDATA[
					Name of structure to test
				]]></help>
			</parameter>
			<parameter name="key" type="String" required="true">
				<help><![CDATA[
					Key to test
				]]></help>
			</parameter>
		</function> 
		
		<!-- 
			String StructKeyList(structure [, delimiter])
		-->
		<function creator="3" name="structkeylist" returns="String">
			<help><![CDATA[
				Extracts keys from a ColdFusion structure.
			]]></help>
			<parameter name="structure" type="Struct" required="true">
				<help><![CDATA[
					Structure from which to extract a list of keys
				]]></help>
			</parameter>
			<parameter name="delimiter" type="String" required="false">
				<help><![CDATA[
					Character that separates keys in list. Default: comma.
				]]></help>
			</parameter>
		</function> 
		
		<!-- 
			Struct StructNew()
		-->
		<function creator="3" name="structnew" returns="Struct">
			<help><![CDATA[
				Creates a structure.
			]]></help>
		</function> 
		
		<!-- 
			Array StructSort(base, sortType, sortOrder, pathToSubElement)
		-->
		<function creator="3" name="structsort" returns="Array">
			<help><![CDATA[
				Returns a sorted array of the top level keys in a structure. 
				Sorts using alphabetic or numeric sorting, and can sort based 
				on the values of any structure element.
			]]></help>
			<parameter name="base" type="Struct" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="sorttype" type="String" required="true">
				<help><![CDATA[
					* numeric 
					* text: case sensitive Default.
					* textnocase 
				]]></help>
			</parameter>
			<parameter name="sortorder" type="String" required="true">
				<help><![CDATA[
					* asc: ascending (a to z) sort order. Default. 
					* desc: descending (z to a) sort order
				]]></help>
			</parameter>
			<parameter name="pathtosubelement" type="String" required="true">
				<help><![CDATA[
					String or a variable that contains one
				]]></help>
			</parameter>
		</function> 
		
		<!-- 
			boolean StructUpdate(structure, key, value)
		-->
		<function creator="3" name="structupdate" returns="boolean">
			<help><![CDATA[
				Updates a key with a value.
			]]></help>
			<parameter name="structure" type="Strict" required="true">
				<help><![CDATA[
					Structure to update
				]]></help>
			</parameter>
			<parameter name="key" type="String" required="true">
				<help><![CDATA[
					Key, the value of which to update
				]]></help>
			</parameter>
			<parameter name="value" type="Object" required="true">
				<help><![CDATA[
					New value
				]]></help>
			</parameter>
		</function> 
		
		<!-- 
			Numeric Tan(number)
		-->
		<function creator="3" name="tan" returns="Numeric">
			<help><![CDATA[
				Calculates the tangent of an angle that is entered in radians.
			]]></help>
			<parameter name="number" type="Numeric" required="true">
				<help><![CDATA[
					Angle, in radians, for which to calculate the tangent
				]]></help>
			</parameter>
		</function> 
		
		<!-- 
			String TimeFormat(time [, mask ])
		-->
		<function creator="3" name="timeformat" returns="String">
			<help><![CDATA[
				Formats a time value using US English time formatting 
				conventions. If no mask is specified, returns a time value 
				using the hh:mm tt format. For international time formatting,
				see LSTimeFormat.
				[mask]
				h,hh,H,HH: Hours; m,mm: Minutes; s,ss: Seconds;
				l: Milliseconds; t: A or P; tt: AM or PM 
				"short" = h:mm tt; "medium" = h:mm:ss tt
			]]></help>
			<parameter name="time" type="DateTime" required="true">
				<help><![CDATA[
					A date/time value or string to convert		
				]]></help>
			</parameter>
			<parameter name="mask" type="String" required="false">
				<help><![CDATA[
					Masking characters that determine the format		
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String ToBase64(string_or_object[, encoding])
		-->
		<function creator="3" name="tobase64" returns="String">
			<help><![CDATA[
				Calculates the Base64 representation of a string or binary 
				object. The Base64 format uses printable characters, allowing 
				binary data to be sent in forms and e-mail, and stored in a 
				database or file.
			]]></help>
			<parameter name="string_or_object" type="Object" required="true">
				<help><![CDATA[
					A string, the name of a string, or a binary object.
				]]></help>
			</parameter>
			<parameter name="encoding" type="String" required="false">
				<help><![CDATA[
					For a string, defines how characters are represented in a 
					byte array. 
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Binary ToBinary(string_in_Base64 or binary_value)
		-->
		<function creator="3" name="tobinary" returns="Binary">
			<help><![CDATA[
				Calculates the binary representation of Base64-encoded data.
			]]></help>
			<parameter name="base64_or_object" type="Object" required="true">
				<help><![CDATA[
					A string or a variable that contains one:
					* In Base64 format to convert to binary 
					* In binary format to test whether it is valid 
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String ToString(any_value[, encoding])
		-->
		<function creator="3" name="tostring" returns="String">
			<help><![CDATA[
				Converts a value to a string.
			]]></help>
			<parameter name="any_value" type="Object" required="true">
				<help><![CDATA[
					Value to convert to a string
				]]></help>
			</parameter>
			<parameter name="encoding" type="String" required="false">
				<help><![CDATA[
					The character encoding (character set) of the string.
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String Trim(string)
		-->
		<function creator="3" name="trim" returns="String">
			<help><![CDATA[
				Removes leading and trailing spaces from a string.
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
					A string or a variable that contains one
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String UCase(string)
		-->
		<function creator="3" name="ucase" returns="String">
			<help><![CDATA[
				Converts the alphabetic characters in a string to uppercase.			
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
					A string or a variable that contains one
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String URLDecode(urlEncodedString[, charset])
		-->
		<function creator="3" name="urldecode" returns="String">
			<help><![CDATA[
				Decodes a URL-encoded string.
			]]></help>
			<parameter name="urlencodedstring" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
			<parameter name="charset" type="String" required="false">
				<help><![CDATA[
					The character encoding in which the string is encoded.
				]]></help>
			</parameter>
		</function>
		
		
		<!-- 
			String URLEncodedFormat(string [, charset ])
		-->
		<function creator="3" name="urlencodedformat" returns="String">
			<help><![CDATA[
				Generates a URL-encoded string. For example, it replaces spaces
				with %20, and non-alphanumeric characters with equivalent 
				hexadecimal escape sequences. Passes arbitrary strings within a
				URL. 
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
					A string or a variable that contains one
				]]></help>
			</parameter>
			<parameter name="charset" type="String" required="false">
				<help><![CDATA[
					The character encoding in which the string is encoded.
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			URL URLSessionFormat(request_URL)
		-->
		<function creator="3" name="urlsessionformat" returns="URL">
			<help><![CDATA[
				Depending on whether a client computer accepts cookies, this 
				function does the following:
				* If the client does not accept cookies: automatically appends 
					all required client identification information to a URL 
				* If the client accepts cookies: does not append information
			]]></help>
			<parameter name="requesturl" type="URL" required="true">
				<help><![CDATA[
					URL of a ColdFusion page				
				]]></help>
			</parameter>
		</function>
		
		
		<!-- 
			Numeric Val(string)
		-->
		<function creator="3" name="val" returns="Numeric">
			<help><![CDATA[
				Converts numeric characters that occur at the beginning of a 
				string to a number. If conversion fails, returns zero.
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
					A string or a variable that contains one
				]]></help>
			</parameter>
		</function>
		
		
		<!-- 
			String ValueList(query.column [, delimiter ])
		-->
		<function creator="3" name="valuelist" returns="String">
			<help><![CDATA[
				Inserts a delimiter between each value in an executed query. 
				ColdFusion does not evaluate the arguments. 
				A delimited list of the values of each record returned from an 
				executed query
			]]></help>
			<parameter name="column" type="Query.Column" required="true">
				<help><![CDATA[
					Name of an executed query and column. Separate query name 
					and column name with a period.
				]]></help>
			</parameter>
			<parameter name="delimiter" type="String" required="false">
				<help><![CDATA[
					A delimiter character to separate column data items. 
					Default: comma (,).
				]]></help>
			</parameter>
		</function> 
		
		
		<!-- 
			Numeric Week(date)
		-->
		<function creator="3" name="week" returns="Numeric">
			<help><![CDATA[
				From a date/time object, determines the week number within 
				the year. An integer in the range 1-53; the ordinal of the 
				week, within the year.
			]]></help>
			<parameter name="date" type="DateTime" required="true">
				<help><![CDATA[
					A date/time object in the range 100 AD-9999 AD.
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String Wrap(string, limit[, strip])
		-->
		<function creator="3" name="wrap" returns="String">
			<help><![CDATA[
				Wraps text so that each line has a specified maximum number 
				of characters.
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
					String or variable that contains one. The text to wrap.
				]]></help>
			</parameter>
			<parameter name="limit" type="Numeric" required="true">
				<help><![CDATA[
					Positive integer maximum number of characters to allow on 
					a line.
				]]></help>
			</parameter>
			<parameter name="strip" type="boolean" required="false">
				<help><![CDATA[
					whether to remove all existing newline and carriage return 
					characters in the input string with spaces before wrapping 
					the text. Default: False.
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String WriteOutput(string)
		-->
		<function creator="3" name="writeoutput" returns="String">
			<help><![CDATA[
				Appends text to the page-output stream.
				This function writes to the page-output stream regardless of 
				conditions established by the cfsetting tag.
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
					A string, or a variable that contains one
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Numeric XmlChildPos(elem, childName, N)
		-->
		<function creator="3" name="xmlchildpos" returns="Numeric">
			<help><![CDATA[
				Gets the position of a child element within an XML document 
				object.
				The position, in an XmlChildren array, of the Nth child that 
				has the specified name.
			]]></help>
			<parameter name="elem" type="Node" required="true">
				<help><![CDATA[
					XML element within which to search
				]]></help>
			</parameter>
			<parameter name="childname" type="String" required="true">
				<help><![CDATA[
					XML child element for which to search
				]]></help>
			</parameter>
			<parameter name="n" type="Numeric" required="true">
				<help><![CDATA[
					Index of XMLchild element for which to search
				]]></help>
			</parameter>
		</function>
		
		
		<!-- 
			Object XmlElemNew(xmlObj, childName)
		-->
		<function creator="3" name="xmlelemnew" returns="Object">
			<help><![CDATA[
				Creates an XML document object element
			]]></help>
			<parameter name="xmlobj" type="Object" required="true">
				<help><![CDATA[
					The name of an XML object. An XML document or an element.
				]]></help>
			</parameter>
			<parameter name="childname" type="String" required="true">
				<help><![CDATA[
					The name of the element to create. This element becomes a 
					child element of xmlObj in the tree
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String XmlFormat(string)
		-->
		<function creator="3" name="xmlformat" returns="String">
			<help><![CDATA[
				Escapes special XML characters in a string, so that the 
				string is safe to use with XML.		
			]]></help>
			<parameter name="string" type="String" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		
		<!-- 
			Object XmlNew([caseSensitive])
		-->
		<function creator="3" name="xmlnew" returns="Object">
			<help><![CDATA[
				Creates an XML document object.
			]]></help>
			<parameter name="casesensitive" type="boolean" required="false">
				<help><![CDATA[
					Determines how ColdFusion processes the case of XML 
					document object component identifiers
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			Object XmlParse(xmlString [, caseSensitive ] )
		-->
		<function creator="3" name="xmlparse" returns="Object">
			<help><![CDATA[
				Converts an XML document that is represented as a string 
				variable into an XML document object.
			]]></help>
			<parameter name="xmlstring" type="String" required="true">
				<help><![CDATA[
					An XML document object string
				]]></help>
			</parameter>
			<parameter name="casesensitive" type="boolean" required="false">
				<help><![CDATA[
					maintains the case of document elements and attributes
				]]></help>
			</parameter>
		</function>
		
		
		<!-- 
			Array XmlSearch(xmlDoc, xPathString)
		-->
		<function creator="3" name="xmlsearch" returns="Array">
			<help><![CDATA[
			]]></help>
			<parameter name="xmldoc" type="Object" required="true">
				<help><![CDATA[
					XML document object
				]]></help>
			</parameter>
			<parameter name="xpathstring" type="String" required="true">
				<help><![CDATA[
					XPath expression
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String XmlTransform(xmlString | xmlObj, xslString)
		-->
		<function creator="3" name="xmltransform" returns="String">
			<help><![CDATA[
				Applies an Extensible Stylesheet Language Transformation (XSLT)
				to an XML document object that is represented as a string 
				variable. An XSLT converts an XML document to another format 
				or representation by applying an Extensible Stylesheet 
				Language (XSL) stylesheet to it.
			]]></help>
			<parameter name="xmlstring" type="String" required="true">
				<help><![CDATA[
					A string that represents the XML document, or a parsed 
					object representation of it.
				]]></help>
			</parameter>
			<parameter name="xslstring" type="String" required="true">
				<help><![CDATA[
					XSLT transformation to apply.
				]]></help>
			</parameter>
		</function>
		
		
		<!-- 
			Numeric Year(date)
		-->
		<function creator="3" name="year" returns="Numeric">
			<help><![CDATA[
				From a date/time object, gets the year value.			
			]]></help>
			<parameter name="date" type="DateTime" required="true">
				<help><![CDATA[
				]]></help>
			</parameter>
		</function>
		
		<!-- 
			String YesNoFormat(value)
		-->
		<function creator="3" name="yesnoformat" returns="String">
			<help><![CDATA[
				Yes, for a non-zero value; No, otherwise.
			]]></help>
			<parameter name="value" type="Numeric" required="true">
				<help><![CDATA[
					A number or Boolean value
				]]></help>
			</parameter>
		</function>
		
		
		
		<!--
			boolean ArraySort(array, sort_type [, sort_order ])
		-->
		<function creator="3" name="arraysort" returns="boolean">
			<help><![CDATA[
				Sorts array elements numerically or alphanumerically.
			]]></help>
			<parameter name="array" type="array" required="true">
				<help><![CDATA[
					Name of an array
				]]></help>
			</parameter>
			<parameter name="sort_type" type="string" required="true">
				<help><![CDATA[
					numeric: sorts numbers 
					text: sorts text alphabetically, taking case into account 
					(also known as case sensitive). All letters of one case 
					precede the first letter of the other case: 
						- aabzABZ, if sort_order = "asc" (ascending sort)
						- ZBAzbaa, if sort_order = "desc" (descending sort)

					textnocase: sorts text alphabetically, without regard to 
					case (also known as case-insensitive). A letter in varying 
					cases precedes the next letter: 
 						- aAaBbBzzZ, in an ascending sort; preserves original 
 							intra-letter order 
						- ZzzBbBaAa, in a descending sort; reverses original 
							intra-letter order
				]]></help>
				<values>
					<value option="numeric" />
					<value option="text" />
					<value option="textnocase" />
				</values>
			</parameter>
			<parameter name="sort_order" type="string" required="false">
				<help><![CDATA[
					asc: ascending sort order. Default. 
 						- aabzABZ or aAaBbBzzZ, depending on value of sort_type, 
 							for letters
						- from smaller to larger, for numbers 

					desc: descending sort order. 
						- ZBAzbaa or ZzzBbBaAa, depending on value of sort_type, 
							for letters
						- from larger to smaller, for numbers
				]]></help>
				<values>
					<value option="asc" />
					<value option="desc" />
				</values>
			</parameter>
		</function>
		
	</functions>
</dictionary>
