<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Creating a search tool for ColdFusion applications</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001306.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001308.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Creating a search tool for ColdFusion applications</h1>
<p>There are three main tasks in creating a search tool for your ColdFusion application:</p>
<ol>
<li>
   Create a collection.
</li>
<li>
   Index the collection.
</li>
<li>
   Design a search interface.
</li>
</ol>
<p>You can perform each task programmatically--that is, by writing CFML code. Alternatively, you can use the ColdFusion&#160;MX Administrator to create and index a collection.</p>
<p>This chapter presents the noncoding methods for developing a search tool, followed by code examples that perform the same task. </p>
<h2><a name="wp1142586"></a>Creating a collection with the ColdFusion&#160;MX Administrator</h2>
<p>Use the following procedure to quickly create a collection with the ColdFusion&#160;MX Administrator:</p>
<h4>To create a collection with the ColdFusion&#160;MX Administrator:</h4>
<ol>
<li>
   In the ColdFusion&#160;MX Administrator, select Data &amp; Services &gt; Verity Collections.
<p>The Verity Collections page appears.</p>
</li>
<li>
   Enter a name for the collection; for example, DemoDocs.
</li>
<li>
   Enter a path for the directory location of the new collection; for example, C:\CFusionMX7\verity\collections\. 
<p>By default in the server configuration, ColdFusion stores collections in <i>cf_root</i>\verity\collections\ in Windows and in <i>cf_root</i>/verity/collections on UNIX. In the multiserver configuration, the default location for collections is <i>cf_webapp_root</i>/verity/collections. In the J2EE configuration, the default location for collections is <i>verity_root</i>/verity/collections, where <i>verity_root</i> is the directory in which you installed Verity.</p>
<p><strong>Note: </strong>This is the location for the collection, not for the files that you will search.</p></li>
<li>
   (Optional) Select a language other than English for the collection from the Language drop-down list.
<p>For more information on selecting a language, see <a href="00001306.htm#1200510">Specifying a language</a>.</p>
</li>
<li>
   (Optional) Select Enable Category Support to create a Verity Parametric collection.
<p>For more information on using categories, see <a href="00001311.htm#1193448">Narrowing searches using categories</a>.</p>
</li>
<li>
   Click Create Collection.
<p>The name and full path of the new collection appears in the list of Verity Collections.</p>
</li>
</ol>
<p>You have successfully created an empty collection. A collection becomes populated with data when you index it. For more information, see the next section, <a href="00001307.htm#1199917">About indexing a collection</a>.</p>
<h2><a name="wp1199917"></a>About indexing a collection</h2>
<p>In order for information to be searched, it must be indexed. Indexing extracts both meaning and structure from unstructured information by indexing each document that you specify into a separate Verity collection that contains a complete list of all the words used in a given document along with metadata about that document. Indexed collections include information such as word proximity, metadata about physical file system addresses, and URLs of documents.</p>
<p>When you index databases and other record sets that you generated using a query, Verity creates a collection that normalizes both the structured and unstructured data. Search requests then check these collections rather than scanning the actual documents and database fields. This provides a faster search of information, regardless of the file type and whether the source is structured or unstructured.</p>
<p>Just as with creating a collection, you can index a collection either programmatically or using the ColdFusion&#160;MX Administrator. Use the following guidelines to determine which method to use:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Use the Administrator
    </th>
    <th>
Use the cfindex tag 
    </th>
  </tr>
  <tr>
    <td>
<p>To index document files</p>
    </td>
    <td>
<p>To index ColdFusion query results</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>When the collection does not require frequent updates</p>
    </td>
    <td>
<p>When the collection requires frequent updates</p>
    </td>
  </tr>
  <tr>
    <td>
<p>To create the collection without writing any CFML code</p>
    </td>
    <td>
<p>To dynamically update a collection from a ColdFusion application page</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>To create a collection once</p>
    </td>
    <td>
<p>When the collection requires updating by others</p>
    </td>
  </tr>
</table>

<p>You can use <code>cfcollection</code> <code>action=&quot;optimize&quot;</code> if you notice that searches on a collection take longer than they did previously.</p>
<h3><a name="wp1178572"></a>Updating an index</h3>
<p>Documents are modified frequently in many user environments. After you index your documents, any changes that you make are not reflected in subsequent Verity searches until you re-index the collection. Depending on your environment, you can create a scheduled task to automatically keep your indexes current. For more information on scheduled tasks, see <i>Configuring and Administering ColdFusion&#160;MX</i>.</p>
<h2><a name="wp1150771"></a>Creating a ColdFusion search tool programmatically</h2>
<p>You can create a Verity search tool for your ColdFusion application in CFML. Although writing CFML code can take more development time than using these tools, there are situations in which writing code is the preferred development method.</p>
<h3><a name="wp1182070"></a>Creating a collection with the cfcollection tag</h3>
<p>The following are cases in which you might prefer using the <a href="00000230.htm#1097667"><code>cfcollection</code></a> tag rather than the ColdFusion&#160;MX Administrator to create a collection:</p>
<ul>
<li>
   You want your ColdFusion application to be able to create, delete, and maintain a collection.
</li>
<li>
   You do not want to expose the ColdFusion&#160;MX Administrator to users.
</li>
<li>
   You want to create indexes on servers that you cannot access directly; for example, if you use a hosting company.
</li>
</ul>
<p>When using the <code>cfcollection</code> tag, you can specify the same attributes as in the ColdFusion&#160;MX Administrator:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Attribute
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<p>action</p>
    </td>
    <td>
<p>(Optional) The action to perform on the collection (create, delete, repair, or optimize). The default value for the <code>action</code> attribute is <code>list</code>. For more information, see <a href="00000230.htm#1097667"><code>cfcollection</code></a> in <i>CFML Reference</i>.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>collection</p>
    </td>
    <td>
<p>The name of the new collection, or the name of a collection upon which you will perform an action.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>path</p>
    </td>
    <td>
<p>The location for the Verity collection.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>language</p>
    </td>
    <td>
<p>language</p>
    </td>
  </tr>
  <tr>
    <td>
<p>categories</p>
    </td>
    <td>
<p>(Optional) Specifies that <code>cfcollection</code> create a Verity Parametric Index (PI) for this collection. By default, the categories attribute is set to <code>False</code>. To create a collection using categories specify <code>Yes</code>.</p>
    </td>
  </tr>
</table>

<p>You can create a collection by directly assigning a value to the <code>collection</code> attribute of the <code>cfcollection</code> tag, as shown in the following code:</p>
<pre>&lt;cfcollection action = &quot;create&quot;
   collection = &quot;a_new_collection&quot;
   path = &quot;c:\CFusionMX7\verity\collections\&quot;&gt;
</pre><p>If you want your users to be able to dynamically supply the name and location for a new collection, use the following procedures to create form and action pages.</p>
<h4>To create a simple collection form page:</h4>
<ol>
<li>
   Create a ColdFusion page with the following content:
<pre>
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Collection Creation Input Form&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;h2&gt;Specify a collection&lt;/h2&gt;
&lt;form action=&quot;collection_create_action.cfm&quot; method=&quot;POST&quot;&gt;
	
	&lt;p&gt;Collection name: 
	&lt;input type=&quot;text&quot; name=&quot;CollectionName&quot; size=&quot;25&quot;&gt;&lt;/p&gt;
	
	&lt;p&gt;What do you want to do with the collection?&lt;/p&gt;
	&lt;input type=&quot;radio&quot; 
		name=&quot;CollectionAction&quot; 
		value=&quot;Create&quot; checked&gt;Create&lt;br&gt;
	&lt;input type=&quot;radio&quot; 
		name=&quot;CollectionAction&quot; 
		value=&quot;Optimize&quot;&gt;Optimize&lt;br&gt;
	&lt;input type=&quot;submit&quot; 
		name=&quot;submit&quot; 
		value=&quot;Submit&quot;&gt; 
&lt;/form&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>
</li>
<li>
   Save the file as collection_create_form.cfm in the myapps directory under the web root directory.
</li>
</ol>
<p><strong>Note: </strong>The form will not work until you write an action page for it, which is the next procedure.</p><h4>To create a collection action page:</h4>
<ol>
<li>
   Create a ColdFusion page with the following content:
<pre>
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;cfcollection&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;h2&gt;Collection creation&lt;/h2&gt;

&lt;cfoutput&gt;

	&lt;cfswitch expression=#Form.collectionaction#&gt;
		&lt;cfcase value=&quot;Create&quot;&gt;
			&lt;cfcollection action=&quot;Create&quot;
			collection=&quot;#Form.CollectionName#&quot;
			path=&quot;c:\CFusionMX7\verity\collections\&quot;&gt;
			&lt;p&gt;The collection #Form.CollectionName# is created.&lt;/p&gt;
		&lt;/cfcase&gt;

		&lt;cfcase value=&quot;Repair&quot;&gt;
			&lt;cfcollection action=&quot;Repair&quot;
			collection=&quot;#Form.CollectionName#&quot;&gt;
			&lt;p&gt;The collection #Form.CollectionName# is repaired.&lt;/p&gt;
		&lt;/cfcase&gt;

		&lt;cfcase value=&quot;Optimize&quot;&gt;
			&lt;cfcollection action=&quot;Optimize&quot;
			collection=&quot;#Form.CollectionName#&quot;&gt;
			&lt;p&gt;The collection #Form.CollectionName# is optimized.&lt;/p&gt;
		&lt;/cfcase&gt;

		&lt;cfcase value=&quot;Delete&quot;&gt;
			&lt;cfcollection action=&quot;Delete&quot;
			collection=&quot;#Form.CollectionName#&quot;&gt;
			&lt;p&gt;The collection is deleted.&lt;/p&gt;
		&lt;/cfcase&gt;
	&lt;/cfswitch&gt;
&lt;/cfoutput&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>
</li>
<li>
   Save the file as collection_create_action.cfm in the myapps directory under the web root directory.
</li>
<li>
   In the web browser, enter the following URL to display the form page:
<p><strong>http://hostname:portnumber/myapps/collection_create_form.cfm</strong></p>
</li>
<li>
   Enter a collection name; for example, CodeColl.
</li>
<li>
   Verify that Create is selected and submit the form.
</li>
<li>
   (Optional) In the ColdFusion&#160;MX Administrator, reload the Verity Collections page.
</li>
</ol>
<p>The name and full path of the new collection appear in the list of Verity Collections.</p>
<p>You successfully created a collection, named CodeColl, that currently has no data. For information on indexing your collection using CFML, see <a href="00001307.htm#1179041">Indexing a collection using the cfindex tag</a>.</p>
<h3><a name="wp1179041"></a>Indexing a collection using the cfindex tag</h3>
<p>You can index a collection in CFML using the <a href="00000278.htm#1100286"><code>cfindex</code></a> tag, which eliminates the need to use the ColdFusion&#160;MX Administrator. The <code>cfindex</code> tag populates the collection with metadata that is then used to retrieve search results. You can use the <code>cfindex</code> tag to index either physical files (documents stored within your website's root folder), or the results of a database query. </p>
<p><strong>Note: </strong>Prior to indexing a collection, you must create a Verity collection using either the ColdFusion MX Administrator, or the <code>cfcollection</code> tag. For more information, see <a href="00001307.htm#1142586">Creating a collection with the ColdFusion&#160;MX Administrator</a>, or <a href="00001307.htm#1182070">Creating a collection with the cfcollection tag</a>.</p><p>When using the <code>cfindex</code> tag, the following attributes correspond to the values that you would enter using the ColdFusion&#160;MX Administrator to index a collection:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Attribute
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<pre>collection
</pre>    </td>
    <td>
<p>The name of the collection.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<pre>action
</pre>    </td>
    <td>
<p>Specifies what the <code>cfindex</code> tag should do to the collection. The default <code>action</code> is to update the collection, which generates a new index. Other <code>actions</code> are to delete, purge, or refresh the collection.</p>
    </td>
  </tr>
  <tr>
    <td>
<pre>type
</pre>    </td>
    <td>
<p>Specifies the type of files or other data to which the <code>cfindex</code> tag applies the specified action. The value you assign to the <code>type</code> attribute determines the value to use with the <code>key</code> attribute (see the following list). When you enter a value for the <code>type</code> attribute, <code>cfindex</code> expects a corresponding value in the <code>key</code> attribute. For example, if you specify <code>type=file</code>, <code>cfindex</code> expects a directory path and filename for the <code>key</code> attribute. </p>
<p>The <code>type</code> attribute has the following possible values:</p>
<ul>
<li>
   <code>file</code>&#160;Specifies a directory path and filename for the file that you are indexing.
</li>
<li>
   <code>path</code>&#160;Specifies a directory path that contains the files that you are indexing.
</li>
<li>
   <code>custom</code>&#160;Specifies custom data, such as a record set returned from a query.
</li>
</ul>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<pre>extensions
</pre>    </td>
    <td>
<p>(Optional) The delimited list of file extensions that ColdFusion uses to index files if <code>type=&quot;path&quot;</code><code>.</code></p>
    </td>
  </tr>
  <tr>
    <td>
<pre>key
</pre>    </td>
    <td>
<p>The value that you specify for the <code>key</code> attribute depends on the value set for the <code>type</code> attribute: </p>
<ul>
<li>
   If <code>type=&quot;file&quot;</code>, the <code>key</code> is the directory path and filename for the file you are indexing<code>.</code>
</li>
<li>
   If <code>type=&quot;path&quot;</code>, the <code>key</code> is the directory path that contains the files you are indexing<code>.</code>
</li>
<li>
   If <code>type=&quot;custom&quot;</code>, the <code>key</code> is a unique identifier specifying the location of the documents you are indexing; for example, the URL of a specific web page or website whose contents you want to index<code>.</code> If you are indexing data returned by a query (from a database for example), the <code>key</code> is the name of the record set column that contains the primary key. 
</li>
</ul>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<pre>URLpath
</pre>    </td>
    <td>
<p>(Optional) The URL path for files if <code>type=&quot;file&quot;</code> and <code>type=&quot;path&quot;</code>. When the collection is searched with the <a href="00000330.htm#1103106"><code>cfsearch</code></a> tag, ColdFusion&#160;MX works as follows:</p>
<ul>
<li>
   <code>type=&quot;file&quot;</code>&#160;The <code>URLpath</code> attribute contains the URL to the file.
</li>
<li>
   <code>type=&quot;path&quot;</code>&#160;The path name is automatically prefixed to filenames and returned as the <code>URLpath</code> attribute.
</li>
</ul>
    </td>
  </tr>
  <tr>
    <td>
<pre>recurse
</pre>    </td>
    <td>
<p>(Optional) <code>Yes</code> or <code>No</code>. If <code>type = &quot;path&quot;</code> , <code>Yes</code> specifies that directories below the path specified in the key attribute are included in the indexing operation. </p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<pre>language
</pre>    </td>
    <td>
<p>(Optional) The language of the collection. The default is English Basic.</p>
<p>To learn more about support for languages, see <a href="00001306.htm#1200510">Specifying a language</a>.</p>
    </td>
  </tr>
</table>

<p>You can use form and action pages similar to the following examples to select and index a collection.</p>
<h4>To select which collection to index: </h4>
<ol>
<li>
   Create a ColdFusion page with the following content:
<pre>
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Select the Collection to Index&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;

&lt;h2&gt;Specify the index you want to build&lt;/h2&gt;

&lt;form method=&quot;Post&quot; action=&quot;collection_index_action.cfm&quot;&gt;
	&lt;p&gt;Enter the collection you want to index:
	&lt;input type=&quot;text&quot; name=&quot;IndexColl&quot; size=&quot;25&quot; maxLength=&quot;35&quot;&gt;&lt;/p&gt;
	&lt;p&gt;Enter the location of the files in the collection:
	&lt;input type=&quot;text&quot; name=&quot;IndexDir&quot; size=&quot;50&quot; maxLength=&quot;100&quot;&gt;&lt;/p&gt;
	&lt;p&gt;Enter a Return URL to prepend to all indexed files:
	&lt;input type=&quot;text&quot; name=&quot;urlPrefix&quot; size=&quot;80&quot; maxLength=&quot;100&quot;&gt;&lt;/p&gt;

	&lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;Index&quot;&gt; 

&lt;/form&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>
</li>
<li>
   Save the file as collection_index_form.cfm in the myapps directory under the <i>web_root</i>.
</li>
</ol>
<p><strong>Note: </strong>The form does not work until you write an action page for it, which is the next procedure.</p><h4>To use cfindex to index a collection:</h4>
<ol>
<li>
   Create a ColdFusion page with the following content:
<pre>
&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Creating Index&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;h2&gt;Indexing Complete&lt;/h2&gt;

&lt;cfindex collection=&quot;#Form.IndexColl#&quot;
	action=&quot;refresh&quot;
	extensions=&quot;.htm, .html, .xls, .txt, .mif, .doc&quot;
	key=&quot;#Form.IndexDir#&quot;
	type=&quot;path&quot;
	urlpath=&quot;#Form.urlPrefix#&quot;
	recurse=&quot;Yes&quot;
	language=&quot;English&quot;&gt;

&lt;cfoutput&gt;
	The collection #Form.IndexColl# has been indexed.
&lt;/cfoutput&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>
</li>
<li>
   Save the file as collection_index_action.cfm.
</li>
<li>
   In the web browser, enter the following URL to display the form page:
<p><strong>http://</strong>hostname:portnumber<strong>/myapps/collection_index_form.cfm</strong></p>
</li>
<li>
   Enter a collection name; for example, CodeColl.
</li>
<li>
   Enter a file location; for example, C:\CFusionMX7\wwwroot\vw_files.
</li>
<li>
   Enter a URL prefix; for example, http://localhost:8500/vw_files (assuming that you are using the built-in web server).
</li>
<li>
   Click Index.
<p>A confirmation message appears on successful completion.</p>
</li>
</ol>
<p><strong>Note: </strong>For information about using the <a href="00000278.htm#1100286"><code>cfindex</code></a> tag with a database to index a collection, see <a href="00001316.htm#1182136">Working with data returned from a query</a>.</p><h3><a name="wp1152584"></a>Indexing a collection with the ColdFusion&#160;MX Administrator</h3>
<p>As an alternative to programmatically indexing a collection, use the following procedure to index a collection with the ColdFusion&#160;MX Administrator.</p>
<h4>To use ColdFusion&#160;MX Administrator to index a collection:</h4>
<ol>
<li>
   In the list of Verity Collections, select a collection name; for example, CodeColl.
</li>
<li>
   Click Index to open the index page.
</li>
<li>
   For File Extensions, enter the types of files to index. Use a comma to separate multiple file types; for example, .htm, .html, .xls, .txt, .mif, .doc.
</li>
<li>
   Enter (or Browse to) the directory path that contains the files to be indexed; for example, C:\Inetpub\wwwroot\vw_files.
</li>
<li>
   (Optional) To extend the indexing operation to all directories below the selected path, select the Recursively index subdirectories check box.
</li>
<li>
   (Optional) Enter a Return URL to prepend to all indexed files. 
<p>This step lets you create a link to any of the files in the index; for example, http://127.0.0.1/vw_files/.</p>
</li>
<li>
   (Optional) Select a language other than English.
<p>For more information, see <a href="00001306.htm#1200510">Specifying a language</a>.</p>
</li>
<li>
   Click Submit Changes. 
<p>On completion, the Verity Collections page appears.</p>
<p><strong>Note: </strong>The time required to generate the index depends on the number and size of the selected files in the path.</p></li>
</ol>
<p>This interface lets you easily build a very specific index based on the file extension and path information you enter. In most cases, you do not need to change your server file structures to accommodate the generation of indices.</p>


<hr />
<p align="right"><p align="right"><a href="00001306.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001308.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001307.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



