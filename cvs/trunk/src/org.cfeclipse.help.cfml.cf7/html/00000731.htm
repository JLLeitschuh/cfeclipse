<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>getOriginatorID</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000730.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000732.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>getOriginatorID</h1>
<h4><a name="wp1174666"></a>Description</h4>
<p>Identifies the originator of an incoming message. Some gateway types also use this field for the destination of an outgoing message.</p>
<h4><a name="wp1174668"></a>Category</h4>
<p>Event Gateway Development</p>
<h4><a name="wp1174670"></a>Syntax</h4>
<pre>String getOriginatorID()
</pre><h4><a name="wp1174672"></a>See also</h4>
<p><a href="00000737.htm#1176586"><code>setOriginatorID</code></a>, <a href="00000744.htm#1182144">CFML CFEvent structure</a>, <a href="00001688.htm#117767">CFEvent class</a> in <a href="00001684.htm#146437">Creating Custom Event Gateways</a> in <i>ColdFusion MX Developer's Guide</i></p>
<h4><a name="wp1174685"></a>Returns</h4>
<p>The protocol-specific identifier of the message originator, or null.</p>
<h4><a name="wp1174689"></a>Example</h4>
<p>The <code>outgoingMessage</code> method of the SocketGateway example gateway uses the getOriginatorID method to determine the destination of an outgoing message. This way, a listener CFC that sends a response back to the originator does not have to explicitly set a destination in the return variable. If the field is empty, (as it is in messages sent by the CFML <code>SendGatewayMessage</code> function) the gateway tries to get the destination from the <code>CFevent</code> data field.</p>
<pre>public String outgoingMessage(coldfusion.eventgateway.CFEvent cfmsg)
{
   String retcode=&quot;ok&quot;;
   // Get the table of data returned from the event handler
   Map data = cfmsg.getData();
   String message = (String) data.get(&quot;MESSAGE&quot;);
   // find the right socket to write to from the socketRegistry hashtable
<strong>   if (cfmsg.getOriginatorID() != null)</strong>
<strong>      ((SocketServerThread)socketRegistry.get(cfmsg.getOriginatorID())).</strong>
<strong>         writeOutput(message);</strong>
   else if (data.get(&quot;OriginatorID&quot;) != null)
      ((SocketServerThread)socketRegistry.get(data.get(&quot;OriginatorID&quot;))).
         writeOutput(message);
   else
   {
      System.out.println(&quot;cannot send outgoing message. OriginatorID is not
            available.&quot;);
      retcode=&quot;failed&quot;;
   }
   return retcode;
}
</pre>

<hr />
<p align="right"><p align="right"><a href="00000730.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000732.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000731.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



