<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>About regular expressions</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000980.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000982.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>About regular expressions</h1>
<p>In traditional string matching, as used by the ColdFusion <a href="00000462.htm#1104451"><code>Find</code></a> and <a href="00000611.htm#135527"><code>Replace</code></a> functions, you provide the string pattern to search for and the string to search. The following example searches a string for the pattern &quot;&#160;BIG&#160;&quot; and returns a string index if found. The <i>string index</i> is the location in the search string where the string pattern begins.</p>
<pre>&lt;cfset IndexOfOccurrence=Find(&quot;<strong> BIG </strong>&quot;, &quot;Some BIG string&quot;)&gt;
&lt;!--- The value of IndexOfOccurrence is 5 ---&gt;
</pre><p>You must provide the exact string pattern to match. If the exact pattern is not found, <code>Find</code> returns an index of 0. Because you must specify the exact string pattern to match, matches for dynamic data can be very difficult, if not impossible, to construct. </p>
<p>The next example uses a regular expression to perform the same search. This example searches for the first occurrence in the search string of any string pattern that consists entirely of uppercase letters enclosed by spaces:</p>
<pre>&lt;cfset IndexOfOccurrence=<strong>REFind</strong>(&quot;<strong> [A-Z]+ </strong>&quot;, &quot;Some BIG string&quot;)&gt;
&lt;!--- The value of IndexOfOccurrence is 5 ---&gt;
</pre><p>The regular expression &quot; [A-Z]+ &quot; matches any string pattern consisting of a leading space, followed by any number of uppercase letters, followed by a trailing space. Therefore, this regular expression matches the string &quot;&#160;BIG&#160;&quot; and any string of uppercase letters enclosed in spaces. </p>
<p>By default, the matching of regular expressions is case-sensitive. You can use the case-insensitive functions, <a href="00000607.htm#135225"><code>REFindNoCase</code></a> and <a href="00000615.htm#135829"><code>REReplaceNoCase</code></a>, for case-insensitive matching.</p>
<p>Because you often process large amounts of dynamic textual data, regular expressions are invaluable in writing complex ColdFusion applications.</p>
<h2><a name="wp1107639"></a>Using ColdFusion regular expression functions</h2>
<p>ColdFusion supplies four functions that work with regular expressions:</p>
<ul>
<li>
   <a href="00000606.htm#135102"><code>REFind</code></a>
</li>
<li>
   <a href="00000607.htm#135225"><code>REFindNoCase</code></a>
</li>
<li>
   <a href="00000614.htm#135742"><code>REReplace</code></a>
</li>
<li>
   <a href="00000615.htm#135829"><code>REReplaceNoCase</code></a>
</li>
</ul>
<p><code>REFind</code> and <code>REFindNoCase</code> use a regular expression to search a string for a pattern and return the string index where it finds the pattern. For example, the following function returns the index of the first instance of the string &quot; BIG &quot;:</p>
<pre>&lt;cfset IndexOfOccurrence=REFind(&quot;<strong> BIG </strong>&quot;, &quot;Some BIG BIG string&quot;)&gt;
&lt;!--- The value of IndexOfOccurrence is 5 ---&gt;
</pre><p>To find the next occurrence of the string &quot; BIG &quot;, you must call the <code>REFind</code> function a second time. For an example of iterating over a search string to find all occurrences of the regular expression, see <a href="00000990.htm#1099114">Returning matched subexpressions</a>.</p>
<p><code>REReplace</code> and <code>REReplaceNoCase</code> use regular expressions to search through a string and replace the string pattern that matches the regular expression with another string. You can use these functions to replace the first match, or to replace all matches. </p>
<p>For detailed descriptions of the ColdFusion functions that use regular expressions, see <i>CFML Reference</i>.</p>
<h2><a name="wp1104510"></a>Basic regular expression syntax</h2>
<p>The simplest regular expression contains only a literal characters. The literal characters must match exactly the text being searched. For example, you can use the regular expression function <a href="00000606.htm#135102"><code>REFind</code></a> to find the string pattern &quot; BIG &quot;, just as you can with the <code>Find</code> function: </p>
<pre>&lt;cfset IndexOfOccurrence=<strong>REFind</strong>(&quot;<strong> BIG </strong>&quot;, &quot;Some BIG string&quot;)&gt;
&lt;!--- The value of IndexOfOccurrence is 5 ---&gt;
</pre><p>In this example, <code>REFind</code> must match the exact string pattern &quot; BIG &quot;. </p>
<p>To use the full power of regular expressions, combine literal characters with character sets and special characters, as in the following example: </p>
<pre>&lt;cfset IndexOfOccurrence=REFind(&quot;<strong> [A-Z]+ </strong>&quot;, &quot;Some BIG string&quot;)&gt;
&lt;!--- The value of IndexOfOccurrence is 5 ---&gt;
</pre><p>The literal characters of the regular expression consists of the space characters at the beginning and end of the regular expression. The character set consists of that part of the regular expression in square brackets. This character set specifies to find a single uppercase letter from A to Z, inclusive. The plus sign (+) after the square brackets is a special character specifying to find one or more occurrences of the character set.</p>
<p>If you removed the + from the regular expression in the previous example, &quot;&#160;[A-Z]&#160;&quot; matches a literal space, followed by any single uppercase letter, followed by a single space. This regular expression matches &quot;&#160;B&#160;&quot; but not &quot;&#160;BIG&#160;&quot;. The <code>REFind</code> function returns 0 for the regular expression, meaning that it did not find a match. </p>
<p>You can construct very complicated regular expressions containing literal characters, character sets, and special characters. Like any programming language, the more you work with regular expressions, the more you can accomplish with them. The examples in this section are fairly basic. For more examples, see <a href="00000991.htm#1143849">Regular expression examples</a>.</p>


<hr />
<p align="right"><p align="right"><a href="00000980.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000982.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000981.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



