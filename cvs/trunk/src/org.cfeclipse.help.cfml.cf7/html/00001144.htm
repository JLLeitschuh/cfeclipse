<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Using the cfthrow tag</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001143.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001145.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Using the cfthrow tag</h1>
<p>You can use the <a href="00000343.htm#2773591"><code>cfthrow</code></a> tag to raise your own, custom exceptions. When you use the <code>cfthrow</code> tag, you specify any or all of the following information:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Attribute
    </th>
    <th>
Meaning
    </th>
  </tr>
  <tr>
    <td>
<p>type</p>
    </td>
    <td>
<p>The type of error. It can be a custom type that has meaning only to your application, such as InvalidProductCode. You can also specify Application, the default type. You cannot use any of the predefined ColdFusion error types, such as Database or MissingTemplate.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>message</p>
    </td>
    <td>
<p>A brief text message indicating the error.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>detail</p>
    </td>
    <td>
<p>A more detailed text message describing the error.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>errorCode</p>
    </td>
    <td>
<p>An error code that is meaningful to the application. This field is useful if the application uses numeric error codes.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>extendedInfo</p>
    </td>
    <td>
<p>Any additional information of use to the application.</p>
    </td>
  </tr>
</table>

<p>All of these values are optional. You access the attribute values in <a href="00000225.htm#3395038"><code>cfcatch</code></a> blocks and Exception type error pages by prefixing the attribute with either <code>cfcatch</code> or <code>error</code>, as in <code>cfcatch.extendedInfo</code>. The default ColdFusion error handler displays the message and detail values in the Message pane and the remaining values in the Error Diagnostic Information pane.</p>
<h3><a name="wp1133275"></a>Catching and displaying thrown errors</h3>
<p>The <code>cfcatch</code> tag catches a custom exception when you use any of the following values for the <code>cfcatch</code> <code>type</code> attribute: </p>
<ul>
<li>
   The custom exception type specified in the <code>cfthrow</code> tag.
</li>
<li>
   A custom exception type that hierarchically matches the initial portion of the type specified in the <code>cfthrow</code> tag. For more information, see the next section, <a href="00001144.htm#1096535">Custom error type name hierarchy</a>.
</li>
<li>
   <code>Application</code>, which matches an exception that is thrown with the <code>Application</code> <code>type</code> attribute or with no <code>type</code> attribute.
</li>
<li>
   <code>Any</code>, which matches any exception that is not caught by a more specific <code>cfcatch</code> tag.
</li>
</ul>
<p>Similarly, if you specify any of these types in a <a href="00000242.htm#2022557"><code>cferror</code></a> tag, the specified error page will display information about the thrown error.</p>
<p>Because the <code>cfthrow</code> tag generates an exception, a Request error handler or the Site-wide error handler can also display these errors.</p>
<h3><a name="wp1096535"></a>Custom error type name hierarchy</h3>
<p>You can name custom exception types using a method that is similar to Java class naming conventions: domain name in reverse order, followed by project identifiers, as in the following example:</p>
<pre>&lt;cfthrow
   type=&quot;com.myCompany.myApp.Invalid_field.codeValue&quot;
   errorcode=&quot;Dodge14B&quot;&gt;
</pre><p>This fully qualified naming method is not required; you can use shorter naming rules, for example, just myApp.Invalid_field.codeValue, or even codeValue. </p>
<p>This naming method is <i>not</i> just a convention, however; ColdFusion&#160;MX uses the naming hierarchy to select from a possible hierarchy of error handlers. For example, assume you use the following <code>cfthrow</code> statement:</p>
<pre>&lt;cfthrow type=&quot;MyApp.BusinessRuleException.InvalidAccount&quot;&gt;
</pre><p>Any of the following <code>cfcatch</code> error handlers would handle this error:</p>
<pre>&lt;<code>cfcatch</code> <code>type</code>=&quot;MyApp.BusinessRuleException.InvalidAccount&quot;&gt;
&lt;<code>cfcatch</code> <code>type</code>=&quot;MyApp.BusinessRuleException&quot;&gt;
&lt;<code>cfcatch</code> <code>type</code>=&quot;MyApp&quot;&gt;
</pre><p>The handler that most exactly matches handles the error. Therefore, in this case, the <code>MyApp.BusinessRuleException.InvalidAccount</code> handler gets invoked. However, if you used the following <code>cfthrow</code> tag:</p>
<pre>&lt;cfthrow type=&quot;MyApp.BusinessRuleException.InvalidVendorCode
</pre><p>the <code>MyApp.BusinessRuleException</code> handler receives the error.</p>
<p>The type comparison is no case-sensitive. </p>
<h3><a name="wp1131581"></a>When to use the cfthrow tag</h3>
<p>Use the <code>cfthrow</code> tag when your application can identify and handle application-specific errors. One typical use for the <code>cfthrow</code> tag is in implementing custom data validation. The <code>cfthrow</code> tag is also useful for throwing errors from a custom tag page to the calling page. </p>
<p>For example, on a form action page or custom tag used to set a password, the application can determine whether the password entered is a minimum length, or contains both letters and number, and throw an error with a message that indicates the password rule that was broken. The <code>cfcatch</code> block handles the error and tells the user how to correct the problem.</p>


<hr />
<p align="right"><p align="right"><a href="00001143.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001145.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001144.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



