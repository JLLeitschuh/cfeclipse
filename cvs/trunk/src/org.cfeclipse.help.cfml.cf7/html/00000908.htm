<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Conversion between types</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000907.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000909.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Conversion between types</h1>
<p>Although the expression evaluation mechanism in ColdFusion is very powerful, it cannot automatically convert all data. For example, the expression <code>&quot;eight&quot; * 10</code> produces an error because ColdFusion cannot convert the string &quot;eight&quot; to the number 8. Therefore, you must understand the rules for conversion between data types.</p>
<p>The following table explains how conversions are performed. The first column shows values to convert. The remaining columns show the result of conversion to the listed data type.</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Value
    </th>
    <th>
As Boolean
    </th>
    <th>
As number
    </th>
    <th>
As date-time
    </th>
    <th>
As string
    </th>
  </tr>
  <tr>
    <td>
<p>&quot;Yes&quot;</p>
    </td>
    <td>
<p>True</p>
    </td>
    <td>
<p>1</p>
    </td>
    <td>
<p>Error</p>
    </td>
    <td>
<p>&quot;Yes&quot;</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>&quot;No&quot;</p>
    </td>
    <td>
<p>False</p>
    </td>
    <td>
<p>0</p>
    </td>
    <td>
<p>Error</p>
    </td>
    <td>
<p>&quot;No&quot;</p>
    </td>
  </tr>
  <tr>
    <td>
<p>True</p>
    </td>
    <td>
<p>True</p>
    </td>
    <td>
<p>1</p>
    </td>
    <td>
<p>Error</p>
    </td>
    <td>
<p>&quot;Yes&quot;</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>False</p>
    </td>
    <td>
<p>False</p>
    </td>
    <td>
<p>0</p>
    </td>
    <td>
<p>Error</p>
    </td>
    <td>
<p>&quot;No&quot;</p>
    </td>
  </tr>
  <tr>
    <td>
<p>Number</p>
    </td>
    <td>
<p>True if Number is not 0; False otherwise.</p>
    </td>
    <td>
<p>Number</p>
    </td>
    <td>
<p>See &quot;Date-time values&quot; earlier in this chapter.</p>
    </td>
    <td>
<p>String representation of the number (for example, &quot;8&quot;).</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>String</p>
    </td>
    <td>
<p>If &quot;Yes&quot;, True</p>
<p>If &quot;No&quot;, False</p>
<p>If it can be converted to 0, False</p>
<p>If it can be converted to any other number, True</p>
    </td>
    <td>
<p>If it represents a number (for example, &quot;1,000&quot; or &quot;12.36E-12&quot;), it is converted to the corresponding number. If it represents a date-time (see next column), it is converted to the numeric value of the corresponding date-time object.</p>
    </td>
    <td>
<p>If it is an ODBC date, time, or timestamp (for example &quot;{ts &#39;2001-06-14 11:30:13&#39;}&quot;, or if it is expressed in a standard U.S. date or time format, including the use of full or abbreviated month names, it is converted to the corresponding date-time value. </p>
<p>Days of the week or unusual punctuation result in an error. </p>
<p>Dashes, forward-slashes, and spaces are generally allowed. </p>
    </td>
    <td>
<p>String</p>
    </td>
  </tr>
  <tr>
    <td>
<p>Date</p>
    </td>
    <td>
<p>Error</p>
    </td>
    <td>
<p>The numeric value of the date-time object.</p>
    </td>
    <td>
<p>Date</p>
    </td>
    <td>
<p>An ODBC timestamp.</p>
    </td>
  </tr>
</table>

<p>ColdFusion cannot convert complex types, such as arrays, queries, and COM objects, to other types. However, it can convert simple data elements of complex types to other simple data types.</p>
<h3><a name="wp1129550"></a>Type conversion considerations</h3>
<p>The following sections detail specific rules and considerations for converting between types.</p>
<h4><a name="wp1117591"></a>The cfoutput tag</h4>
<p>The <a href="00000309.htm#1101659"><code>cfoutput</code></a> tag always displays data as a string. As a result, when you display a variable using the <code>cfoutput</code> tag, ColdFusion applies the type conversion rules to any non-string data before displaying it. For example, the <code>cfoutput</code> tag displays a date-time value as an ODBC timestamp. </p>
<h4><a name="wp1147462"></a>Case-insensitivity and Boolean conversion</h4>
<p>Because ColdFusion expression evaluation is not case-sensitive, Yes, YES, and yes are equivalent; False, FALSE, and false are equivalent; No, NO, and no are equivalent; and True, TRUE, and true are equivalent.</p>
<h4><a name="wp1126178"></a>Converting binary data</h4>
<p>ColdFusion cannot automatically convert binary data to other data types. To convert binary data, use the <a href="00000652.htm#138529"><code>ToBase64</code></a> and <a href="00000655.htm#138710"><code>ToString</code></a> functions. For more information, see <a href="00000895.htm#1101786">Binary data type and binary encoding</a>.</p>
<h4><a name="wp1134400"></a>Converting date and time data</h4>
<p>To ensure that a date and time value is expressed as a real number, add zero to the variable. The following example shows this:</p>
<pre>&lt;cfset mynow = now()&gt;
Use cfoutput to display the result of the now function:&lt;br&gt;
&lt;cfoutput&gt;#mynow#&lt;/cfoutput&gt;&lt;br&gt;
Now add 0 to the result and display it again:&lt;br&gt;
&lt;cfset mynow = mynow + 0&gt;
&lt;cfoutput&gt;#mynow#&lt;/cfoutput&gt;
</pre><p>At 1:06 PM on June 6, 2003, its output looked like this:</p>
<pre>Use cfoutput to display the result of the now function:
{ts &#39;2003-06-03 13:06:44&#39;}
Now add 0 to the result and display it again:
37775.5463426 
</pre><h4><a name="wp1202844"></a>Converting numeric values</h4>
<p>When ColdFusion evaluates an expression that includes both integers and real numbers, the result is a real number. To convert a real number to an integer, use a ColdFusion function. The <a href="00000511.htm#1106046"><code>Int</code></a>, <a href="00000619.htm#136096"><code>Round</code></a>, <a href="00000466.htm#4738711"><code>Fix</code></a>, and <a href="00000414.htm#1101688"><code>Ceiling</code></a> functions convert real numbers to integers, and differ in their treatment of the fractional part of the number.</p>
<p>If you use a hidden form field with a name that has the suffix <code>_integer</code> or <code>_range</code> to validate a form input field, ColdFusion truncates real numbers entered into the field and passes the resulting integer to the action page.</p>
<p>If you use a hidden form field with a name that has the suffix<code> _integer</code>,<code> _float</code>, or <code>_range</code> to validate a form input field, and the entered data contains a dollar amount (including a dollar sign) or a numeric value with commas, ColdFusion considers the input to be valid, removes the dollar sign or commas from the value, and passes the resulting integer or real number to the action page.</p>


<hr />
<p align="right"><p align="right"><a href="00000907.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000909.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000908.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



