<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Passing custom tag attributes using CFML structures</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001076.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001078.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Passing custom tag attributes using CFML structures</h1>
<p>You can use the reserved attribute <code>attributecollection</code> to pass attributes to custom tags using a structure. The <code>attributecollection</code> attribute must reference a structure containing the attribute names as the keys and the attribute values as the values. You can freely mix <code>attributecollection</code> with other attributes when you call a custom tag.</p>
<p>The key-value pairs in the structure specified by the <code>attributecollection</code> attribute get copied into the custom tag page's Attributes scope. This has the same effect as specifying the <code>attributecollection</code> entries as individual attributes when you call the custom tag. The custom tag page refers to the attributes passed using <code>attributecollection</code> the same way as it does other attributes; for example, as Attributes.CustomerName or Attributes.Department_number.</p>
<p><strong>Note: </strong>You can use both tag attributes and <code>attributecollections</code>. If you pass an attribute with the same name using both methods, ColdFusion passes only the tag attribute to the custom tag and ignores the corresponding attribute from the attribute collection. </p><p>Custom tag processing reserves the <code>attributecollection</code> attribute to refer to the structure holding a collection of custom tag attributes. If <code>attributecollection</code> does not refer to such a collection, ColdFusion generates a template exception.</p>
<p>The following example uses an <code>attributecollection</code> attribute to pass two of four attributes:</p>
<pre>&lt;<code>cfset</code> zort=StructNew()&gt;
&lt;<code>cfset</code> zort.x = &quot;-X-&quot;&gt;
&lt;<code>cfset</code> zort.y = &quot;-Y-&quot;&gt;
&lt;cf_testtwo a=&quot;blab&quot; attributecollection=#zort# foo=&quot;16&quot;&gt;
</pre><p>If testtwo.cfm contains the following code: </p>
<pre>---custom tag ---&lt;br&gt;
&lt;cfoutput&gt;#attributes.a# #attributes.x# #attributes.y#
   #attributes.foo#&lt;/cfoutput&gt;&lt;br&gt;
--- end custom tag ---
</pre><p>its output is the following statement:</p>
<pre>---custom tag ---
blab -X- -Y- 16
--- end custom tag ---
</pre><p>One use for <code>attributecollection</code> is to pass the entire Attributes scope of one custom tag to another. This often happens when you have one custom tag that calls a second custom tag and you want to pass all attributes from the first tag to the second. </p>
<p>For example, you call a custom tag with the following code:</p>
<pre>&lt;cf_first attr1=&quot;foo&quot; attr2=&quot;bar&quot;&gt;
</pre><p>To pass all the attributes of the first custom tag to the second, you include the following statement in first.cfm:</p>
<pre>&lt;cf_second attributecollection=&quot;#attributes#&quot;&gt;
</pre><p>Within the body of second.cfm, you reference the parameters passed to it as follows:</p>
<pre>&lt;cfoutput&gt;#attributes.attr1#&lt;/cfoutput&gt;
&lt;cfoutput&gt;#attributes.attr2#&lt;/cfoutput&gt;
</pre>

<hr />
<p align="right"><p align="right"><a href="00001076.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001078.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001077.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



