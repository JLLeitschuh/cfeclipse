<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Configuring and using session variables</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001155.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001157.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Configuring and using session variables</h1>
<p>Use session variables when you need the variables for a single site visit or set of requests. For example, you might use session variables to store a user's selections in a shopping cart application. (Use client variables if you need a variable in multiple visits.)</p>
<p><strong>Caution: </strong>Put code that uses session variables inside <a href="00000285.htm#1100787"><code>cflock</code></a> tags in circumstances that might result in race conditions from multiple accesses to the same variable. For information on using cflock tags see <a href="00001166.htm#1154837">Locking code with cflock</a>.</p><p>This section describes the following topics:</p>
<ul>
<li>
   <a href="00001156.htm#1205270">What is a session?</a>
</li>
<li>
   <a href="00001157.htm#1162179">Configuring and enabling session variables</a>
</li>
<li>
   <a href="00001158.htm#1154707">Storing session data in session variables</a>
</li>
<li>
   <a href="00001159.htm#1171164">Standard session variables</a>
</li>
<li>
   <a href="00001160.htm#1160182">Getting a list of session variables</a>
</li>
<li>
   <a href="00001161.htm#1168437">Creating and deleting session variables</a>
</li>
<li>
   <a href="00001162.htm#1185183">Accessing and changing session variables</a>
</li>
<li>
   <a href="00001163.htm#1211974">Ending a session</a>
</li>
</ul>
<h2><a name="wp1205270"></a>What is a session?</h2>
<p>A <strong>session</strong> refers to all the connections that a single client might make to a server in the course of viewing any pages associated with a given application. Sessions are specific to both the individual user and the application. As a result, every user of an application has a separate session and has access to a separate set of session variables.</p>
<p>This logical view of a session begins with the first connection to an application by a client and ends after that client&#39;s last connection. However, because of the stateless nature of the web, it is not always possible to define a precise point at which a session ends. A session should end when the user finishes using an application. In most cases, however, a web application has no way of knowing if a user has finished or is just lingering over a page.</p>
<p>Therefore, sessions always terminate after a time-out period of inactivity. If the user does not access a page of the application within this time-out period, ColdFusion interprets this as the end of the session and clears any variables associated with that session.</p>
<p>The default time-out for session variables is 20 minutes. You can change the default time-out on the Memory Variables page in the Server Settings area in the ColdFusion&#160;MX Administrator.</p>
<p>You can also set the time-out period for session variables inside a specific application (thereby overruling the Administrator default setting) by setting the Application.cfc This.sessionTimeout variable or by using the <a href="00000217.htm#1097308"><code>cfapplication</code></a> tag <code>sessionTimeout</code> attribute. However, you cannot set a time-out value for that is greater than the maximum session time-out value set on the Administrator Memory Variables page. </p>
<p>For detailed information on ending sessions and deleting session variables, see <a href="00001163.htm#1211974">Ending a session</a>.</p>
<h3><a name="wp1162204"></a>ColdFusion and J2EE session management</h3>
<p>The ColdFusion server can use either of the following types of session management: </p>
<ul>
<li>
   ColdFusion session management
</li>
<li>
   J2EE servlet session management
</li>
</ul>
<p>ColdFusion session management uses the same client identification method as ColdFusion client management. </p>
<p>J2EE session management provides the following advantages over ColdFusion session management:</p>
<ul>
<li>
   J2EE session management uses a session-specific session identifier, <code>jsessionid</code>, which is created afresh at the start of each session. 
</li>
<li>
   You can share session variables between ColdFusion pages and JSP pages or Java servlets that you call from the ColdFusion pages. 
</li>
<li>
   The session automatically ends when the user closes all browser windows.
</li>
<li>
   The Session scope is serializable (convertible into a sequence of bytes that can later be fully restored into the original object). With ColdFusion session management, the Session scope is not serializable. Only serializable scopes can be shared across servers.
</li>
</ul>
<p>Therefore, consider using J2EE session management in any of the following cases:</p>
<ul>
<li>
   You want to maximize session security, particularly if you also use client variables
</li>
<li>
   You want to share session variables between ColdFusion pages and JSP pages or servlets in a single application.
</li>
<li>
   You want to be able to manually terminate a session while maintaining the client identification cookie for use by the Client scope.
</li>
<li>
   You want to support clustered sessions; for example, to support session failover among servers.
</li>
</ul>


<hr />
<p align="right"><p align="right"><a href="00001155.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001157.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001156.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



