<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Using continue and break statements</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000976.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000978.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Using continue and break statements</h1>
<p>The continue and break statements enable you to control the processing inside loops: </p>
<ul>
<li>
   The <code>continue</code> statement tells ColdFusion to skip to the beginning of the next loop iteration.
</li>
<li>
   The <code>break</code> statement exits the current loop or <code>case</code> statement. 
</li>
</ul>
<h4><a name="wp1116805"></a>Using continue</h4>
<p>The <code>continue</code> statement ends the current loop iteration, skips any code following it in the loop, and jumps to the beginning of the next loop iteration. For example, the following code loops through an array and display's each value that is not an empty string:</p>
<pre>for ( loop=1; loop LE 10; loop = loop+1)&#160;{
   if(a[loop] EQ &quot;&quot;) continue;
   WriteOutput(loop);
}
</pre><p>(To test this code snippet, you must first create an array, a, with 10 or more elements, some of which are not empty strings.) </p>
<p>In general, the <code>continue</code> statement is particularly useful if you loop over arrays or structures and you want to skip processing for array elements or structure members with specific values, such as the empty string.</p>
<h4><a name="wp1127177"></a>Using break</h4>
<p>The <code>break</code> statement exits the current loop or <code>case</code> statement. Processing continues at the next CFScript statement. You end <code>case</code> statement processing blocks with a <code>break</code> statement. You can also use a test case with a <code>break</code> statement to prevent infinite loops, as shown in the following example. This script loops through an array and prints out the array indexes that contain the value key. It uses a conditional test and a <code>break</code> statement to make sure that the loop ends when at the end of the array.</p>
<pre>strings=ArrayNew(1);
ArraySet(strings, 1, 10, &quot;lock&quot;);
strings[5]=&quot;key&quot;;
strings[9]=&quot;key&quot;;
indx=0;
for( ; ; )&#160;{
   indx=indx+1;
   if(Find(&quot;key&quot;,strings[indx],1))&#160;{
      WriteOutput(&quot;Found a key at &quot; &amp; indx &amp; &quot;.&lt;br&gt;&quot;);
      }
   else if (indx IS ArrayLen(strings))&#160;{
      WriteOutput(&quot;Array ends at index &quot; &amp; indx &amp; &quot;.&lt;br&gt;&quot;);
      break;
   }
}
</pre>

<hr />
<p align="right"><p align="right"><a href="00000976.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000978.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000977.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



