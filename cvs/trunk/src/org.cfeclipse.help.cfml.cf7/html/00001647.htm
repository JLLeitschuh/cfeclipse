<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Using the CFML event gateway for asynchronous CFCs</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001646.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001648.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Using the CFML event gateway for asynchronous CFCs</h1>
<p>The ColdFusion&#160;MX CFML event gateway lets CFML code send a message to CFC methods asynchronously. This event gateway lets you initiate processing by a CFC method without waiting for it to complete or return a value. Possible uses for asynchronous CFCs that you access using this event gateway include the following:</p>
<ul>
<li>
   Reindexing a Verity collection with new information without delaying an application, for example, when a user uploads a new file
</li>
<li>
   Logging information, particularly if there is significant amount of data to log
</li>
<li>
   Running batch processes that might take a substantial amount of time to complete
</li>
</ul>
<p>Because asynchronous CFCs run independently of a request, they do not provide feedback to the user. You must save any results or error information to a file, data source, or other external resource.</p>
<p>By default, ColdFusion delivers the message to a CFC method named onIncomingMessage. You can specify any method name, however, in the <a href="00000622.htm#153566"><code>SendGatewayMessage</code></a> method's <i>data</i> parameter.</p>
<h2><a name="wp149480"></a>CFML event gateway data structure</h2>
<p>The structure that you use in the CFML <code>SendGatewayMessage</code> function can include two types of fields:</p>
<ul>
<li>
   The structure can include any number of fields with arbitrary contents for use in by the CFC.
</li>
<li>
   Several optional fields can configure how the gateway delivers the information to the CFC. 
</li>
</ul>
<p>The CFML gateway looks for the following optional fields, and, if they exist, uses them to determine how it delivers the message. Do not use these field names for data that you send to your CFC method.</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Field
    </th>
    <th>
Use
    </th>
  </tr>
  <tr>
    <td>
<p>cfcpath</p>
    </td>
    <td>
<p>Overrides the CFC path specified in the ColdFusion&#160;MX Administrator. This field lets you use a single gateway configuration in the ColdFusion&#160;MX Administrator multiple CFCs.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>method</p>
    </td>
    <td>
<p>Sets the name of the method to invoke in the CFC. The default method is <code>onIncomingMessage</code>. This field lets you use a single gateway configuration in the ColdFusion&#160;MXAdministrator for a CFC that has several methods.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>originatorID</p>
    </td>
    <td>
<p>Sets the originatorID field of the CFEvent object that ColdFusion&#160;MX delivers to the CFC. The default value is CFMLGateway.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>timeout</p>
    </td>
    <td>
<p>Sets the time-out, in seconds, during which the listener CFC must process the event request and return before ColdFusion gateway services terminates the request. The default value is the Timeout Request value set on the Server Settings page in the ColdFusion&#160;MX Administrator. Set this value if a request might validly take longer to process than the default timeout; for example, if the request involves a very long processing time.</p>
    </td>
  </tr>
</table>

<h2><a name="wp137047"></a>Using the CFML gateway</h2>
<p>The following procedure describes how to use an asynchronous CFC that has a single, <code>onIncomingMessage</code> method. </p>
<h4>To use an asynchronous CFC:</h4>
<ol>
<li>
   Create a CFC with an <code>onIncomingMessage</code> method. Put the CFC in an appropriate directory for your application. For example, you can put it in the <i>cf_root</i>\WEB-INF\cfusion\gateway\cfc directory on J2EE configurations, in the <i>cf_root</i>\gateway\cfc directory on server configurations, or in a subdirectory of these directories. ColdFusion MX is installed with mappings to these cfc gateway directories.
<p>The <code>onIncomingMessage</code> method must take a CFEvent structure that contains input information in its Data field, and processes the contents of the Data field as needed. </p>
</li>
<li>
   Use the Gateways page in the ColdFusion&#160;MX Administrator to add an instance of the CFML event gateway type. Specify the following:
<ul><li>A unique Gateway ID.</li>
<li>The path to the CFC that you created in step 1. </li>
<li>The startup mode. Select Automatic startup mode to start the event gateway when ColdFusion&#160;MX starts up.</li>
<li>Do <i>not</i> specify a configuration file.</li>
</ul></li>
<li>
   Start the event gateway instance.
</li>
<li>
   Write CFML code that uses <code>SendGatewayMessage</code> functions to send messages in structures to the event gateway instance ID that you specified in step 2. The <code>SendGatewayMessage</code> function returns true if the gateway successfully queues the message in the ColdFusion MX Gateway Service; false, otherwise. It does not ensure that the CFC receives or processes the message.
</li>
<li>
   Run your CFML application.
</li>
</ol>
<h2><a name="wp135620"></a>Example: logging messages</h2>
<p>The following asynchronous CFML event gateway CFC uses the <code>cflog</code> tag to log a message to a file in the ColdFusion&#160;MX logs directory. The CFC takes a message with the following fields:</p>
<ul>
<li>
   file&#160;The name of the file in which to put the message. The default value is defaultEventLog.
</li>
<li>
   type&#160;The <code>cflog</code> type attribute to use. The default value is info.
</li>
<li>
   message&#160;The message text.
</li>
</ul>
<pre>&lt;cfcomponent&gt;
   &lt;cffunction name=&quot;onIncomingMessage&quot; output=&quot;no&quot;&gt;
      &lt;cfargument name=&quot;CFEvent&quot; type=&quot;struct&quot; required=&quot;yes&quot;&gt;
      &lt;cfscript&gt;
         if (NOT IsDefined(&quot;CFEvent.Data.file&quot;)) {<br />            CFEvent.Data.file=&quot;defaultEventLog&quot;; }
         if (NOT IsDefined(&quot;CFEvent.Data.type&quot;)) {
            CFEvent.Data.type=&quot;info&quot;; }
      &lt;/cfscript&gt;
      &lt;cflog text=&quot;#CFEvent.Data.message#&quot;
          file=&quot;#CFEvent.Data.file#&quot;
         type=&quot;#CFEvent.Data.type#&quot;
         thread=&quot;yes&quot;
         date=&quot;yes&quot;
         time=&quot;yes&quot;
         application=&quot;yes&quot;&gt;
   &lt;/cffunction&gt;
&lt;/cfcomponent&gt;
</pre><p>The following minimal CFML page tests the event gateway: </p>
<pre>Sending an event to the CFML event gateway that is registered in the 
   ColdFusion MX Administrator as Asynch Logger.&lt;br&gt;
&lt;cfscript&gt;
   status = false;
   props = structNew();
   props.Message = &quot;Replace me with a variable with data to log&quot;;   
   status = SendGatewayMessage(&quot;Asynch Logger&quot;, props);
   if (status IS True) WriteOutput('Event Message &quot;#props.Message#&quot; has been sent.');
&lt;/cfscript&gt;
</pre>

<hr />
<p align="right"><p align="right"><a href="00001646.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001648.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001647.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



