<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Using functions as operators</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000930.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000932.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Using functions as operators</h1>
<p>Functions are a form of operator. Because ColdFusion functions return values, you can use function results as operands. Function arguments are expressions. For example, the following are valid expressions:</p>
<ul>
<li>
   <code>Rand()</code>
</li>
<li>
   <code>UCase(&quot;This is a text: &quot;) &amp; ToString(123 + 456)</code>
</li>
</ul>
<h3><a name="wp2677827"></a>Function syntax</h3>
<p>The following table shows function syntax and usage guidelines:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Usage
    </th>
    <th>
Example
    </th>
  </tr>
  <tr>
    <td>
<p>No arguments</p>
    </td>
    <td>
<pre>Function()
</pre>    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>Basic format</p>
    </td>
    <td>
<pre>Function(Data)
</pre>    </td>
  </tr>
  <tr>
    <td>
<p>Nested functions</p>
    </td>
    <td>
<pre>Function1(Function2(Data))
</pre>    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>Multiple arguments</p>
    </td>
    <td>
<pre>Function(Data1, Data2, Data3)
</pre>    </td>
  </tr>
  <tr>
    <td>
<p>String arguments</p>
    </td>
    <td>
<pre>Function(&#39;This is a demo&#39;) <br />Function(&quot;This is a demo&quot;)
</pre>    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>Arguments that are expressions</p>
    </td>
    <td>
<pre>Function1(X*Y, Function2(&quot;Text&quot;))
</pre>    </td>
  </tr>
</table>

<p>All functions return values. In the following example, the <a href="00000334.htm#1103445"><code>cfset</code></a> tag sets a variable to the value returned by the <a href="00000590.htm#134078"><code>Now</code></a> function:</p>
<pre>&lt;cfset myDate = DateFormat(Now(), &quot;mmmm d, yyyy&quot;)&gt;
</pre><p>You can use the values returned by functions directly to create more complex expressions, as in the following example:</p>
<pre>Abs(Myvar)/Round(3.14159)
</pre><p>For more information on how to insert functions in expressions, see <a href="00000932.htm#2708421">Using number signs</a>.</p>
<h3><a name="wp2736328"></a>Optional function arguments</h3>
<p>Some functions take optional arguments after their required arguments. If omitted, all optional arguments default to a predefined value. For example:</p>
<ul>
<li>
   <code>Replace(&quot;Eat and Eat&quot;, &quot;Eat&quot;, &quot;Drink&quot;)</code> returns &quot;Drink and Eat&quot;
</li>
<li>
   <code>Replace(&quot;Eat and Eat&quot;, &quot;Eat&quot;, &quot;Drink&quot;, &quot;All&quot;)</code> returns &quot;Drink and Drink&quot;
</li>
</ul>
<p>The difference in the results is because the <a href="00000611.htm#135527"><code>Replace</code></a> function takes an optional fourth argument that specifies the scope of replacement. The default value is &quot;One,&quot; which explains why only the first occurrence of &quot;Eat&quot; was replaced with &quot;Drink&quot; in the first example. In the second example, a fourth argument causes the function to replace all occurrences of &quot;Eat&quot; with &quot;Drink&quot;.</p>
<h3><a name="wp2738393"></a>Expression evaluation and functions</h3>
<p>It is important to remember that ColdFusion evaluates function attributes as expressions before it executes the function. As a result, you can use any ColdFusion expression as a function attribute. For example, consider the following lines:</p>
<pre>&lt;cfset firstVariable = &quot;we all need&quot;&gt;
&lt;cfset myStringVar = UCase(firstVariable &amp; &quot; more sleep!&quot;)&gt;
</pre><p>When ColdFusion server executes the second line, it does the following:</p>
<ol>
<li>
   Determines that there is an expression with a string concatenation.
</li>
<li>
   Evaluates the firstVariable variable as the string &quot;we all need&quot;.
</li>
<li>
   Concatenates &quot;we all need&quot; with the string &quot; more sleep!&quot; to get &quot;we all need more sleep!&quot;.
</li>
<li>
   Passes the string &quot;we all need more sleep!&quot; to the <a href="00000657.htm#138852"><code>UCase</code></a> function.
</li>
<li>
   Executes the <code>UCase</code> function on the string argument &quot;we all need more sleep!&quot; to get &quot;WE ALL NEED MORE SLEEP!&quot;.
</li>
<li>
   Assigns the string value &quot;WE ALL NEED MORE SLEEP!&quot; to the variable myStringVar.
</li>
</ol>
<p>ColdFusion completes steps 1-3 before invoking the function.</p>


<hr />
<p align="right"><p align="right"><a href="00000930.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000932.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000931.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



