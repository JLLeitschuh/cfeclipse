<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>When to use CFCs</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001024.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001026.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>When to use CFCs</h1>
<p>This section describes the ways in which you can use CFCs:</p>
<ul>
<li>
   <a href="00001025.htm#1175560">Developing structured, reusable code</a>
</li>
<li>
   <a href="00001025.htm#1216816">Creating web services</a>
</li>
<li>
   <a href="00001025.htm#1219081">Creating Macromedia Flash Remoting elements</a>
</li>
<li>
   <a href="00001025.htm#1220059">Using asynchronous CFCs</a>
</li>
</ul>
<h3><a name="wp1175560"></a>Developing structured, reusable code</h3>
<p>CFCs provide an excellent method for developing structured applications that separate display elements from logical elements and encapsulate database queries. You can use CFCs to create application functionality that you (and others) can reuse wherever needed, similar to user-defined functions (UDFs) and custom tags. If you want to modify, add, or remove component functionality, you make changes in only one component file. </p>
<p>CFCs have several advantages over UDFs and custom tags. These advantages, which CFCs automatically provide, include all of the following:</p>
<ul>
<li>
   The ability to group related methods into a single component, and to group related components into a package
</li>
<li>
   Properties that multiple methods can share
</li>
<li>
   The This scope, a component-specific scope
</li>
<li>
   Inheritance of component methods and properties from a base component, including the use of the Super keyword
</li>
<li>
   Access control
</li>
<li>
   Introspection for CFC methods, properties, and metadata
</li>
</ul>
<p>CFCs have one characteristic that prevents them from being the automatic choice for all code reuse. It takes relatively more processing time to instantiate a CFC than to process a custom tag. In turn, it takes substantially more time to process a custom tag than to execute a user-defined function (UDF). However, after a CFC is instantiated, calling a CFC method has about the same processing overhead as an equivalent UDF. As a result, you should not use CFCs in place of independent, single-purpose custom tags or UDFs. Instead, you should use CFCs to create bodies of related methods, particularly methods that share properties.</p>
<p>For more information about UDFs, custom tags, and other ColdFusion code reuse techniques, see <a href="00000993.htm#1101532">Creating ColdFusion Elements</a>.</p>
<h3><a name="wp1216816"></a>Creating web services</h3>
<p>ColdFusion&#160;MX&#160;7 can automatically publish CFC methods as web services. To publish a CFC method as a web service, you specify the <code>access=&quot;remote&quot;</code> attribute in the method's <a href="00000263.htm#2852457"><code>cffunction</code></a> tag. ColdFusion generates all the required Web Services Description Language (WSDL) code and exports the CFC methods. For more information on creating web services in ColdFusion, see <a href="00001530.htm#1141005">Using Web Services</a>.</p>
<h3><a name="wp1219081"></a>Creating Macromedia Flash Remoting elements</h3>
<p>Flash applications that use Flash Remoting MX can easily take advantage of ColdFusion components for business logic. In a CFC, the <a href="00000263.htm#2852457"><code>cffunction</code></a> tag names the function and contains the application logic, and the <a href="00000326.htm#2498057"><code>cfreturn</code></a> tag returns the result to Flash. </p>
<p><strong>Note: </strong>For ColdFusion component methods to communicate with Flash applications, you must set the <code>access</code> attribute of the <a href="00000263.htm#2852457"><code>cffunction</code></a> tag to remote.</p><p>For more information on creating CFCs for Flash Remoting MX, see <a href="00001481.htm#1162278">Using Flash with CFCs</a>.</p>
<h3><a name="wp1220059"></a>Using asynchronous CFCs</h3>
<p>ColdFusion&#160;MX&#160;7 provides an event gateway that lets you send a message to a CFC asynchronously. This gateway lets you initialize processing by a CFC without waiting for the CFC to complete or return a value. You can use asynchronous CFCs that use this gateway for the following:</p>
<ul>
<li>
   Reindexing a Verity collection
</li>
<li>
   Logging information
</li>
<li>
   Running batch processes
</li>
</ul>
<p>For more information on using asynchronous CFCs, see <a href="00001626.htm#132743">About event gateways</a>.</p>


<hr />
<p align="right"><p align="right"><a href="00001024.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001026.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001025.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



