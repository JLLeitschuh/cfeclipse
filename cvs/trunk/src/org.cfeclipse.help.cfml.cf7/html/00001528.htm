<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Transferring data from the browser to the server</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001527.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001529.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Transferring data from the browser to the server</h1>
<p>The following example serializes form field data, posts it to the server, deserializes it, and displays the data. For simplicity, it only collects a small amount of data. In applications that generate complex JavaScript data collections, you can extend this basic approach very effectively. This example uses the <code>WddxSerializer</code> JavaScript object to serialize the data, and the <a href="00000351.htm#2682044"><code>cfwddx</code></a> tag to deserialize the data.</p>
<h4>To use the example:</h4>
<ol>
<li>
   Save the file under your webroot directory, for example in wwwroot/myapps/ wddxserializedeserialze.cfm.
</li>
<li>
   Display http://localhost/myapps/wddxserializedeserialze.cfm in your browser.
</li>
<li>
   Enter a first name and last name in the form fields.
</li>
<li>
   Click Next. 
<p>The name appears in the Names added so far box.</p>
</li>
<li>
   Repeat steps 3 and 4 to add as many names as you wish.
</li>
<li>
   Click Serialize to serialize the resulting data. 
<p>The resulting WDDX packet appears in the WDDX packet display box. This step is intended only for test purposes. Real applications handle the serialization automatically.</p>
</li>
<li>
   Click Submit to submit the data.
<p>The WDDX packet is transferred to the server-side processing code, which deserializes it and displays the information.</p>
</li>
</ol>
<pre>&lt;!--- load the wddx.js file ---&gt;
&lt;script type=&quot;text/javascript&quot; src=&quot;/CFIDE/scripts/wddx.js&quot;&gt;&lt;/script&gt;

&lt;!--- Data binding code ---&gt;
&lt;script&gt;

   // Generic serialization to a form field
   function serializeData(data, formField)&#160;{
      wddxSerializer = new WddxSerializer();
      wddxPacket = wddxSerializer.serialize(data);
      if (wddxPacket != null)&#160;{
         formField.value = wddxPacket;
      }
      else&#160;{
         alert(&quot;Couldn&#39;t serialize data&quot;);
      }
   }
   // Person info recordset with columns firstName and lastName
   // Make sure the case of field names is preserved
   var personInfo = new WddxRecordset(new Array(&quot;firstName&quot;, &quot;lastName&quot;), true);

   // Add next record to end of personInfo recordset
   function doNext()&#160;{
      // Extract data
      var firstName = document.personForm.firstName.value;
      var lastName = document.personForm.lastName.value;
      
      // Add names to recordset
      nRows = personInfo.getRowCount();
      personInfo.firstName[nRows] = firstName;
      personInfo.lastName[nRows] = lastName;
      
      // Clear input fields
      document.personForm.firstName.value = &quot;&quot;;
      document.personForm.lastName.value = &quot;&quot;;
      
      // Show added names on list
      // This gets a little tricky because of browser differences
      var newName = firstName + &quot; &quot; + lastName;
      if (navigator.appVersion.indexOf(&quot;MSIE&quot;) == -1)&#160;{
         document.personForm.names[length] = 
            new Option(newName, &quot;&quot;, false, false);
      }
      else&#160;{
         // IE version
         var entry = document.createElement(&quot;OPTION&quot;);
         entry.text = newName;
         document.personForm.names.add(entry);
      }
   }
&lt;/script&gt;

&lt;!--- Data collection form ---&gt; 
&lt;form action=&quot;#cgi.script_name#&quot; method=&quot;Post&quot; name=&quot;personForm&quot;&gt;

   &lt;!--- Input fields ---&gt;
   Personal information&lt;br&gt;
   First name: &lt;input type=text name=firstName&gt;&lt;br&gt;
   Last name: &lt;input type=text name=lastName&gt;&lt;br&gt;
   &lt;br&gt;
   
   &lt;!--- Navigation &amp; submission bar ---&gt;
   &lt;input type=&quot;button&quot; value=&quot;Next&quot; onclick=&quot;doNext()&quot;&gt;
   &lt;input type=&quot;button&quot; value=&quot;Serialize&quot;
   onclick=&quot;serializeData(personInfo, document.personForm.wddxPacket)&quot;&gt;
   &lt;input type=&quot;submit&quot; value=&quot;Submit&quot;&gt;
   &lt;br&gt;&lt;br&gt;
   Names added so far:&lt;br&gt;
   &lt;select name=&quot;names&quot; size=&quot;5&quot;&gt;
   &lt;/select&gt;
   &lt;br&gt;
   
   &lt;!--- This is where the WDDX packet will be stored ---&gt;
   &lt;!--- In a real application this would be a hidden input field. ---&gt;
   &lt;br&gt;
   WDDX packet display:&lt;br&gt;
   &lt;textarea name=&quot;wddxPacket&quot; rows=&quot;10&quot; cols=&quot;80&quot; wrap=&quot;Virtual&quot;&gt;
   &lt;/textarea&gt;
   
&lt;/form&gt;


&lt;!--- Server-side processing ---&gt;
&lt;hr&gt;
&lt;b&gt;Server-side processing&lt;/b&gt;&lt;br&gt;
&lt;br&gt;
&lt;cfif isdefined(&quot;form.wddxPacket&quot;)&gt;
   &lt;cfif form.wddxPacket neq &quot;&quot;&gt;

      &lt;!--- Deserialize the WDDX data ---&gt;
      &lt;cfwddx action=&quot;wddx2cfml&quot; input=#form.wddxPacket#
      output=&quot;personInfo&quot;&gt;

      &lt;!--- Display the query ---&gt;
      The submitted personal information is:&lt;br&gt;
      &lt;cfoutput query=personInfo&gt;
         Person #CurrentRow#: #firstName# #lastName#&lt;br&gt;
      &lt;/cfoutput&gt;
   &lt;cfelse&gt;
      The client did not send a well-formed WDDX data packet!
   &lt;/cfif&gt;
&lt;cfelse&gt;
   No WDDX data to process at this time.
&lt;/cfif&gt;
</pre>

<hr />
<p align="right"><p align="right"><a href="00001527.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001529.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001528.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



