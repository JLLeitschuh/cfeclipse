<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Enabling clustering for load balancing and failover</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001773.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001775.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Enabling clustering for load balancing and failover</h1>
<p><i>Load balancing</i> is an enterprise-level feature in which the application server automatically alternates requests among the server instances in a cluster. Clustering also enables application servers to route requests to a running server instance when the original server instance goes down.</p>
<p><strong>Note: </strong>These instructions apply only when you are running ColdFusion&#160;MX in the multiserver configuration. If you are running JRun4, you can also create clusters in the JMC.</p><p>You can get load balancing and failover by deploying identical ColdFusion applications and configurations to multiple server instances and adding the instances to a cluster. Each instance must have the same applications deployed and the same resources configured (such as data sources, Verity collections, and mappings). The web server connector optimizes performance and stability by automatically balancing load and by switching requests to another server instance when a server instance stops running.</p>
<p><strong>Note: </strong>Because clustering uses Jini Network Technology, you must be connected to a network for clustering to work. </p><p>For maximum failover protection, use multiple computers in a cluster. However, you must purchase a separate ColdFusion&#160;MX Enterprise Edition license for each computer.</p>
<p><strong>Note: </strong>If you set up and test multiple server instances while running the 30-day Trial version, the cluster might not continue to function appropriately when the Trial version reverts to the Developer version after 30 days.</p><p>To implement session failover for the server instances in a cluster, you must enable session replication for each server instance. Session replication coordinates session information in real-time among the server instances in a cluster. Enabling session replication lets JRun automatically route a request to a running server if the current server is unavailable.</p>
<p><strong>Note: </strong>When a cluster uses session replication, session data is copied to other servers in the cluster each time it is modified. This can degrade performance if you store a significant amount of information in session scope. If you plan to store a significant amount of information in session scope, consider storing this information in client variables saved in a database.</p><h4>To configure a cluster of server instances for load balancing and failover:</h4>
<ol>
<li>
   Create your application and the data sources required for the application.
</li>
<li>
   Ensure that you have installed ColdFusion&#160;MX&#160;7 using the multiserver configuration.
</li>
<li>
   Open the ColdFusion&#160;MX Administrator for the cfusion server in a browser (http://hostname:8300/CFIDE/administrator).
</li>
<li>
   Select Packaging &amp; Deployment &gt; J2EE Packaging.
</li>
<li>
   Use the J2EE Archives page to create an EAR file that contains the application, your application's CFM pages, the required data sources, and other settings.
</li>
<li>
   Select Enterprise Manager &gt; Instance Manager.
</li>
<li>
   Create server instances for the cluster as described in <a href="00001771.htm#102761">Defining additional server instances</a>. Ensure that you use the Create from EAR/WAR field to specify the archive file that you just created.
</li>
<li>
   (Optional) Click the Register Remote Instance button to define existing remote server instances so that you can include them in the cluster. If you use a remote server, ensure that it contains the same application and settings as the local server instances.
<p><strong>Note: </strong>A server can participate in only one cluster. When adding remote instances to a cluster, ensure that the instance is not already part of a cluster.</p></li>
<li>
   Ensure that each server instance is started.
<p><strong>Note: </strong>To administer a cluster, at least one member server instance must be running.</p></li>
<li>
   Select Enterprise Manager &gt; Cluster Manager.
</li>
<li>
   Name the cluster and click Add.
<p>The ColdFusion&#160;MX Administrator adds the cluster to the Configured Clusters area.</p>
</li>
<li>
   Click the cluster name or the edit icon.
<p>The Edit Cluster screen appears.</p>
</li>
<li>
   Use the arrow icons to add server instances to the cluster.
</li>
<li>
   (Optional) Enable session replication, and specify a cluster algorithm.
<p><strong>Note: </strong>When you enable sticky sessions, the connector does not always route requests strictly based on the cluster algorithm. For more information, see Administrator online Help.</p></li>
<li>
   Click Submit.
</li>
<li>
   Select Enterprise Manager &gt; Instance Manager.
</li>
<li>
   Open the ColdFusion&#160;MX Administrator on each server instance using the CF Admin icon on the Instance Manager. Ensure that required resources (such as data sources and Verity collections) are defined appropriately. If you are using session replication, go to the Memory Variables page and enable J2EE sessions. You must do this for all server instances in the cluster. If J2EE sessions are not enabled in the ColdFusion MX Administrator, session replication does not function properly.
<p><strong>Note: </strong>Session variables are the only memory variables that support session replication. In particular, ColdFusion components do not support session replication.</p></li>
<li>
   For servers that are not on the same subnet, open the <i>jrun_root</i>/lib/security.properties file and add the IP addresses of the other JRun servers in the cluster to the <code>jrun.trusted.hosts </code>property.
<p><strong>Note: </strong>This step is required only for servers that are not on the same subnet; it is not necessary if all servers are on the same subnet.</p></li>
<li>
   Restart all JRun servers in the cluster.
</li>
<li>
   Run the Web Server Configuration Tool. Choose your website, but instead of choosing a single server instance, select the cluster. Ensure that you select the Configure Web Server for ColdFusion MX Applications check box (GUI) or use the <code>-coldfusion</code> option (command-line). For more information, see <a href="00001754.htm#102669">Web server configuration</a>.
</li>
<li>
   Open each server instance's SERVER-INF/jrun.xml file and ensure that the ProxyService <code>deactivated</code> attribute is set to <code>false</code>.
</li>
<li>
   (Optional) Store the application's ColdFusion files in your external web server root directory.
</li>
<li>
   Test the application to ensure that load balancing and failover work as expected.
</li>
</ol>


<hr />
<p align="right"><p align="right"><a href="00001773.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001775.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001774.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



