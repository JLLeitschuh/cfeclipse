<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Content options</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001790.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001792.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Content options</h1>
<p>The following sections describe the Verity Spider content options.</p>
<h3><a name="wp1000268"></a>-casesen</h3>
<p>Makes processing case-sensitive by specifying that the spider separately process keys that differ only in case. Use only for indexing UNIX servers.</p>
<h3><a name="wp1000262"></a>-exclude</h3>
<p><strong>Syntax</strong>: <code>-exclude exp_1 [exp_n] ...</code></p>
<p>Specifies that files, paths, and URLs matching the specified expression(s) will not be followed. If you use backslashes, you must double them so that they are properly escaped; for example:</p>
<pre>C:\\test\\docs\\path
</pre><p>You can use wildcard expressions, where the asterisk (*) is for text strings and the question mark (?) is for single characters; for example:</p>
<pre>&#39;/my_doc*/year199?&#39;
</pre><p>In Windows, include double-quotation marks around the argument to protect special characters, such as the asterisk (*). On UNIX, use single-quotation marks. This is only required when you run the indexing job from a command line. Quotation marks are not necessary within a command file (the <code>-cmdfile</code> option).</p>
<p>To use regular expressions, also specify the <code>-regexp</code> option.</p>
<p>To specify a file, path, or URL that you want followed but not indexed, use the <code>-indexclude</code> option. For document types, use the <code>-mimeexclude</code> option instead; for example, specify <br /><code>-mimeexclude application/pdf</code> rather than <code>-exclude</code> <code>*.pdf</code>. </p>
<p><strong>Note: </strong>When specifying a URL, you must use full, absolute paths using the same format that appears in the HTML hyperlink. If the link is relative, you must change it to absolute to use it with the <code>-exclude</code> option.</p><p>See also <a href="00001787.htm#999864">-regexp</a>.</p>
<h3><a name="wp1000256"></a>-include</h3>
<p>Specifies that only those files, paths, and URLs that match the specified expression or expressions will be followed. If you use backslashes, you must double them so that they are properly escaped; for example:</p>
<pre>C:\\test\\docs\\path
</pre><p>You can use wildcard expressions, where the asterisk (*) is for text strings and the question mark (?) is for single characters; for example:</p>
<pre>&#39;/my_doc*/year199?&#39;
</pre><p>In Windows, include double-quotation marks around the argument to protect the special characters, such as the asterisk (*). On UNIX, use single-quotation marks. This is only required when you run the indexing job from a command line. Quotation marks are not necessary within a command file (the <code>-cmdfile</code> option).</p>
<p>To use regular expressions, also specify the <code>-regexp</code> option.</p>
<p>If your starting points do not contain the specified <code>-include</code> expressions, nothing will be indexed. The <code>-include</code> option prevents Verity Spider from even following anything that does not match the specified expressions. You might want to use the <code>-indinclude</code> option instead. Where the <code>-include</code> option prevents Verity Spider from even following anything that does not match the specified expressions, the <code>-indinclude</code> option allows Verity Spider to follow what matches the specified expressions, while not indexing.</p>
<p>For document types, use the <a href="00001791.htm#1000202">-mimeinclude</a> option instead; for example, specify <code>-mimeinclude text/html</code> rather than <code>-include *.htm</code>.</p>
<p><strong>Note: </strong>When specifying a URL, you must use full, absolute paths using the same format that appears in the HTML hyperlink. If the link is relative, you must change it to absolute to use it with the <code>-include</code> option.</p><p>See also <a href="00001787.htm#999864">-regexp</a>.</p>
<h3><a name="wp1000250"></a>-indexclude</h3>
<p><strong>Syntax</strong>: <code>-indexclude exp_1 [exp_n] ...</code></p>
<p>Specifies that the files and paths in URLs that match the expressions are not indexed. They are, however, still followed. If you use backslashes, you must double them so that they are properly escaped; for example:</p>
<pre>C:\\test\\docs\\path
</pre><p>You can use wildcard expressions, where the asterisk (*) is for text strings and the question mark (?) is for single characters; for example:</p>
<pre>&#39;/my_doc*/year199?&#39;
</pre><p>In Windows, include double-quotation marks around the argument to protect the special characters, such as the asterisk (*). On UNIX, use single-quotation marks. This is only required when you run the indexing job from a command line. Quotation marks are not necessary within a command file (the <code>-cmdfile</code> option).</p>
<p>To use regular expressions, also specify the <code>-regexp</code> option.</p>
<p>You would use this option to gather some documents, such as HTML tables of contents, to gain access to other documents for indexing. </p>
<p>Where the <code>-exclude</code> option prevents Verity Spider from even following anything that matches the specified expressions, the <code>-indexclude</code> option allows Verity Spider to follow anything while only skipping that which matches the specified expressions.</p>
<p>For document types, use the <code>-indmimeexclude</code> option instead.</p>
<p><strong>Note: </strong>When specifying a URL, you must use full, absolute paths using the same format as appears in the HTML hyperlink. If the link is relative, you must change it to absolute to use it with <code>-indexclude</code>.</p><p>See also <a href="00001787.htm#999864">-regexp</a>.</p>
<h3><a name="wp1000244"></a>-indinclude</h3>
<p><strong>Syntax</strong>: <code>-indinclude exp_1 [exp_n] ...</code></p>
<p>Specifies that only those files and paths in URLs that match the expressions be followed and indexed. If you use backslashes, you must double them so that they are properly escaped; for example:</p>
<pre>C:\\test\\docs\\path
</pre><p>You can use wildcard expressions, where the asterisk (*) is for text strings and the question mark (?) is for single characters; for example:</p>
<pre>&#39;/my_doc*/year199?&#39;
</pre><p>In Windows, include double-quotation marks around the argument to protect the special characters, such as the asterisk (*). On UNIX, use single-quotation marks. This is only required when you run the indexing job from a command line. Quotation marks are not necessary within a command file (the <code>-cmdfile</code> option).</p>
<p>To use regular expressions, also specify the <code>-regexp</code> option.</p>
<p>Where the <code>-include</code> option prevents Verity Spider from even following anything that does not match the specified expressions, the <code>-indinclude</code> option allows Verity Spider to follow anything while only indexing that which matches the specified expressions.</p>
<h4><a name="wp1006882"></a>Example</h4>
<p>If you want to index all documents that include &quot;search&quot; in the URL at http://web.verity.com, you cannot use the following:</p>
<pre>vspider -collection collname -start http://web.verity.com 
   -include &#39;*search*&#39;
</pre><p>This is because the starting point does not match the <code>-include</code> option criteria. Instead, use the <br /><code>-indinclude</code> option to follow all documents (unless you have specified any of the exclude options) and index only those documents that match your criteria. Replace the <code>-include</code> option with the <code>-indinclude</code> option in the preceding example.</p>
<p><strong>Note: </strong>When specifying a URL, you must use full, absolute paths using the same format that appears in the HTML hyperlink. If the link is relative, you must change it to absolute to use it with the <br /><code>-indinclude</code> option.</p><p>See also <a href="00001787.htm#999864">-regexp</a>.</p>
<h3><a name="wp1000238"></a>-indmimeexclude</h3>
<p><strong>Syntax</strong>: <code>-indmimeexclude mime_1 [mime_n] ...</code></p>
<p>Specifies that only those MIME types that match the expressions be followed but not indexed. </p>
<p>In Windows, include double-quotation marks around the argument to protect the special characters, such as the asterisk (*). On UNIX, use single-quotation marks. This is only required when you run the indexing job from a command line. Quotation marks are not necessary within a command file (the <code>-cmdfile</code> option).</p>
<p>Use this option to gather some documents, such as HTML tables of contents, to gain access to other documents for indexing. The <code>-mimeexclude</code> option, on the other hand, prevents specified documents from being followed at all. For the mime variable, you can include the asterisk (*) wildcard for text strings; for example:</p>
<pre>&#39;text/*&#39;
</pre><p>You cannot use the question mark (?) wildcard, and the <code>-regexp</code> option does not let you use regular expressions.</p>
<h3><a name="wp1000232"></a>-indmimeinclude</h3>
<p><strong>Syntax</strong>: <code>-indmimeinclude mime_1 [mime_n] ...</code></p>
<p>Specifies that only those MIME types that match the expressions be followed and indexed. </p>
<p>The <code>-mimeinclude</code> option does not let you index desired documents if the starting URL is not followed. For the mime variable, you can include the asterisk (*) wildcard for text strings; for example:</p>
<pre>&#39;text/*&#39;
</pre><p>In Windows, include double-quotation marks around the argument to protect the special character (*). On UNIX, use single-quotation marks. This is only required when you run the indexing job from a command line. Quotation marks are not necessary within a command file (the <code>-cmdfile</code> option).</p>
<p>You cannot use the question mark (?) wildcard, and the <code>-regexp</code> option does not allow you to use regular expressions.</p>
<h4><a name="wp1007005"></a>Example </h4>
<p>If you want to index all Word documents at http://web.verity.com, you cannot use:</p>
<pre>vspider -collection collname -style style_dir -start 
   http://web.verity.com -mimeinclude &#39;application/msword&#39;
</pre><p>This is because the starting point does not match the <code>-mimeinclude</code> criteria. You can use the <code>-indmimeinclude</code> option to follow all documents (unless you have specified any of the exclude options) and index only those documents that match your criteria. Replace the <code>-mimeinclude</code> option with the <code>-indmimeinclude</code> option in the preceding example.</p>
<h3><a name="wp1000226"></a>-indskip</h3>
<p><strong>Syntax</strong>: <code>-indskip HTML_tag &quot;exp&quot;</code></p>
<p><strong>Type</strong>: Web crawling only</p>
<p>Specifies that Verity Spider follow and parse links, but not index, any HTML document that contains the text of exp within the given HTML_tag. For multiple HTML_tag and exp combinations, use multiple instances of the <code>-skip</code> option.</p>
<p>You can use wildcard expressions, where the asterisk (*) is for text strings and the question mark (?) is for single characters; for example:</p>
<pre>&#39;/my_doc*/year199?&#39;
</pre><p>In Windows, include double-quotation marks around the argument to protect the special characters, such as the asterisk (*). On UNIX, use single-quotation marks. This is only required when you run the indexing job from a command line. Quotation marks are not necessary within a command file (the <code>-cmdfile</code> option).</p>
<p>If you use backslashes, you must double them so that they are properly escaped; for example:</p>
<pre>C:\\test\\docs\\path
</pre><p>To use regular expressions, also specify the <code>-regexp</code> option.</p>
<h4><a name="wp1007072"></a>Example 1</h4>
<p>To skip all HTML documents that contain the word &quot;personnel&quot; in the Title element, while still parsing those documents for links to other documents, use the following:</p>
<pre>-indskip title &quot;personnel&quot;
</pre><h4><a name="wp1007077"></a>Example 2</h4>
<p>To avoid indexing directory listing pages, while still parsing the document and path links except for the link to the parent directory, use one of the following, depending on the web server being indexed:</p>
<ul>
<li>
   For Netscape web servers, use the following:
<pre>
-indskip title &quot;*Index of*&quot;
-nofollow &quot;*parent directory*&quot;
</pre>
</li>
<li>
   For Microsoft Internet Information Server, use the following:
<pre>
-indskip a &quot;*to parent directory*&quot;
-nofollow &quot;*parent directory*&quot;
</pre>
</li>
</ul>
<h3><a name="wp1000220"></a>-maxdocsize</h3>
<p><strong>Syntax</strong>: <code>-maxdocsize integer</code></p>
<p>Specifies the maximum size, in kilobytes, for documents to be indexed. Any documents larger than the value specified by the <code>-maxdocsize</code> option are ignored.</p>
<p>The default is to index documents of any size.</p>
<h3><a name="wp1000214"></a>-metafile</h3>
<p><strong>Type</strong>: Web crawling only</p>
<p><strong>Syntax</strong>: <code>-metafile path_and_filename</code></p>
<p>Lets you use a text file to map custom meta tags to valid HTTP header fields. If you use backslashes, you must double them so that they are properly escaped; for example:</p>
<pre>C:\\test\\docs\\path
</pre><p>This means that you can use your own meta tag, in the document, to replace what is returned by the web server, or to insert it if nothing is returned. Currently, the only header fields of real value are &quot;Last-Modified&quot; and &quot;Content-Length.&quot; Future enhancements could allow for greater variety.</p>
<p>The following is the syntax for entries in the text file:</p>
<pre>name Last-Modified y|n
</pre><p>or</p>
<pre>name Content-Length y|n
</pre><p>Where <code>y|n</code> is an override flag, which can be yes or no.</p>
<h4><a name="wp1007208"></a>Example</h4>
<p>A mapping file for the <code>-metafile</code> option might include the following:</p>
<pre>Doc_Last_Touched Last-Modified n
Doc_Size Content-Length y
</pre><p>If you use the y override flag, the value for the custom meta tag overrides the value for the valid field, even if both values are present and differ. This can be useful when the valid field value is always sent, but you want to specify your own value with a custom meta tag.</p>
<p>If you use the n override flag, the value for the custom meta tag is used only if there is no value for the valid field returned by the server. If a value for the valid field exists, it is given precedence.</p>
<p><strong>Note: </strong>If you have several entries mapping to the same valid field, only the last entry takes effect.</p><h3><a name="wp1015449"></a>-mimeexclude</h3>
<p><strong>Syntax</strong>: <code>-mimeexclude mime_1 [mime_n] ...</code></p>
<p>Specifies MIME types that are neither followed nor indexed. </p>
<p>In Windows, include double-quotation marks around the argument to protect the special characters, such as the asterisk (*). On UNIX, use single-quotation marks. This is only required when you run the indexing job from a command line. Quotation marks are not necessary within a command file (the <code>-cmdfile</code> option).</p>
<p>The default is to include all MIME types. For the mime variable, you can include the asterisk (*) wildcard for text strings; for example:</p>
<pre>&#39;text/*&#39;
</pre><p>You cannot use the question mark (?) wildcard, and the <code>-regexp</code> option does not let you use regular expressions.</p>
<p>Use the <code>-indmimeexclude</code> option to allow Verity Spider to follow documents, without indexing them, to gain access to other desirable document types.</p>
<h3><a name="wp1000202"></a>-mimeinclude</h3>
<p><strong>Syntax</strong>: <code>-mimeinclude mime_1 [mime_n] ...</code></p>
<p>Specifies MIME types to be included.</p>
<p>In Windows, include double-quotation marks around the argument to protect the special characters, such as the asterisk (*). On UNIX, use single-quotation marks. This is only required when you run the indexing job from a command line. Quotation marks are not necessary within a command file (the <code>-cmdfile</code> option).</p>
<p>The default is to include all MIME types. For the mime variable, you can include the asterisk (*) wildcard for text strings; for example:</p>
<pre>&#39;text/*&#39;
</pre><p>You cannot use the question mark (?) wildcard, and the <code>-regexp</code> option does not let you use regular expressions.</p>
<h3><a name="wp1000196"></a>-mindocsize</h3>
<p><strong>Syntax</strong>: <code>-mindocsize integer</code></p>
<p>Specifies the minimum size, in kilobytes, for documents to be indexed. Any documents smaller than the value specified by the <code>-mindocsize</code> option are ignored.</p>
<p>The default is to index documents of any sizes.</p>
<h3><a name="wp1000460"></a>-skip</h3>
<p><strong>Type</strong>: Web crawling only</p>
<p><strong>Syntax</strong>: <code>-skip HTML_tag &quot;exp&quot;</code></p>
<p>Specifies that Verity Spider not index any HTML document that contains the text of exp within the given HTML_tag. For multiple HTML_tag and exp combinations, use multiple instances of the <code>-skip</code> option.</p>
<p>You can use wildcard expressions, where the asterisk (*) is for text strings and the question mark (?) is for single characters; for example:</p>
<pre>&#39;/my_doc*/year199?&#39;
</pre><p>In Windows, include double-quotation marks around the argument to protect the special characters, such as the asterisk (*). On UNIX, use single-quotation marks. This is only required when you run the indexing job from a command line. Quotation marks are not necessary within a command file (the <code>-cmdfile</code> option).</p>
<p>If you use backslashes, you must double them so that they are properly escaped; for example:</p>
<pre>C:\\test\\docs\\path
</pre><p>To use regular expressions, also specify the <code>-regexp</code> option.</p>
<h4><a name="wp1007428"></a>Example 1</h4>
<p>To skip all HTML documents that contain the word &quot;personnel&quot; in the Title element, use the following:</p>
<pre>-skip title &quot;personnel&quot;
</pre><h4><a name="wp1007433"></a>Example 2</h4>
<p>To skip all HTML documents that contain both the word &quot;private&quot; and the phrase &quot;internal user&quot; in any paragraph element, use the following:</p>
<pre>-skip title &quot;personnel&quot;
-skip p &quot;*internal use*&quot;
</pre><p>See also <a href="00001787.htm#999864">-regexp</a>.</p>


<hr />
<p align="right"><p align="right"><a href="00001790.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001792.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001791.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



