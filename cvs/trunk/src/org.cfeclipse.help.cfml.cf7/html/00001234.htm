<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Commits, rollbacks, and transactions</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001233.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001235.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Commits, rollbacks, and transactions</h1>
<p>Before you access data stored in a database, it is important to understand several database concepts, including:</p>
<ul>
<li>
   Commit
</li>
<li>
   Rollback
</li>
<li>
   Transactions
</li>
</ul>
<p>A database <i>commit</i> occurs when you make a permanent change to a database. For example, when&#160;you write a new row to a database, the write does not occur until the database commits the&#160;change.</p>
<p><i>Rollback</i> is the process of undoing a change to a database. For example, if you write a new row to a table, you can rollback the write up to the point where you commit the write. After the commit, you can no longer rollback the write. </p>
<p>Most databases support transactions where a transaction consists of one or more SQL statements. Within a transaction, your SQL statements can read, modify, and write a database. You end a transaction by either committing all your changes within the transaction or rolling back all of them. </p>
<p><i>Transactions</i> can be useful when you have multiple writes to a database and want to make sure all writes occurred without error before committing them. In this case, you wrap all writes within a single transaction and check for errors after each write. If any write causes an error, you rollback all of them. If all writes occur successfully, you commit the transaction. </p>
<p>A bank might use a transaction to encapsulate a transfer from one account to another. For example, if you transfer money from your savings account to your checking account, you do not want the bank to debit the balance of your savings account unless it also credits your checking account. If the update to the checking account fails, the bank can rollback the debit of the savings account as part of the transaction. </p>
<p>ColdFusion&#160;MX includes the <a href="00000346.htm#1104164"><code>cftransaction</code></a> tag that lets you implement database transactions for controlling rollback and commit. For more information, see <i>CFML Reference</i>.</p>


<hr />
<p align="right"><p align="right"><a href="00001233.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001235.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001234.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



