<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>CFML event gateway SendGatewayMessage data parameter</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000782.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000784.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>CFML event gateway SendGatewayMessage data parameter</h1>
<p>The ColdFusion CFML gateway type enables you to invoke CFC methods asynchronously. The structure that you use in the <code>SendGatewayMessage</code> function <i>data</i> parameter can include two types of fields:</p>
<ul>
<li>
   Any number of fields can contain arbitrary contents for use in by the CFC.
</li>
<li>
   Several optional fields can configure how the gateway delivers the information to the CFC. 
</li>
</ul>
<p>The CFML gateway looks for the following optional fields, and, if they exist, uses them to determine how it delivers the message. Do not use these field names for data that you send to your CFC method.</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Field
    </th>
    <th>
Use
    </th>
  </tr>
  <tr>
    <td>
<p>cfcpath</p>
    </td>
    <td>
<p>Overrides the CFC path specified in the ColdFusion MX Administrator. This field lets you use a single gateway configuration in the ColdFusion MX Administrator multiple CFCs. This field sets the CFEvent object CFCPath variable.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>method</p>
    </td>
    <td>
<p>Specifies the name of the method to invoke in the CFC. The default method is <code>onIncomingMessage</code>. This field lets you use a single gateway configuration in the ColdFusion MX Administrator for a CFC that has several methods. This field sets the CFEvent object CFCMethod variable.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>originatorID</p>
    </td>
    <td>
<p>Sets the originatorID field of the CFEvent object that ColdFusion MX delivers to the CFC. The default value is CFMLGateway.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>timeout</p>
    </td>
    <td>
<p>Sets the time-out, in seconds, during which the listener CFC must process the event request and return before ColdFusion gateway services terminates the request. The default value is the Timeout Request value set on the Server Settings page in the ColdFusion MX Administrator. Set this value if a request might validly take longer to process than the default time-out; for example, if the request involves a very long processing time. This field sets the CFEvent object CFCTimeout variable.</p>
    </td>
  </tr>
</table>

<h4><a name="wp1200829"></a>Example</h4>
<p>The following example consists of a CFML page that sends a message to a logevent method in the file logger.CFC. The CFML page specifies the CFC and method to call, and sets the OriginatorID. </p>
<pre>&lt;h3&gt;Sending an event using a generic CFML event gateway and specifying the CFC and method.&lt;/h3&gt;
&lt;cfscript&gt;
   status = False;
   props = structNew();
   props.cfcpath=&quot;C:\CFusionMX7\gateway\cfc\MyCFCs\logger.cfc&quot;;
   props.method=&quot;logEvent&quot;;
   props.OriginatorID=CGI.SCRIPT_NAME;
   props.Message=&quot;Replace me with a variable with data to log&quot;;
   props.file=&quot;GenericCFCtest&quot;;
   props.type=&quot;warning&quot;;
   status = SendGatewayMessage(&quot;DefaultCFC&quot;, props);
   if (status IS True) 
      WriteOutput(&#39;Event Message &quot;#props.Message#&quot; has been sent.&#39;);
&lt;/cfscript&gt;
</pre><p>The CFC method uses the OriginatorID and the message, file, and type fields of the CFEvent parameter's data field to specify the log file and message.</p>
<pre>&lt;cfcomponent&gt;
   &lt;cffunction name=&quot;logEvent&quot; output=&quot;no&quot;&gt;
      &lt;cfargument name=&quot;CFEvent&quot; type=&quot;struct&quot; required=&quot;yes&quot;&gt;
       &lt;cfscript&gt;
         if (NOT IsDefined(&quot;CFEvent.Data.file&quot;)) {
            CFEvent.Data.file=&quot;defaultEventLog&quot;; }
         if (NOT IsDefined(&quot;CFEvent.Data.type&quot;)) {
            CFEvent.Data.type=&quot;information&quot;; }
      &lt;/cfscript&gt;
      &lt;cflog text=&quot;Message from #CFEvent.originatorID#: #CFEvent.Data.message#&quot;
         file=&quot;#CFEvent.data.file#&quot; type=&quot;#CFEvent.Data.type#&quot; &gt;
   &lt;/cffunction&gt;
&lt;/cfcomponent&gt;
</pre><p></p>


<hr />
<p align="right"><p align="right"><a href="00000782.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000784.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000783.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



