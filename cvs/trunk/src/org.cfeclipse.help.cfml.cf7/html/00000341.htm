<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>cftextarea</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000340.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000342.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>cftextarea</h1>
<h4><a name="wp2773599"></a>Description</h4>
<p>Puts a multiline text entry box in a <a href="00000256.htm#2433198"><code>cfform</code></a> tag and controls its display characteristics. </p>
<h4><a name="wp2773604"></a>Category</h4>
<p><a href="00000205.htm#2459968">Forms tags</a></p>
<h4><a name="wp2773609"></a>Syntax</h4>
<pre>&lt;cftextarea <br />name = &quot;name&quot;<br />label = &quot;text&quot;<br />required = &quot;yes&quot; or &quot;no&quot;<br />style = &quot;style specification&quot;<br />validate = &quot;data type&quot;<br />validateAt= one or more of &quot;onBlur&quot;, &quot;onServer&quot;, &quot;onSubmit&quot;<br />message = &quot;text&quot;<br />range = &quot;min_value, max_value&quot;<br />maxlength = &quot;number&quot;<br />pattern = &quot;regexp&quot;<br />onValidate = &quot;script name&quot;<br />onError = &quot;script name&quot;<br />disabled = &quot;true&quot; &quot;false&quot; or no attribute value<br />value = &quot;text&quot;<br />onKeyUp = &quot;JavaScript or ActionScript&quot;<br />onKeyDown = &quot;JavaScript or ActionScript&quot;<br />onMouseUp = &quot;JavaScript or ActionScript&quot;<br />onMouseDown = &quot;JavaScript or ActionScript&quot;<br />onChange = &quot;JavaScript or ActionScript&quot;<br />onClick = &quot;JavaScript or ActionScript&quot;<br />visible = &quot;Yes&quot; or &quot;No&quot;<br />enabled = &quot;Yes&quot; or &quot;No&quot;<br />tooltip = &quot;Tip text&quot;<br />height = &quot;number of pixels&quot; Flash only<br />width = &quot;number of pixels&quot; Flash only<br />&gt;<br /><i>&#160;&#160;&#160;text<br /></i>&lt;/cftextarea&gt;
</pre><h4><a name="wp2780821"></a>See also</h4>
<p><a href="00000216.htm#1097239">cfapplet</a>, <a href="00000223.htm#3798877">cfcalendar</a>, <a href="00000256.htm#2433198">cfform</a>, <a href="00000257.htm#3833404">cfformgroup</a>, <a href="00000258.htm#3768073">cfformitem</a>, <a href="00000266.htm#1836171">cfgrid</a>, <a href="00000279.htm#1100379">cfinput</a>, <a href="00000331.htm#2553073">cfselect</a>, <a href="00000337.htm#2612389">cfslider</a>, <a href="00000347.htm#1104271">cftree</a>; <a href="00001330.htm#1096836">Introduction to Retrieving and Formatting Data</a> in <i>ColdFusion MX Developer's Guide</i></p>
<h4><a name="wp2773646"></a>History</h4>
<p>ColdFusion&#160;MX&#160;7: Added this tag.</p>
<h4><a name="wp2773651"></a>Attributes</h4>
<p>The following table lists attributes that ColdFusion uses directly. In HTML format, the tag also supports all HTML <code>textarea</code> tag attributes that are not on this list, and passes them directly to the browser.</p>
<p><strong>Note: </strong>Attributes that are marked as Flash only are not handled by the skins provided with ColdFusion MX. They are, however, included in the generated XML.</p><table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Attribute
    </th>
    <th>
Req/Opt;
Format
    </th>
    <th>
Default
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<p>name</p>
    </td>
    <td>
<p>Required;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Name of the <code>cftextinput</code> control.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>label</p>
    </td>
    <td>
<p>Optional;</p>
<p>Flash and XML</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Label to put beside the control on a form.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>style</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>In HTML or XML format forms, ColdFusion passes the <code>style</code> attribute to the browser or XML.</p>
<p>In Flash format forms, must be a style specification in CSS format, with the same syntax and contents as used in Macromedia Flex for the corresponding Flash element.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>required</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>no</p>
    </td>
    <td>
<ul>
<li>
   yes: the field must contain text.
</li>
<li>
   no: the field can be empty.
</li>
</ul>
    </td>
  </tr>
  <tr>
    <td>
<p>validate</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>The type or types of validation to do. Available validation types and algorithms depend on the format. For details, see the Usage section of the <a href="00000279.htm#1100379">cfinput</a> tag reference.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>validateAt</p>
    </td>
    <td>
<p>Optional;</p>
<p>HTML and XML</p>
    </td>
    <td>
<p>onSubmit</p>
    </td>
    <td>
<p>How to do the validation; one or more of the following:</p>
<ul>
<li>
   onSubmit
</li>
<li>
   onServer 
</li>
<li>
   onBlur
</li>
</ul>
<p>For Flash format forms, onSubmit and onBlur are identical; validation is done when the user submits the form. For multiple values, use a comma-delimited list. </p>
<p>For details, see the Usage section of the <a href="00000279.htm#1100379">cfinput</a> tag reference.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>message</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Message text to display if validation fails.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>range</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Minimum and maximum allowed numeric values. ColdFusion uses this attribute only if you specify <i>range</i> in the <code>validate</code> attribute. </p>
<p>If you specify a single number or a single number followed by a comma, it is treated as a minimum, with no maximum. If you specify a comma followed by a number, the maximum is set to the specified number, with no minimum.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>maxLength</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>The maximum length of text that can be entered. ColdFusion uses this attribute only if you specify <i>maxlength</i> in the <code>validate</code> attribute.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>pattern</p>
    </td>
    <td>
<p>Required if <code>validate = &quot;regular_<br />expression&quot;</code></p>
<p>HTML and XML.</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>JavaScript regular expression pattern to validate input. Omit leading and trailing slashes. ColdFusion uses this attribute only if you specify <i>regex</i> in the <code>validate</code> attribute. For examples and syntax, see <a href="00001349.htm#1102770">Building Dynamic Forms with cfform Tags</a> in <i>ColdFusion MX Developer's Guide</i>.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>onValidate</p>
    </td>
    <td>
<p>Optional;</p>
<p>HTML and XML</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Custom JavaScript function to validate user input. The JavaScript DOM form object, input object, and input object value are passed to routine, which should return True if validation succeeds, False otherwise. If you specify this attribute, ColdFusion ignores the <code>validate</code> attribute.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>onError</p>
    </td>
    <td>
<p>Optional;</p>
<p>HTML and XML</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Custom JavaScript function to execute if validation fails. </p>
    </td>
  </tr>
  <tr>
    <td>
<p>disabled</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>not disabled</p>
    </td>
    <td>
<p>Disables user input, making the control read-only. To disable input, specify <code>disabled</code> without an attribute, or <code>disabled=&quot;Yes&quot;</code> (or any ColdFusion positive Boolean value, such as True). To enable input, omit the attribute or specify <code>disabled=&quot;No&quot;</code> (or any ColdFusion negative Boolean value, such as False).</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>value</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Initial value to display in text control. You can specify an initial value as an attribute or in the tag body, but not in both places. If you specify the value as an attribute, you must put the closing <code>cftextarea</code> tag immediately after the opening <code>cftextarea</code> tag, with no spaces or line feeds between, or place a closing slash at the end of the opening  <code>cftextarea</code> tag; for example <code>&lt;cftextarea</code> <code>name=&quot;description&quot;</code> <code>value=&quot;Enter</code> <code>a</code> <code>description.&quot;</code> <code>/&gt;</code>.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>bind</p>
    </td>
    <td>
<p>Optional;</p>
<p>Flash</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>A Flex bind expression that populates the field with information from other form fields. For details, see Usage.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>onKeyUp</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>JavaScript (HTML/XML) or ActionScript (Flash) to run when the user releases a keyboard key in the control.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>onKeyDown</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>JavaScript (HTML/XML) or ActionScript (Flash) ActionScript to run when the user presses a keyboard key in the control.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>onMouseUp</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>JavaScript (HTML/XML) or ActionScript (Flash) to run when the user presses a mouse button in the control.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>onMouseDown</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>JavaScript (HTML/XML) or ActionScript (Flash) to run when the user releases a mouse button in the control.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>onChange</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>JavaScript (HTML/XML) or ActionScript (Flash) to run when the control changes due to user action.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>onClick</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>JavaScript (HTML/XML) to run when the user clicks the control. Not supported for Flash forms.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>enabled</p>
    </td>
    <td>
<p>Optional;</p>
<p>Flash</p>
    </td>
    <td>
<p>Yes</p>
    </td>
    <td>
<p>Boolean value specifying whether the control is enabled. A disabled control appears in light gray. The inverse of the <code>disabled</code> attribute.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>visible</p>
    </td>
    <td>
<p>Optional;</p>
<p>Flash</p>
    </td>
    <td>
<p>Yes</p>
    </td>
    <td>
<p>Boolean value specifying whether to show the control. Space that would be occupied by an invisible control is blank.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>tooltip</p>
    </td>
    <td>
<p>Optional;</p>
<p>Flash</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Text to display when the mouse pointer hovers over the control.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>height</p>
    </td>
    <td>
<p>Optional;</p>
<p>Flash</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>The height of the control, in pixels.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>width</p>
    </td>
    <td>
<p>Optional;</p>
<p>Flash</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>The width of the control, in pixels.</p>
    </td>
  </tr>
</table>

<p><strong>Note: </strong>Attributes that are marked as Flash only are not handled by the skins provided with ColdFusion MX. They are, however, included in the generated XML.</p><h4><a name="wp2780500"></a>Usage</h4>
<p>For this tag to work properly in HTML format. the browser must be JavaScript-enabled.</p>
<p>If you put text in the tag body, the control displays all text characters between the <code>cftextarea</code> opening and closing tags; therefore, if you use line feeds or white space to format your source text, they appear in the control. </p>
<p>If the <code>cfform preserveData</code> attribute is <code>&quot;yes&quot;</code>, and the form posts back to the same page, the posted value (not the value of the <code>value</code> attribute) of the <code>cftextinput</code> control is used.</p>
<h4><a name="wp2791865"></a>Validation</h4>
<p>For a detailed description of the <code>validation</code> attribute and the types of validation supported by ColdFusion, see the Usage section of the <a href="00000279.htm#1100379">cfinput</a> tag reference. For more details on ColdFusion MX validation techniques, see <a href="00001376.htm#1096836">Validating Data</a> in <i>ColdFusion MX Developer's Guide</i>.</p>
<h4><a name="wp2791867"></a>Flash form data binding</h4>
<p>The <code>bind</code> attribute lets you populate form fields using the contents of other form fields. To specify text from another field in a <code>cftextarea</code> <code>bind</code> attribute, use the following format:</p>
<p>{<i>sourceTagName</i>.text}</p>
<p>For example, the following line uses the value of the text that the user enters in the from the userName field in the greeting in the comment text box. The user can change or replace this message with a typed entry.</p>
<pre>&lt;cfformitem type=&quot;text&quot;&gt;
Enter your name here&lt;/cfformitem&gt;
&lt;cftextarea name=&quot;userName&quot; height=&quot;20&quot; Width=&quot;500&quot;/&gt; 
&lt;cftextarea name=&quot;comment&quot; html height=&quot;300&quot; Width=&quot;500&quot; 
   bind=&quot;Hello {userName.text}!
 Enter your comments here.&quot; /&gt; 
</pre><h4><a name="wp2773895"></a>Example</h4>
<p>This example has two <code>cftextarea</code> controls. When you submit the form, ColdFusion copies the text from the first control into the second. The onBlur maxlength validation prevents you from entering more than 100 characters. The &gt; character that closes the <code>cftextarea</code> opening tag, the text in the tag body, and the <code>cftextarea</code> closing tag are on a single line to ensure that only the desired text displays, but the line is split in this example for formatting purposes.</p>
<pre>&lt;h3&gt;cftextarea Example&lt;/h3&gt;
&lt;cfparam name=&quot;text2&quot; default=&quot;&quot;&gt;
&lt;cfif isdefined(&quot;form.textarea1&quot;) AND (form.textarea1 NEQ &quot;&quot;)&gt;
   &lt;cfset text2=form.textarea1&gt;
&lt;/cfif&gt;

&lt;cfform name=&quot;form1&quot;&gt;
   &lt;cftextarea name=&quot;textarea1&quot; wrap=&quot;virtual&quot; rows=&quot;5&quot; cols=&quot;25&quot;
   validate=&quot;maxlength&quot; validateAt=&quot;onBlur&quot; maxlength=&quot;100&quot; 
   &gt;Replace this text. Maximum length is 100 Characters, and this text is<br />currently 99 characters long.&lt;/cftextarea&gt;
   &lt;cftextarea name=&quot;textarea2&quot; wrap=&quot;virtual&quot; rows=&quot;5&quot; cols=&quot;50&quot; value=&quot;#text2#&quot; /&gt;&lt;br&gt;&lt;br&gt;
   &lt;input type=&quot;submit&quot; value=&quot;submit field&quot;&gt;&lt;br&gt;
&lt;/cfform&gt;
</pre>

<hr />
<p align="right"><p align="right"><a href="00000340.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000342.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000341.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



