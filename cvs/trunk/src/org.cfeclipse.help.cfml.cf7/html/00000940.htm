<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>About dynamic expressions and dynamic evaluation</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000939.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000941.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>About dynamic expressions and dynamic evaluation</h1>
<p>In a <i>dynamic expression</i>, the actual expression, not just its variable values, is determined at execution time. In other words, in a dynamic expression the structure of the expression, such as the names of the variables, not just the values of the variables, gets built at runtime. </p>
<p>You create dynamic expressions using <i>string expressions</i>, which are expressions contained in strings, (that is, surrounded with quotation marks). <i>Dynamic evaluation</i> is the process of evaluating a string expression. The <a href="00000458.htm#1104252"><code>Evaluate</code></a> and <a href="00000507.htm#1105815"><code>IIf</code></a> functions, and only these functions, perform dynamic evaluation.</p>
<p>When ColdFusion performs dynamic evaluation it does the following:</p>
<ol>
<li>
   Takes a string expression and treats it as a standard expression, as if the expression was not a string.
</li>
<li>
   Parses the expression to determine the elements of the expression and validate the expression syntax.
</li>
<li>
   Evaluates the expression, looking up any variables and replacing them with their values, calling any functions, and performing any required operations.
</li>
</ol>
<p>This process enables ColdFusion to interpret dynamic expressions with variable parts. However, it incurs a substantial processing overhead.</p>
<p>Dynamic expressions were important in early versions of ColdFusion, before it supported arrays and structures, and they still can be useful in limited circumstances. However, the ability to use structures and the ability to use associative array notation to access structure elements provide more efficient and easier methods for dynamically managing data. For information on using arrays and structures, see <a href="00000950.htm#1101236">Using Arrays and Structures</a>.</p>
<h3><a name="wp2772333"></a>Selecting how to create variable names</h3>
<p>The following two examples describes cases when you need dynamic variable names:</p>
<ul>
<li>
   Form applications where the number and names of fields on the form vary dynamically. In this case, the form posts only the names and values of its fields to the action page. The action page does not know all the names of the fields, although it does know how the field names (that is, the variable names) are constructed.
</li>
<li>
   If the following are true:
<ul><li>ColdFusion calls a custom tag multiple times.</li>
<li>The custom tag result must be returned to different variables each time.</li>
<li>The calling code can specify the variable in which to return the custom tag result.</li>
<p>In this case, the custom tag does not know the return variable name in advance, and gets it as an attribute value.</p>
</ul></li>
</ul>
<p>In both cases, it might appear that dynamic expressions using the <a href="00000458.htm#1104252"><code>Evaluate</code></a> function are needed to construct the variable names. However, you can achieve the same ends more efficiently by using dynamic variable naming, as shown in <a href="00000949.htm#2735530">Example: a dynamic shopping cart</a>. </p>
<p>This does not mean that you must always avoid dynamic evaluation. However, given the substantial performance costs of dynamic evaluation, you should first ensure that one of the following techniques cannot serve your purpose:</p>
<ul>
<li>
   An array (using index variables)
</li>
<li>
   Associative array references containing expressions to access structure elements
</li>
<li>
   Dynamically generated variable names
</li>
</ul>


<hr />
<p align="right"><p align="right"><a href="00000939.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000941.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000940.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



