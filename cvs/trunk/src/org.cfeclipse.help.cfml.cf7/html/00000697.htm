<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>onError</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000696.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000698.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>onError</h1>
<h4><a name="wp1188544"></a>Description</h4>
<p>Runs when an uncaught exception occurs in the application.</p>
<h4><a name="wp1188546"></a>Syntax</h4>
<pre>&lt;cffunction name=&quot;onError&quot; returnType=&quot;void&quot;&gt;
   &lt;cfargument name=&quot;<i>Exception</i>&quot; required=true/&gt;
   &lt;cfargument name=&quot;<i>EventName</i>&quot; type=&quot;String&quot; required=true/&gt;
   ...
&lt;/cffunction&gt;
</pre><h4><a name="wp1188552"></a>See also</h4>
<p><a href="00000694.htm#1190269">Method summary</a>, <a href="00001121.htm#1191865">Handling errors in Application.cfc</a> in <i>ColdFusion MX Developer's Guide</i></p>
<h4><a name="wp1188557"></a>Parameters</h4>
<p>ColdFusion MX passes the following parameters to the method:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Parameter
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<p><i>Exception</i></p>
    </td>
    <td>
<p>The ColdFusion MX Exception object. For information on the structure of this object, see the description of the <code>cfcatch</code> variable in the <a href="00000225.htm#3395038">cfcatch</a> description.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p><i>EventName</i></p>
    </td>
    <td>
<p>The name of the event handler that generated the exception. If the error occurs during request processing and you do not implement an <code>onRequest</code> method, this is the empty string.</p>
    </td>
  </tr>
</table>

<h4><a name="wp1188575"></a>Returns</h4>
<p>This method does not return a value; do not use the <code>cfreturn</code> tag.</p>
<h4><a name="wp1188577"></a>Usage</h4>
<p>Use this method to handle errors in an application-specific manner. This method overrides any error handlers that you set in the ColdFusion MX Administrator or in <a href="00000242.htm#2022557">cferror</a> tags. It does not override try/catch blocks.</p>
<p>Whether the <code>onError</code> method can display output depends on where the error takes place, as follows:</p>
<ul>
<li>
   The <code>onError</code> method can display a message to the user if an error occurs during an <code>onApplicationStart</code>, <code>onSessionStart</code>, <code>onRequestStart</code>, <code>onRequest</code>, or <code>onRequestEnd</code> event method, or while processing a request.
</li>
<li>
   The <code>onError</code> method cannot display output to the user if the error occurs during an <code>onApplicationEnd</code> or <code>onSessionEnd</code> event method, because there is no available page context; however, it can log an error message.
</li>
</ul>
<p>If the <code>onError</code> event handler is triggered by a scope-specific event method, such as <code>onSessionStart</code>, the error prevents further processing at the level of that scope and any lower scopes. An <code>onError</code> event triggered by an <code>onSessionStart</code> method, for example, prevents further processing in the session, but not in the application.</p>
<p>If an exception occurs while processing the <code>onError</code> method, or if the <code>onError</code> method uses a <code>cfthrow</code> tag, the ColdFusion MX standard error handling mechanisms handle the exception. These mechanisms include: any error handlers specified by <code>cferror</code> tags in the Application.cfc initialization code, the site-wide error handler specified in the ColdFusion MX Administrator, and ColdFusion MX default error page. Therefore, you can use the <code>onError</code> method as a filter to handle selected errors, and use other ColdFusion error-handling techniques for the remaining errors.</p>
<h4><a name="wp1188585"></a>Example</h4>
<pre>&lt;cffunction name=&quot;onError&quot;&gt;
   &lt;cfargument name=&quot;Exception&quot; required=true/&gt;
   &lt;cfargument type=&quot;String&quot; name=&quot;EventName&quot; required=true/&gt;
   &lt;!--- Log all errors. ---&gt;
   &lt;cflog file=&quot;#This.Name#&quot; type=&quot;error&quot; 
         text=&quot;Event Name: #Arguments.Eventname#&quot; &gt;
   &lt;cflog file=&quot;#This.Name#&quot; type=&quot;error&quot; 
         text=&quot;Message: #Arguments.Exception.message#&quot;&gt;
   &lt;cflog file=&quot;#This.Name#&quot; type=&quot;error&quot; 
      text=&quot;Root Cause Message: #Arguments.Exception.rootcause.message#&quot;&gt;
   &lt;!--- Display an error message if there is a page context. ---&gt;
   &lt;cfif NOT (Arguments.EventName IS &quot;onSessionEnd&quot;) OR 
         (Arguments.EventName IS &quot;onApplicationEnd&quot;)&gt;
      &lt;cfoutput&gt;
         &lt;h2&gt;An unexpected error occurred.&lt;/h2&gt;
         &lt;p&gt;Please provide the following information to technical support:&lt;/p&gt;
         &lt;p&gt;Error Event: #Arguments.EventName#&lt;/p&gt;
         &lt;p&gt;Error details:&lt;br&gt;
         &lt;cfdump var=#Arguments.Exception#&gt;&lt;/p&gt;
      &lt;/cfoutput&gt;
   &lt;/cfif&gt;
&lt;/cffunction&gt;
</pre>

<hr />
<p align="right"><p align="right"><a href="00000696.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000698.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000697.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



