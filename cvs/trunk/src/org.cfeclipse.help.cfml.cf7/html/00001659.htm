<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Status and request-handling CFC</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001658.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001660.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Status and request-handling CFC</h1>
<p>The following CFC handles all IM events, except onIncomingMessage. It maintains an Application scope buddyStatus structure that contains information on the gateway buddies. This structure limits the interactions that are needed with the IM server to get buddy and status information. The application also logs significant events, such as requests to add buddies and error messages from the IM server. In particular, it does the following:</p>
<ul>
<li>
   The <code>onBuddyStatus</code> function updates the Application scope buddy status structure when the gateway gets an event message indicating that a buddy's status has changed.
</li>
<li>
   The <code>onAddBuddyRequest</code> function searches for the requested buddy's name in a data source. If it finds a single instance of the name, it adds the buddy and updates the status in the Application scope buddyStatus structure. If it doesn't find name, it declines the buddy request. If it finds multiple instances of the name, it tells the gateway to take no action. It also logs all actions. 
</li>
<li>
   The <code>onAddBuddyResponse</code> function adds the buddy to the Application scope buddy status structure if the buddy request is accepted, and sets the current status. It logs all responses.
</li>
<li>
   The <code>onIMServerMessage</code> function logs all messages that it receives.
</li>
</ul>
<p>This example uses the IM_ID column of the Employees database of the cfdocexamples database that is included with ColdFusion&#160;MX&#160;7. The entries in this column assume that you use an XMPP server &quot;company.&quot; To run this example you must configure an XMPP server with this name and with clients with names in this database, or you must change the database entries to match IM server clients. You must also configure a gateway instance in the ColdFusion&#160;MX Administrator that uses this server.</p>
<p>The following listing shows the CFC code:</p>
<pre>&lt;cfcomponent&gt;

&lt;cffunction name=&quot;onBuddyStatus&quot;&gt;
   &lt;cfargument name=&quot;CFEvent&quot; type=&quot;struct&quot; required=&quot;YES&quot;&gt;
   &lt;cflock scope=&quot;APPLICATION&quot; timeout=&quot;10&quot; type=&quot;EXCLUSIVE&quot;&gt;
      &lt;cfscript&gt;
      // Create the status structures if they don't exist.
         if (NOT StructKeyExists(Application, &quot;buddyStatus&quot;)) {
            Application.buddyStatus=StructNew();
         }
         if (NOT StructKeyExists(Application.buddyStatus, CFEvent.Data.BUDDYNAME)) {
            Application.buddyStatus[#CFEvent.Data.BUDDYNAME#]=StructNew();
         }
         // Save the buddy status and timestamp.
         Application.buddyStatus[#CFEvent.Data.BUDDYNAME#].status=CFEvent.Data.BUDDYSTATUS;
         Application.buddyStatus[#CFEvent.Data.BUDDYNAME#].timeStamp=CFEvent.Data.TIMESTAMP;
      &lt;/cfscript&gt;
   &lt;/cflock&gt;
&lt;/cffunction&gt;
   
&lt;cffunction name=&quot;onAddBuddyRequest&quot;&gt;
   &lt;cfargument name=&quot;CFEvent&quot; type=&quot;struct&quot; required=&quot;YES&quot;&gt;
   &lt;cfquery name=&quot;buddysearch&quot; datasource=&quot;cfdocexamples&quot;&gt;
      select IM_ID
      from Employees
      where IM_ID = &#39;#CFEvent.Data.SENDER#&#39;
   &lt;/cfquery&gt;
   &lt;cflock scope=&quot;APPLICATION&quot; timeout=&quot;10&quot; type=&quot;EXCLUSIVE&quot;&gt;
      &lt;cfscript&gt;
         // If the name is in the DB once, accept; if it is missing, decline.
         // If it is in the DB multiple times, take no action.
         if (buddysearch.RecordCount IS 0) {
            action=&quot;decline&quot;;
            reason=&quot;Invalid ID&quot;;
         }
         else if (buddysearch.RecordCount IS 1) {
            action=&quot;accept&quot;;
            reason=&quot;Valid ID&quot;;
            //Add the buddy to the buddy status structure only if accepted.
            if (NOT StructKeyExists(Application,
                  &quot;buddyStatus&quot;)) {
               Application.buddyStatus=StructNew();
            }
            if (NOT StructKeyExists(Application.buddyStatus,
                  CFEvent.Data.SENDER)) {
               Application.buddyStatus[#CFEvent.Data.SENDER#]=StructNew();
            }
            Application.buddyStatus[#CFEvent.Data.SENDER#].status=
               &quot;Accepted Buddy Request&quot;;
            Application.buddyStatus[#CFEvent.Data.SENDER#].timeStamp=
               CFEvent.Data.TIMESTAMP;
            Application.buddyStatus[#CFEvent.Data.SENDER#].message=
               CFEvent.Data.MESSAGE;
         }
         else {
            action=&quot;noact&quot;;
            reason=&quot;Duplicate ID&quot;;
         }
      &lt;/cfscript&gt;
   &lt;/cflock&gt;
   &lt;!--- Log the request and decision information. ---&gt;
   &lt;cflog file=&quot;#CFEvent.GatewayID#Status&quot; 
         text=&quot;onAddBuddyRequest; SENDER: #CFEvent.Data.SENDER# MESSAGE: #CFEvent.Data.MESSAGE# TIMESTAMP: #CFEvent.Data.TIMESTAMP# ACTION: #action#&quot;&gt;
   &lt;!--- Return the action decision. ---&gt;
   &lt;cfset retValue = structNew()&gt;
   &lt;cfset retValue.command = action&gt;
   &lt;cfset retValue.BuddyID = CFEvent.DATA.SENDER&gt;
   &lt;cfset retValue.Reason = reason&gt;
   &lt;cfreturn retValue&gt; 
&lt;/cffunction&gt;

   
&lt;cffunction name=&quot;onAddBuddyResponse&quot;&gt;
   &lt;cfargument name=&quot;CFEvent&quot; type=&quot;struct&quot; required=&quot;YES&quot;&gt;
   &lt;cflock scope=&quot;APPLICATION&quot; timeout=&quot;10&quot; type=&quot;EXCLUSIVE&quot;&gt;
      &lt;cfscript&gt;
         //Do the following only if the buddy accepted the request.
         if (NOT StructKeyExists(Application, &quot;buddyStatus&quot;)) {
            Application.buddyStatus=StructNew();
            }
         if (#CFEVENT.Data.MESSAGE# IS &quot;accept&quot;) {
            //Create a new entry in the buddyStatus record for the buddy.
            if (NOT StructKeyExists(Application.buddyStatus,
                  CFEvent.Data.SENDER)) {
               Application.buddyStatus[#CFEvent.Data.SENDER#]=StructNew();
            }
            //Set the buddy status information to indicate buddy was added.
            Application.buddyStatus[#CFEvent.Data.SENDER#].status=
               &quot;Buddy accepted us&quot;;
            Application.buddyStatus[#CFEvent.Data.SENDER#].timeStamp=
               CFEvent.Data.TIMESTAMP;
            Application.buddyStatus[#CFEvent.Data.SENDER#].message=
               CFEvent.Data.MESSAGE;
         }
      &lt;/cfscript&gt;
   &lt;/cflock&gt;
   &lt;!--- Log the information for all responses. ---&gt;
   &lt;cflog file=&quot;#CFEvent.GatewayID#Status&quot; 
      text=&quot;onAddBuddyResponse; BUDDY: #CFEvent.Data.SENDER# RESPONSE: #CFEvent.Data.MESSAGE# TIMESTAMP: #CFEvent.Data.TIMESTAMP#&quot;&gt;
&lt;/cffunction&gt;

   
&lt;cffunction name=&quot;onIMServerMessage&quot;&gt;
   &lt;!--- This function just logs the message. ---&gt;
   &lt;cfargument name=&quot;CFEvent&quot; type=&quot;struct&quot; required=&quot;YES&quot;&gt;
   &lt;cflog file=&quot;#CFEvent.GatewayID#Status&quot; 
      text=&quot;onIMServerMEssage; SENDER: #CFEvent.OriginatorID# MESSAGE: #CFEvent.Data.MESSAGE# TIMESTAMP: #CFEvent.Data.TIMESTAMP#&quot;&gt;
&lt;/cffunction&gt;   
&lt;/cfcomponent&gt;
</pre>

<hr />
<p align="right"><p align="right"><a href="00001658.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001660.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001659.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



