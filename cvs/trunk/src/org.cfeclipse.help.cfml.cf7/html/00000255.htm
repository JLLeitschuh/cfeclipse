<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>cfflush</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000254.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000256.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>cfflush</h1>
<h4><a name="wp2130749"></a>Description</h4>
<p>Flushes currently available data to the client.</p>
<h4><a name="wp2130752"></a>Category</h4>
<p><a href="00000199.htm#2459638">Data output tags</a>, <a href="00000207.htm#2460108">Page processing tags</a></p>
<h4><a name="wp2130757"></a>Syntax</h4>
<pre>&lt;cfflush<br />   interval = &quot;integer number of bytes&quot;&gt;
</pre><h4><a name="wp2130759"></a>See also</h4>
<p><a href="00000222.htm#1097532"><code>cfcache</code></a><code>, </code><a href="00000270.htm#1355655"><code>cfheader</code></a><code>, </code><a href="00000277.htm#1100248"><code>cfinclude</code></a><code>, </code><a href="00000335.htm#1103514"><code>cfsetting</code></a><code>, </code><a href="00000336.htm#1103549"><code>cfsilent</code></a></p>
<h4><a name="wp2220091"></a>Attributes</h4>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Attribute
    </th>
    <th>
Req/Opt
    </th>
    <th>
Default
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<p>interval</p>
    </td>
    <td>
<p>Optional</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Integer. Flushes output each time this number of bytes becomes available. HTML headers, and data that is already available when the tag is executed, are omitted from the count.</p>
    </td>
  </tr>
</table>

<h4><a name="wp2130788"></a>Usage</h4>
<p>The first occurrence of this tag on a page sends back the HTML headers and any other available HTML. Subsequent <code>cfflush</code> tags on the page send only the output that was generated after the previous flush.</p>
<p>When you flush data, ensure that enough information is available, as some browsers might not respond if you flush only a small amount. Similarly, set the <code>interval</code> attribute for a few hundred bytes or more, but not thousands of bytes.</p>
<p>Use the <code>interval</code> attribute only when a large amount of output will be sent to the client, such as in a <code>cfloop </code>or a <code>cfoutput</code> of a large query. Using this form globally (such as in the Application.cfm file) might cause unexpected errors when CFML tags that modify HTML headers are executed. </p>
<p><strong>Caution: </strong>Because the <code>cfflush</code> tag sends data to the browser when it executes, it has several limitations, including the following: Using any of the following tags or functions on a page anywhere after the <code>cfflush</code> tag can cause errors or unexpected results: <code>cfcontent</code>, <code>cfcookie</code><code>,</code> <code>cfform</code>, <code>cfheader</code>, <code>cfhtmlhead</code>, <code>cflocation</code>, and <code>SetLocale</code>. (These tags and functions normally modify the HTML header, but cannot do so after a <code>cfflush</code> tag, because the <code>cfflush</code> sends the header.) Using the <code>cfset</code> tag to set a cookie anywhere on a page that has a <code>cfflush</code> tag does not set the cookie in the browser. Using the <code>cfflush</code> tag within the body of several tags, including <code>cfsavecontent</code>, <code>cfquery</code>, and custom tags, cause errors. If you save Client variables as cookies, any client variables that you set after a <code>cfflush</code> tag are not saved in the browser.</p><p><strong>Note: </strong>Normally, the <code>cferror</code> tag discards the current output buffer and replaces it with the contents of the error page. The <code>cfflush</code> tag discards the current buffer. As a result, the <code>Error.GeneratedContent</code> variable resulting from a <code>cferror</code> tag after a <code>cfflush</code> contains any contents of the output buffer that has not been flushed. This content is not sent to the client. The content of the error page displays to the client after the bytes that have been sent.</p><h4><a name="wp3702966"></a>Example</h4>
<p>The following example uses <code>cfloop</code> tags and the <code>rand</code> random number generating function to delay data display. It simulates a page that is slow to generate data.</p>
<pre>&lt;h1&gt;Your Magic numbers&lt;/h1&gt;
&lt;p&gt;It will take us a little while to calculate your ten magic numbers. It takes a lot of work to find numbers that truly fit your personality. So relax for a minute or so while we do the hard work for you.&lt;/p&gt;
&lt;H2&gt;We are sure you will agree it was worth the short wait!&lt;/H2&gt;
&lt;cfflush&gt;

&lt;cfflush interval=10&gt;
&lt;!--- Delay Loop to make it seem harder. ---&gt;
&lt;cfloop index=&quot;randomindex&quot; from=&quot;1&quot; to=&quot;200000&quot; step=&quot;1&quot;&gt;
   &lt;cfset random=rand()&gt;
&lt;/cfloop&gt;

&lt;!--- Now slowly output 10 random numbers. ---&gt;
&lt;cfloop index=&quot;Myindex&quot; from=&quot;1&quot; to=&quot;10&quot; step=&quot;1&quot;&gt;
   &lt;cfloop index=&quot;randomindex&quot; from=&quot;1&quot; to=&quot;100000&quot; step=&quot;1&quot;&gt;
      &lt;cfset random=rand()&gt;
   &lt;/cfloop&gt;
   &lt;cfoutput&gt;
      Magic number #Myindex# is:&amp;nbsp;&amp;nbsp;#RandRange( <br />100000, 999999)#&lt;br&gt;&lt;br&gt;
   &lt;/cfoutput&gt;
&lt;/cfloop&gt;
</pre>

<hr />
<p align="right"><p align="right"><a href="00000254.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000256.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000255.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



