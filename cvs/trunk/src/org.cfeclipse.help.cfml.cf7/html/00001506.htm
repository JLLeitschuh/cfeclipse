<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>About XML and ColdFusion</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001505.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001507.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>About XML and ColdFusion</h1>
<p>In the last few years, XML has rapidly become the universal language for representing documents and data on the web. These documents can extend beyond the traditional concept of a paper document or its equivalent. For example, XML is often used to represent database or directory information. XML is also commonly used to represent transaction information, such as product orders or receipts, and for information such as inventory records and employee data.</p>
<p>Because XML represents data in a tagged, textual format it is an excellent tool for representing information that must be shared between otherwise-independent applications such as order entry and inventory management. No application needs to know anything about the other. Each application only needs to be prepared to get data in a format that is structured according to the XML DTD or Schema. For example, in a distributed order processing application, the order placement component, order fulfilment component, inventory management component, and billing component can all share information with each other in XML format. They could use a common XML DTD, of different components could communicate with each other using different DTDs.</p>
<p>After an application parses the XML document, it can then manipulate the information in any way that is appropriate. For example, you can convert tabular XML data into a ColdFusion recordset, perform queries on the data and then export the data an XML document. For example, the code in <a href="00001522.htm#1134549">Example: using XML in a ColdFusion application</a> takes a customer order in XML, converts the data to a recordset, and uses a query to determine the order cost. It then prepares a receipt as an XML document.</p>
<p>ColdFusion provides a comprehensive and easy-to-use set of tools for creating and using XML documents. ColdFusion lets you do the following with XML documents:</p>
<ul>
<li>
   Convert XML text into ColdFusion XML document objects.
</li>
<li>
   Create new ColdFusion XML document objects.
</li>
<li>
   Modify ColdFusion XML document objects.
</li>
<li>
   Validate XML against a DTD or Schema
</li>
<li>
   Transform XML using XSLT (Extensible Stylesheet Language Transformation).
</li>
<li>
   Extract data from XML documents using XPath expressions.
</li>
<li>
   Convert ColdFusion XML document objects to text and save them in files.
</li>
</ul>
<p>ColdFusion MX can also represent forms that you create using the <a href="00000256.htm#2433198"><code>cfform</code></a> tag as XML. You can have ColdFusion generate the XML and process it using an XSLT skin to generate output for display, or ColdFusion MX can generate XML text and put it in a variable for further processing. For more information on XML Forms, see <a href="00001409.htm#118763">Creating Skinnable XML Forms</a>.</p>


<hr />
<p align="right"><p align="right"><a href="00001505.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001507.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001506.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



