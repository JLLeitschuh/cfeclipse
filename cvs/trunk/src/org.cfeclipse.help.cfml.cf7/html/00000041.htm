<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Configuration</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000040.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000042.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Configuration</h1>
<p>After you deploy the ColdFusion&#160;MX&#160;7 application, you define JVM arguments. Each J2EE application server has a different method for defining JVM arguments. Depending on your server, you can update variables in a batch file or shell script, define arguments in an administrative interface, modify the java.library.path JVM argument directly, or modify the system path directly. You define two types of JVM arguments:</p>
<ul>
<li>
   Platform-specific items for the <code>java.library.path</code> argument
</li>
<li>
   Java arguments for the <code>java.args</code> argument
</li>
</ul>
<p><strong>Note: </strong>When running JRun 4, you configure these settings through the Settings panel of the JRun Management Console (JMC) or by using a text editor to modify the <i>jrun_root</i>/bin/jvm.config file. </p><p>After you deploy the ColdFusion&#160;MX&#160;7 J2EE configuration, you can run basic ColdFusion pages and start the ColdFusion&#160;MX Administrator. However, certain types of ColdFusion&#160;MX&#160;7 functionality are performed through platform-specific binary files (that is, compiled C++ files, not Java bytecode), which are provided for Windows, Solaris, and Linux. In addition, some of these features require server-specific environment settings. The following list includes platform-specific functionality and the steps you must perform to enable their use:</p>
<p><strong>COM (Windows only)</strong>&#160;Add the following jIntegra binary directories to the JVM's native library path (<code>java.library.path</code>): </p>
<pre>WEB-INF/cfusion/jintegra/bin
WEB-INF/cfusion/jintegra/bin/international
</pre><p><strong>Note: </strong>If your J2EE server runs on an operating system other than Windows, Solaris, or Linux, you can still run ColdFusion&#160;MX&#160;7, but the functionality that is provided through platform-specific binary files is unavailable. For a complete list of supported platforms, see <a href="00000004.htm#1244549">System requirements</a>.</p><p>Depending on your operating system, you might have to add the following to the <code>java.args</code> JVM argument:</p>
<p><strong>COM (Windows only)</strong>&#160;Add the following arguments:</p>
<pre>-DJINTEGRA_NATIVE_MODE -DJINTEGRA_PREFETCH_ENUMS
</pre><p><strong>CORBA (optional)</strong>&#160;Copy the vbjorb.jar file to the WEB-INF/cfusion/lib directory and define the following argument:</p>
<pre>-Xbootclasspath/a:&quot;<code><i>cf_webapp_root</i></code>/WEB-INF/cfusion/lib/vbjorb.jar&quot;
</pre><p><strong>Charting (UNIX only)</strong>&#160;Define the following argument:</p>
<pre>-Djava.awt.graphicsenv=com.gp.java2d.ExGraphicsEnvironment&quot;
</pre><p>For JDK 1.4.1 and later versions, specify <code>com.gp.java2d.ExHeadlessGraphicsEnvironment</code> instead of <code>com.gp.java2d.ExGraphicsEnvironment</code>.</p>
<p><strong>Security</strong>&#160;In addition to enabling sandbox security in the ColdFusion&#160;MX Administrator, the application server must be running a security manager (<code>java.lang.SecurityManager</code>) and you must define the following JVM arguments: </p>
<pre>-Djava.security.manager 
  -Djava.security.policy=&quot;<i>cf_webapp_root</i>/WEB-INF/cfusion/lib/coldfusion.policy&quot; 
  -Djava.security.auth.policy=&quot;<i>cf_webapp_root</i>/WEB-INF/cfusion/lib/neo_jaas.policy&quot;
</pre><p><strong>Additional setup</strong> To use cfregistry on Windows, to use the <code>cfreport</code> tag for Crystal Reports, and to use any C++ CFX custom tags, you must add cfusion/lib to the Java library path. Add the following directory to the JVM's native library path (<code>java.library.path</code>): </p>
<pre>WEB-INF/cfusion/lib
</pre><p>Additionally, certain application servers require that you disable server-specific policy-file permissions in order to enable the ColdFusion security manager. For more information, see the application-server-specific instructions at <a href="http://www.macromedia.com/go/cfmxj2ee-cert" target="mm_window">www.macromedia.com/go/cfmx7_j2eecert</a>. </p>
<p>If the version of the tools.jar file in your application server's JRE is different from the version of the tools.jar file in the WEB-INF/cfusion/lib directory, you should rename or delete the WEB-INF/cfusion/lib/tools.jar file to ensure that your application server's tools.jar file is used.</p>


<hr />
<p align="right"><p align="right"><a href="00000040.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000042.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000041.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



