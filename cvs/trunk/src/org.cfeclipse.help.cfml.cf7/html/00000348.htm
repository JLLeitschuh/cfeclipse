<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>cftreeitem</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000347.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000349.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>cftreeitem</h1>
<h4><a name="wp2347595"></a>Description</h4>
<p>Populates a form tree control, created with the <code>cftree</code> tag, with one or more elements. </p>
<h4><a name="wp1962842"></a>Category</h4>
<p><a href="00000205.htm#2459968">Forms tags</a></p>
<h4><a name="wp1104425"></a>Syntax</h4>
<pre>&lt;cftreeitem <br />   value = &quot;text&quot;<br />   display = &quot;text&quot;<br />   parent = &quot;parent_name&quot;<br />   img = &quot;filename&quot;<br />   imgopen = &quot;filename&quot;<br />   href = &quot;URL&quot;<br />   target = &quot;URL_target&quot;<br />   query = &quot;queryname&quot;<br />   queryAsRoot = &quot;yes&quot; or &quot;no&quot;<br />   expand = &quot;yes&quot; or &quot;no&quot;&gt;
</pre><h4><a name="wp1963013"></a>See also</h4>
<p><a href="00000216.htm#1097239">cfapplet</a>, <a href="00000256.htm#2433198">cfform</a>, <a href="00000257.htm#3833404">cfformgroup</a>, <a href="00000258.htm#3768073">cfformitem</a>, <a href="00000266.htm#1836171">cfgrid</a>, <a href="00000279.htm#1100379">cfinput</a>, <a href="00000331.htm#2553073">cfselect</a>, <a href="00000337.htm#2612389">cfslider</a>, <a href="00000341.htm#2773598">cftextarea</a>, <a href="00000347.htm#1104271">cftree</a>; <a href="00001354.htm#1096353">Building tree controls with the cftree tag</a> in <a href="00001349.htm#1102770">Building Dynamic Forms with cfform Tags</a> in <i>ColdFusion MX Developer's Guide</i></p>
<h4><a name="wp1429408"></a>Attributes</h4>
<p><strong>Note: </strong>In XML format, ColdFusion MX passes all attributes to the XML. The supplied XSLT skins do not handle or display XML format trees, but do display applet and Flash format trees.</p><table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Attribute
    </th>
    <th>
Req/Opt;
Format
    </th>
    <th>
Default
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<p>value</p>
    </td>
    <td>
<p>Required;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Value passed when <code>cfform</code> is submitted. When populating a tree with data from a <code>cfquery</code>, you can specify multiple columns to use in a delimited list; for example, <code>value</code> <code>=</code> <code>&quot;dept_id,emp_id&quot;</code>. In this case, each column generates an item that is a child of the column that precedes it in the list.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>display</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>value</p>
    </td>
    <td>
<p>Tree item label. When populating a tree with data from a query, specify names in a delimited list. Example: <code>display</code> <code>=</code> <code>&quot;dept_name,emp_name&quot;</code></p>
    </td>
  </tr>
  <tr>
    <td>
<p>parent</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Value of the tree item parent. Determines the item's placement in the tree hierarchy. If omitted, the item is placed at the tree root level, or if the <code>queryAsRoot</code> attribute is True, directly under the query.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>img</p>
    </td>
    <td>
<p>Optional;</p>
<p>Applet, object</p>
    </td>
    <td>
<p>folder</p>
    </td>
    <td>
<p>Image name, filename, or file URL for tree item icon. </p>
<p>The following values are provided:</p>
<ul>
<li>
   cd
</li>
<li>
   computer
</li>
<li>
   document
</li>
<li>
   element
</li>
<li>
   folder
</li>
<li>
   floppy
</li>
<li>
   fixed
</li>
<li>
   remote
</li>
</ul>
<p>You can also specify a custom image. To do so, include path and file extension; for example: </p>
<p><code>img = &quot;../images/page1.gif&quot;</code></p>
<p>Custom images are not supported for Flash format.</p>
<p>To specify more than one image in a tree, or an image at the second or subsequent level, use commas to separate names, corresponding to level; for example:</p>
<p><code>img = &quot;folder,document&quot;</code></p>
<p><code>img = &quot;,document&quot; (example of second level)</code></p>
    </td>
  </tr>
  <tr>
    <td>
<p>imgopen</p>
    </td>
    <td>
<p>Optional;</p>
<p>Applet, object</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Icon displayed with open tree item, as describe for the <code>img</code> attribute.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>href</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>URL to link to if the user clicks the tree item. If you use a <code>query</code> attribute, the <code>href</code> attribute can specify a query column that contains URLs. If <code>href</code> is not a query column, the attribute text must be a URL or list of URLs. </p>
<p>When populating a tree with data from a query, specify the URLs in a comma-delimited list; for example:</p>
<p><code>href = &quot;http://dept_svr,http://emp_svr&quot;</code></p>
    </td>
  </tr>
  <tr>
    <td>
<p>target</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Target attribute of <code>href</code> URL. When populating a tree with data from a query, specify target in delimited list:</p>
<p><code>target = &quot;FRAME_BODY,_blank&quot;</code></p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>query</p>
    </td>
    <td>
<p>Optional;</p>
<p>Applet,</p>
<p>Flash</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Query name to use to populate the treeitem. ColdFusion generates an item for each field value in the query column list specified by the <code>value</code> attribute. The fields in each row are hierarchically linked to the first column.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>queryAsRoot</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>Yes</p>
    </td>
    <td>
<p>Applies only if you specify a <code>query</code> attribute. Defines the query as the root level for all items generated by this tag. This attribute enables you to avoid creating a parent <code>cftreeitem</code>.</p>
<ul>
<li>
   Yes: generates a parent (root) item for all other items generated by the tag, with the query name as its value; if you specify a <code>parent</code> attribute, the root item is a child of the specified parent.
</li>
<li>
   No: uses the item specified by the <code>parent</code> attribute as the immediate parent of all items generated by this tag. If there is no <code>parent</code> attribute, use the query as the parent.
</li>
<li>
   A string: creates a root item and uses the specified string as the item name; if you specify a <code>parent</code> attribute, the root item is a child of the specified parent.
</li>
</ul>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>expand</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>Yes</p>
    </td>
    <td>
<ul>
<li>
   Yes: expands tree to show tree item children.
</li>
<li>
   No: keeps tree item collapsed.
</li>
</ul>
    </td>
  </tr>
</table>

<h4><a name="wp1962851"></a>Usage</h4>
<p>This tag requires the client to download a Java applet. Downloading an applet takes time; therefore, using this tag might be slightly slower than using an HTML form element or the <code>cfinput</code> tag to get the same information. </p>
<p>For this tag to work properly. the browser must be JavaScript-enabled. </p>
<p>If you do not use a query to populate this tag, it creates a single tree item. If you do use a query, it creates multiple items; each row of the query creates a hierarchically nested set of items with one item per column.</p>
<h4><a name="wp1104466"></a>Example</h4>
<p>The following example creates a simple tree using a single <code>cftreeitem</code> tag and a query:</p>
<pre>&lt;cfform action = &quot;#cgi.script_name#&quot;&gt;
   &lt;cftree name = &quot;Employees&quot; height = &quot;400&quot; width = &quot;200&quot;&gt;
      &lt;cftreeitem value=&quot;LastName, FirstName, Emp_ID&quot; query=&quot;getEmployees&quot;
       queryAsRoot=&quot;False&quot;&gt;
   &lt;/cftree&gt;
&lt;/cfform&gt;
</pre><p>The following example creates a tree that shows the basic information about all employees in an organization, organized by department. The departments are expanded to show all employees. You can click the + signs to display additional information. If you click the employee name, ColdFusion links back to the same page and displays the selected employee's ID.</p>
<pre>&lt;!--- Query the datasource to get employee information.---&gt;
&lt;!--- Group the output by Department. 
   (All fields are required in Group By clause.) ---&gt;
&lt;cfquery name = &quot;GetEmployees&quot; dataSource = &quot;cfdocexamples&quot;&gt;
   SELECT Emp_ID, FirstName, LastName, EMail, Phone, Department
   FROM Employees 
   GROUP BY Department, Emp_ID, FirstName, LastName, EMail, Phone
&lt;/cfquery&gt;
&lt;html&gt;
&lt;body&gt;
&lt;h3&gt;cftreeitem Example&lt;/h3&gt;

&lt;!--- The following runs if the user clicked on a link in the tree. 
   A complete application would use the ID for additional processing. ---&gt;
&lt;cfif isdefined(&quot;URL.user_ID&quot;)&gt;
   &lt;cfoutput&gt;
      &lt;!--- URL.cftreeitemkey is the selected tree item&#39;s value attribute. ---&gt;
      You Requested information on #URL.cftreeitemKey#; User ID #URL.user_ID#
   &lt;/cfoutput&gt;
   &lt;br&gt;&lt;br&gt;
&lt;/cfif&gt;
&lt;!--- Display the tree. The cftree tag must be in a cfform. ---&gt;
&lt;cfform&gt;
   &lt;cftree name = &quot;Employees&quot; height = &quot;400&quot; width = &quot;200&quot; 
      font = &quot;Arial Narrow&quot; highlighthref=&quot;No&quot; hscroll=&quot;No&quot;&gt; 
      &lt;!--- cfoutput tag with a group attribute loops over the departments. ---&gt;
      &lt;cfoutput group=&quot;Department&quot; query = &quot;GetEmployees&quot;&gt;
         &lt;cftreeitem value=&quot;#Department#&quot; parent=&quot;Employees&quot; expand=&quot;yes&quot;&gt;
         &lt;!--- This cfoutput tag loops over the records for the department.
               The cfoutput tag does not need any attributes. ---&gt;
         &lt;cfoutput&gt;
            &lt;!--- Create an item for each employee in the department.
               Do not expand children. Each employee name links to this page,
               and sends the employee ID in the query string.---&gt;
            &lt;cftreeitem value = &quot;#LastName#, #FirstName#&quot; 
               display = &quot;#LastName#, #FirstName#&quot;
               parent = &quot;#Department#&quot; expand=&quot;no&quot;
               href=&quot;#cgi.script_name#?user_id=#emp_id#&quot;&gt;
            &lt;!--- Each Employee entry has ID and ContactInfo children. ---&gt;
            &lt;cftreeitem value = &quot;#Emp_ID#&quot; display = &quot;Employee ID: #Emp_ID#&quot; 
               parent = &quot;#LastName#, #FirstName#&quot;&gt;
            &lt;!--- Each node must be unique value, so use Emp_ID om value. ---&gt;
            &lt;cftreeitem value = &quot;#Emp_ID#_ContactInfo&quot; 
               display = &quot;Contact Information&quot; 
               parent = &quot;#LastName#, #FirstName#&quot; expand = &quot;No&quot;&gt;
            &lt;!--- ContactInfo has two children. ---&gt;
            &lt;cftreeitem value = &quot;#Phone#&quot; parent = &quot;#Emp_ID#_ContactInfo&quot;&gt;
            &lt;cftreeitem value = &quot;#Email#&quot; parent = &quot;#Emp_ID#_ContactInfo&quot;&gt;
         &lt;/cfoutput&gt;
      &lt;/cfoutput&gt;
   &lt;/cftree&gt;
&lt;/cfform&gt;
</pre>

<hr />
<p align="right"><p align="right"><a href="00000347.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000349.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000348.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



