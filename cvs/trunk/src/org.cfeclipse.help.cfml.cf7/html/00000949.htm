<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Example: a dynamic shopping cart</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000948.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000950.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Example: a dynamic shopping cart</h1>
<p>The following example dynamically creates and manipulates variable names without using dynamic expression evaluation by using associative array notation.</p>
<p>You need to dynamically generate variable names in applications such as shopping carts, where the required output is dynamically generated and variable. In a shopping cart, you do not know in advance the number of cart entries or their contents. Also, because you are using a form, the action page only receives Form variables with the names and values of the form fields.</p>
<p>The following example shows the shopping cart contents and lets you edit your order and submit it. To simplify things, the example automatically generates the shopping cart contents using CFScript instead of having the user fill the cart. A more complete example would populate a shopping cart as the user selected items. Similarly, the example omits all business logic for committing and making the order.</p>
<h4>To create the form:</h4>
<ol>
<li>
   Create a file in your editor.
<pre>
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Shopping Cart&lt;/title&gt;
&lt;/head&gt;
&lt;cfscript&gt;
CartItems=4;
Cart = ArrayNew(1);
for ( i=1; i LE cartItems; i=i+1)
{ 
	Cart[i]=StructNew();
	Cart[i].ID=i;
	Cart[i].Name=&quot;Product &quot; &amp; i;
	Cart[i].SKU=i*100+(2*i*10)+(3*i);
	Cart[i].Qty=3*i-2;
}
&lt;/cfscript&gt;

&lt;body&gt;
Your shopping cart has the following items.&lt;br&gt;
You can change your order quantities.&lt;br&gt;
If you don&#39;t want any item, clear the item&#39;s check box.&lt;br&gt;
When you are ready to order, click submit.&lt;br&gt;
&lt;br&gt;
&lt;cfform name=&quot;ShoppingCart&quot; action=&quot;ShoppingCartAction.cfm&quot; method=&quot;post&quot;&gt;
  &lt;table&gt;
	&lt;tr&gt;
	  &lt;td&gt;Order?&lt;/td&gt;
	  &lt;td&gt;Product&lt;/td&gt;
	  &lt;td&gt;Code&lt;/td&gt;
	  &lt;td&gt;Quantity&lt;/td&gt;
	&lt;/tr&gt;
	&lt;cfloop index=&quot;i&quot; from=&quot;1&quot; to=&quot;#cartItems#&quot;&gt;
		&lt;tr&gt;
		  &lt;cfset productName= &quot;product_&quot; &amp; Cart[i].ID&gt;
		  &lt;cfset skuName= &quot;sku_&quot; &amp; Cart[i].ID&gt;
		  &lt;cfset qtyname= &quot;qty_&quot; &amp; Cart[i].ID&gt;
		  &lt;td&gt;&lt;cfinput type=&quot;checkbox&quot; name=&quot;itemID&quot; value=&quot;#Cart[i].ID#&quot; 
checked&gt;
			 &lt;/td&gt;
		  &lt;td&gt;&lt;cfinput type=&quot;text&quot; name=&quot;#productName#&quot; value=&quot;#Cart[i].Name#&quot;
			 passThrough = &quot;readonly = &#39;True&#39;&quot;&gt;&lt;/td&gt;
		  &lt;td&gt;&lt;cfinput type=&quot;text&quot; name=&quot;#skuName#&quot; value=&quot;#Cart[i].SKU#&quot;
			 passThrough = &quot;readonly = &#39;True&#39;&quot;&gt;&lt;/td&gt;
		  &lt;td&gt;&lt;cfinput type=&quot;text&quot; name=&quot;#qtyName#&quot; value=&quot;#Cart[i].Qty#&quot;&gt;
			 &lt;/td&gt;
		&lt;/tr&gt;
	&lt;/cfloop&gt;
  &lt;/table&gt;
  &lt;input type=&quot;submit&quot; name=&quot;submit&quot; value=&quot;submit&quot;&gt;
&lt;/cfform&gt;

&lt;/body&gt;
&lt;/html&gt;
</pre>
</li>
<li>
   Save the page as ShoppingCartForm.cfm.
</li>
</ol>
<h4><a name="wp2777949"></a>Reviewing the code</h4>
<p>The following table describes the code:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Code
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<pre>&lt;cfscript&gt;
CartItems=4;
Cart = ArrayNew(1);
for ( i=1; i LE #cartItems#; i=i+1)
{ 
   Cart[i]=StructNew();
   Cart[i].ID=i;
   Cart[i].Name=&quot;Product &quot; &amp; i;
   Cart[i].SKU=i*100+(2*i*10)+(3*i);
   Cart[i].Qty=3*i-2;
}
&lt;/cfscript&gt;
</pre>    </td>
    <td>
<p>Create a shopping cart as an array of structures, with each structure containing the cart item ID, product name, SKU number, and quantity ordered for one item in the cart. Populate the shopping cart by looping CartItems times and setting the structure variables to arbitrary values based on the loop counter. A real application would set the Name, SKU, and Quantity values on other pages.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<pre>&lt;cfform name=&quot;ShoppingCart&quot;<br />      action=&quot;ShoppingCartAction.cfm&quot;<br />      method=&quot;post&quot;&gt;
  &lt;table&gt;
   &lt;tr&gt;
      &lt;td&gt;Order?&lt;/td&gt;
      &lt;td&gt;Product&lt;/td&gt;
      &lt;td&gt;Code&lt;/td&gt;
      &lt;td&gt;Quantity&lt;/td&gt;
   &lt;/tr&gt;
</pre>    </td>
    <td>
<p>Start the form and its embedded table. When the user clicks the submit button, post the form data to the ShoppingCartAction.cfm page. </p>
<p>The table formats the form neatly. The first table row contains the column headers. Each following row has the data for one cart item.</p>
    </td>
  </tr>
  <tr>
    <td>
<pre>&lt;cfloop index=&quot;i&quot; from=&quot;1&quot; to=&quot;#cartItems#&quot;&gt;
   &lt;tr&gt;
      &lt;cfset productName= &quot;product_&quot; &amp;<br />         Cart[i].ID&gt;
      &lt;cfset skuName= &quot;sku_&quot; &amp; Cart[i].ID&gt;
      &lt;cfset qtyname= &quot;qty_&quot; &amp; Cart[i].ID&gt;
      &lt;td&gt;&lt;cfinput type=&quot;checkbox&quot;<br />         name=&quot;itemID&quot; value=&quot;#Cart[i].ID#&quot;<br />         checked&gt;
      &lt;/td&gt;
      &lt;td&gt;&lt;cfinput type=&quot;text&quot;<br />         name=&quot;#productName#&quot;<br />         value=&quot;#Cart[i].Name#&quot;
         passThrough = &quot;readonly = &#39;True&#39;&quot;&gt;<br />      &lt;/td&gt;
      &lt;td&gt;&lt;cfinput type=&quot;text&quot;<br />         name=&quot;#skuName#&quot;<br />         value=&quot;#Cart[i].SKU#&quot;
         passThrough = &quot;readonly = &#39;True&#39;&quot;&gt;<br />      &lt;/td&gt;
     &lt;td&gt;&lt;cfinput type=&quot;text&quot;<br />         name=&quot;#qtyName#&quot;<br />         value=&quot;#Cart[i].Qty#&quot;&gt;
      &lt;/td&gt;
   &lt;/tr&gt;
&lt;/cfloop&gt;
&lt;/table&gt;
</pre>    </td>
    <td>
<p>Loop through the shopping cart entries to generate the cart form dynamically. For each loop, generate variables used for the form field name attributes by appending the cart item ID (Cart[i].ID) to a field type identifier, such as &quot;sku_&quot;. </p>
<p>Use a single name, &quot;itemID&quot;, for all check boxes. This way, the itemID value posted to the action page is a list of all the check box field values. The check box field value for each item is the cart item ID.</p>
<p>Each column in a row contains a field for a cart item structure entry. The <code>passthrough</code> attribute sets the product name and SKU fields to read-only; note the use of single-quotation marks. (For more information on the <a href="00000279.htm#1100379"><code>cfinput</code></a> tag <code>passthrough</code> attribute, see <i>CFML Reference</i>.) The check boxes are selected by default.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<pre>&lt;input type=&quot;submit&quot; name=&quot;submit&quot;
   value=&quot;Submit&quot;&gt;
&lt;/form&gt;
</pre>    </td>
    <td>
<p>Create the Submit button and end the form.</p>
    </td>
  </tr>
</table>

<h4>To create the Action page:</h4>
<ol>
<li>
   Create a file in your editor.
</li>
<li>
   Enter the following text:
<pre>
&lt;html&gt;
&lt;head&gt;
	&lt;title&gt;Your Order&lt;/title&gt;
&lt;/head&gt;
&lt;body&gt;
&lt;cfif isDefined(&quot;Form.submit&quot;)&gt;
	&lt;cfparam name=&quot;Form.itemID&quot; default=&quot;&quot;&gt;
	&lt;cfoutput&gt;
		You have ordered the following items:&lt;br&gt;
		&lt;br&gt;
		&lt;cfloop index=&quot;i&quot; list=&quot;#Form.itemID#&quot;&gt;
			ProductName: #Form[&quot;product_&quot; &amp; i]#&lt;br&gt;
			Product Code: #Form[&quot;sku_&quot; &amp; i]#&lt;br&gt;
			Quantity: #Form[&quot;qty_&quot; &amp; i]#&lt;br&gt;
			&lt;br&gt;
		&lt;/cfloop&gt;
	&lt;/cfoutput&gt;
&lt;/cfif&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>
</li>
<li>
   Save the file as ShoppingCartAction.cfm
</li>
<li>
   Open ShoppingCartform.cfm in your browser, change the check box and quantity values, and click Submit.
</li>
</ol>
<h4><a name="wp2732091"></a>Reviewing the code</h4>
<p>The following table describes the code:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Code
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<pre>&lt;cfif isDefined(&quot;Form.submit&quot;)&gt;
</pre>    </td>
    <td>
<p>Run the CFML on this page only if it is called by submitting a form. This is not needed if there are separate form and action pages, but is required if the form and action page were one ColdFusion page.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<pre>&lt;cfparam name=&quot;Form.itemID&quot;<br />   default=&quot;&quot;&gt;
</pre>    </td>
    <td>
<p>Set the default Form.itemID to the empty string. This prevents ColdFusion from displaying an error if the user clears all check boxes before submitting the form (so no product IDs are submitted).</p>
    </td>
  </tr>
  <tr>
    <td>
<pre>&lt;cfoutput&gt;
You have ordered the following<br />      items:&lt;br&gt;
&lt;br&gt;
&lt;cfloop index=&quot;i&quot; list=<br />      &quot;#Form.itemID#&quot;&gt;
   ProductName:<br />      #Form[&quot;product_&quot; &amp; i]#&lt;br&gt;
   Product Code: <br />      #Form[&quot;sku_&quot; &amp; i]#&lt;br&gt;
   Quantity:<br />      #Form[&quot;qty_&quot; &amp; i]#&lt;br&gt;
   &lt;br&gt;
&lt;/cfloop&gt;
&lt;/cfoutput&gt;
&lt;/cfif&gt;
</pre>    </td>
    <td>
<p>Display the name, SKU number, and quantity for each ordered item.</p>
<p>The form page posts Form.itemID as a list containing the value attributes of all the check boxes. These attributes contain the shopping cart item IDs for the selected cart items. Use the list values to index a loop that outputs each ordered item.</p>
<p>Use associative array notation to access the Form scope as a structure and use expressions in the array indexes to construct the form variable names. The expressions consist of a string containing the field name's field type prefix (for example, &quot;sku_&quot;), concatenated with the variable i, which contains the shopping cart ItemID number (which is also the loop index variable).</p>
    </td>
  </tr>
</table>

<p></p>


<hr />
<p align="right"><p align="right"><a href="00000948.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000950.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000949.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



