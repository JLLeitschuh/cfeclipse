<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Creating user-defined functions</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001002.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001004.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Creating user-defined functions</h1>
<p>Before you create a UDF, you must determine where you want to define it, and whether you want to use CFML or CFScript to create it.</p>
<p>This section describes the following topics:</p>
<ul>
<li>
   <a href="00001003.htm#1193875">Determining where to create a user-defined function</a>
</li>
<li>
   <a href="00001003.htm#1161677">About creating functions using CFScript</a>
</li>
<li>
   <a href="00001003.htm#1194225">Defining functions in CFScript</a>
</li>
<li>
   <a href="00001004.htm#1161701">About creating functions using tags</a>
</li>
<li>
   <a href="00001005.htm#1194099">Defining functions using the cffunction tag</a>
</li>
<li>
   <a href="00001006.htm#1193894">Rules for function definitions</a>
</li>
</ul>
<h2><a name="wp1193875"></a>Determining where to create a user-defined function</h2>
<p>You can define a function in the following places:</p>
<ul>
<li>
   In a ColdFusion component. If you organize your functions in ColdFusion components, you use the functions as described in <a href="00001037.htm#1214255">Using ColdFusion components</a>.
</li>
<li>
   On the page where it is called. You can even define it below the place on the page where it is called, but this poor coding practice can result in confusing code.
</li>
<li>
   On a page that you include using a <a href="00000277.htm#1100248"><code>cfinclude</code></a> tag. The <code>cfinclude</code> tag must be executed before the function gets called. For example, you can define all your application's functions on a single page and place a <code>cfinclude</code> tag at the top of pages that use the functions.
</li>
<li>
   On any page that puts the function name in a scope common with the page on which you call the function. For more information on UDF scoping, see <a href="00001016.htm#1117954">Specifying the scope of a function</a>.
</li>
<li>
   On the Application.cfc or Application.cfm page. For more information, see <a href="00001102.htm#1101532">Designing and Optimizing a ColdFusion&#160;Application</a>
</li>
</ul>
<p>For recommendations on selecting where you define functions, see the sections <a href="00001015.htm#1108938">Using Application.cfm and function include files</a> and <a href="00001016.htm#1117954">Specifying the scope of a function</a>.</p>
<h2><a name="wp1161677"></a>About creating functions using CFScript</h2>
<p>You use the <code>function</code> statement to define the function in CFScript. CFScript function definitions have the following features and limitations: </p>
<ul>
<li>
   The function definition syntax is familiar to anyone who uses JavaScript or most programming languages.
</li>
<li>
   CFScript is efficient for writing business logic, such as expressions and conditional operations. 
</li>
<li>
   CFScript function definitions cannot include CFML tags. 
</li>
</ul>
<p>The following is a CFScript definition for a function that returns a power of 2:</p>
<pre>&lt;cfscript&gt;
<code>function twoPower(exponent)&#160;{</code>
<code>      return 2^exponent; </code>
<code>}</code>
<code>&lt;/cfscript&gt;</code>
</pre><p>For more information on how to use CFScript to define a function, see <a href="00001003.htm#1194225">Defining functions in CFScript</a>.</p>
<h2><a name="wp1194225"></a>Defining functions in CFScript</h2>
<p>You define functions using CFScript in a manner similar to defining JavaScript functions. You can define multiple functions in a single CFScript block. </p>
<p><strong>Note: </strong>For more information on using CFScript, see <a href="00000968.htm#1119878">Extending ColdFusion Pages with CFML Scripting</a>.</p><h3><a name="wp1194233"></a>CFScript function definition syntax</h3>
<p>A CFScript function definition has the following syntax:</p>
<pre><code><strong>function</strong></code><strong> </strong><i>functionName</i>( <code><i>[</i></code><i>argName1</i><code><i>[, </i></code><i>argName2</i><code><i>...]]</i></code> )<br />{<br />      CFScript Statements<br />}
</pre><p>The following table describes the function variables:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Function variable
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<p><i>functionName</i></p>
    </td>
    <td>
<p>The name of the function. You cannot use the name of a standard ColdFusion function or any name that starts with &quot;cf&quot;. You cannot use the same name for two different function definitions. Function names cannot include periods.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p><i>argName1...</i></p>
    </td>
    <td>
<p>Names of the arguments required by the function. The number of arguments passed into the function must equal or exceed the number of arguments in the parentheses at the start of the function definition. If the calling page omits any of the required arguments, ColdFusion generates a mismatched argument count error.</p>
    </td>
  </tr>
</table>

<p>The body of the function definition must be in curly braces, even if it is a empty.</p>
<p>The following two statements are allowed only in function definitions:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Statement
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<p><code><strong>var</strong></code> <i>variableName = expression</i>;</p>
    </td>
    <td>
<p>Creates and initializes a variable that is local to the function (function variable). This variable has meaning only inside the function and is not saved between calls to the function. It has precedence in the function body over any variables with the same name that exist in any other scopes. You never prefix a function variable with a scope identifier, and the name cannot include periods. The initial value of the variable is the result of evaluating the expression. The expression can be any valid ColdFusion expression, including a constant or even another UDF.</p>
<p>All <code>var</code> statements must be at the top of the function declaration, before any other statements. You must initialize all variables when you declare them. You cannot use the same name for a function variable and an argument.</p>
<p>Each var statement can initialize only one variable.</p>
<p>You should use the var statement to initialize all function-only variables, including loop counters and temporary variables.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p><code><strong>return</strong></code> <i>expression</i>;</p>
    </td>
    <td>
<p>Evaluates expression (which can be a variable), returns its value to the page that called the function, and exits the function. You can return any ColdFusion variable type.</p>
    </td>
  </tr>
</table>

<h3><a name="wp1194281"></a>A simple CFScript example</h3>
<p>The following example function adds the two arguments and returns the result:</p>
<pre>&lt;cfscript&gt;
function Sum(a,b)&#160;{
      var sum = a + b;
      return sum; 
} 
<code>&lt;/cfscript&gt;</code>
</pre><p>In this example, a single line declares the function variable and uses an expression to set it to the value to be returned. This function can be simplified so that it does not use a function variable, as follows:</p>
<pre>function MySum(a,b) {Return a + b;} 
</pre><p>You must always use curly braces around the function definition body, even if it is a single statement.</p>


<hr />
<p align="right"><p align="right"><a href="00001002.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001004.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001003.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



