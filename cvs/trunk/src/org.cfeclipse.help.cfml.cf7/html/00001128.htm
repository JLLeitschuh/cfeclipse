<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Optimizing database use</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001127.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001129.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Optimizing database use</h1>
<p>Poor database design and incorrect or inefficient use of the database are among the most common causes of inefficient applications. Consider the different methods that are available for using databases and information from databases when you design your application. For example, if you need to average the price of a number of products from an SQL query, it is more efficient to use SQL to get the average than to use a loop in ColdFusion.</p>
<p>Two important ColdFusion&#160;MX tools for optimizing your use of databases are the <a href="00000338.htm#2607555"><code>cfstoredproc</code></a> tag and the <a href="00000316.htm#1102316"><code>cfquery</code></a> tag <code>cachedWithin</code> attribute.</p>
<h3><a name="wp1183089"></a>Using stored procedures</h3>
<p>The <a href="00000338.htm#2607555"><code>cfstoredproc</code></a> tag lets ColdFusion MX use stored procedures in your database management system. A stored procedure is a sequence of SQL statements that is assigned a name, compiled, and stored in the database system. Stored procedures can encapsulate programming logic in SQL statements, and database systems are optimized to execute stored procedures efficiently. As a result, stored procedures are faster than <code>cfquery</code> tags.</p>
<p>You use the <a href="00000313.htm#1102102"><code>cfprocparam</code></a> tag to send parameters to the stored procedure, and the <code>cfprocresult</code> tag to get the record sets that the stored procedure returns.</p>
<p>The following example executes a Sybase stored procedure that returns three result sets, two of which the example uses. The stored procedure returns the status code and one output parameter, which the example displays.</p>
<pre>&lt;!--- cfstoredproc tag ---&gt;
&lt;cfstoredproc procedure = &quot;foo_proc&quot; dataSource = &quot;MY_SYBASE_TEST&quot; 
   username = &quot;sa&quot; password = &quot;&quot; returnCode = &quot;Yes&quot;&gt;

   &lt;!--- cfprocresult tags ---&gt;
   &lt;cfprocresult name = RS1&gt;
   &lt;cfprocresult name = RS3 resultSet = 3&gt;

   &lt;!--- cfprocparam tags ---&gt;
   &lt;cfprocparam type = &quot;IN&quot;
      CFSQLType = CF_SQL_INTEGER
         value = &quot;1&quot;    dbVarName = @param1&gt;
   &lt;cfprocparam type = &quot;OUT&quot;   CFSQLType = CF_SQL_DATE
      variable = FOO dbVarName = @param2&gt;
&lt;!--- Close the cfstoredproc tag. ---&gt;
&lt;/cfstoredproc&gt;

&lt;cfoutput&gt;
   The output param value: &#39;#foo#&#39;&lt;br&gt;
&lt;/cfoutput&gt;

&lt;h3&gt;The Results Information&lt;/h3&gt;
&lt;cfoutput query = RS1&gt;
   #name#,#DATE_COL#&lt;br&gt;
&lt;/cfoutput&gt;
&lt;br&gt;
&lt;cfoutput&gt;
   &lt;hr&gt;
   Record Count: #RS1.recordCount#&lt;br&gt;
   Columns: #RS1.columnList#&lt;br&gt;
   &lt;hr&gt;
&lt;/cfoutput&gt; 

&lt;cfoutput query = RS3&gt;
   #col1#,#col2#,#col3#&lt;br&gt;
&lt;/cfoutput&gt;
&lt;br&gt;
&lt;cfoutput&gt;
   &lt;hr&gt;&lt;br&gt;
   Record Count: #RS3.recordCount#&lt;br&gt;
   Columns: #RS3.columnList#&lt;br&gt;
   &lt;hr&gt;

   The return code for the stored procedure is: &#39;#cfstoredproc.statusCode#&#39;&lt;br&gt;
&lt;/cfoutput&gt;
</pre><h4><a name="wp1176650"></a>Reviewing the code</h4>
<p>The following table describes the code and its function:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Code
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<pre>&lt;cfstoredproc procedure = &quot;foo_proc&quot; 
   dataSource = &quot;MY_SYBASE_TEST&quot; username = &quot;sa&quot;
   password = &quot;&quot; returnCode = &quot;Yes&quot;&gt;
</pre>    </td>
    <td>
<p>Runs the stored procedure foo_proc on the MY_SYBASE_TEST data source. Populates the <code>cfstoredproc</code> <code>statusCode</code> variable with the status code returned by stored procedure.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<pre>&lt;cfprocresult name = RS1&gt;
&lt;cfprocresult name = RS3 resultSet = 3&gt;
</pre>    </td>
    <td>
<p>Gets two record sets from the stored procedure: the first and third result sets it returns.</p>
    </td>
  </tr>
  <tr>
    <td>
<pre>&lt;cfprocparam type = &quot;IN&quot;
   CFSQLType = CF_SQL_INTEGER
      value = &quot;1&quot; dbVarName = @param1&gt;
&lt;cfprocparam type = &quot;OUT&quot; CFSQLType = CF_SQL_DATE
   variable = FOO dbVarName = @param2&gt;
&lt;/cfstoredproc&gt;
</pre>    </td>
    <td>
<p>Specifies two parameters for the stored procedure, an input parameter and an output parameter. Sets the input parameter to 1 and the ColdFusion variable that gets the output to FOO.</p>
<p>Ends the <code>cfstoredproc</code> tag body.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<pre>&lt;cfoutput&gt;
   The output param value: &#39;#foo#&#39;&lt;br&gt;
&lt;/cfoutput&gt;

&lt;h3&gt;The Results Information&lt;/h3&gt;
&lt;cfoutput query = RS1&gt;
   #name#,#DATE_COL#&lt;br&gt;
&lt;/cfoutput&gt;
&lt;br&gt;

&lt;cfoutput&gt;
   &lt;hr&gt;
   Record Count: #RS1.recordCount#&lt;br&gt;
   Columns: #RS1.columnList#&lt;br&gt;
   &lt;hr&gt;
&lt;/cfoutput&gt; 

&lt;cfoutput query = RS3&gt;
   #col1#,#col2#,#col3#&lt;br&gt;
&lt;/cfoutput&gt;
&lt;br&gt;

&lt;cfoutput&gt;
   &lt;hr&gt;&lt;br&gt;
   Record Count: #RS3.recordCount#&lt;br&gt;
   Columns: #RS3.columnList#&lt;br&gt;
   &lt;hr&gt;
   The return code for the stored procedure is:
   &#39;#cfstoredproc.statusCode#&#39;&lt;br&gt;
&lt;/cfoutput&gt;
</pre>    </td>
    <td>
<p>Displays the results of running the stored procedure:</p>
<ul>
<li>
   The output parameter value, 
</li>
<li>
   The contents of the two columns in the first record set identified by the name and DATE_COL variables. You set the values of these variables elsewhere on the page.
</li>
<li>
   The number of rows and the names of the columns in the first record set
</li>
<li>
   The contents of the columns in the other record set identified by the col1, col2, and col3 variables.
</li>
<li>
   The number of rows and the names of the columns in the record set.
</li>
<li>
   The status value returned by the stored procedure.
</li>
</ul>
    </td>
  </tr>
</table>

<p>For more information on creating stored procedures, see your database management software documentation. For more information on using the <a href="00000338.htm#2607555"><code>cfstoredproc</code></a> tag, see <i>CFML Reference</i>.</p>
<h3><a name="wp1176506"></a>Using the cfquery tag cachedWithin attribute</h3>
<p>The <a href="00000316.htm#1102316"><code>cfquery</code></a> tag <code>cachedWithin</code> attribute tells ColdFusion to save the results of a database query for a specific period of time. This way, ColdFusion accesses the database on the first page request, and does not query the database on further requests until the specified time expires. Using the <code>cachedWithin</code> attribute can significantly limit the overhead of accessing databases that do not change rapidly. </p>
<p>This technique is useful if the database contents only change at specific, known times, or if the database does not change frequently and the purpose of the query does not require absolutely up- to-date results.</p>
<p>You must use the <a href="00000435.htm#1102715"><code>CreateTimeSpan</code></a> function to specify the <code>cachedWithin</code> attribute value (in days, hours, minutes, seconds format). For example, the following code caches the results of getting the contents of the Employees table of the cfdocexamples data source for one hour.</p>
<pre>&lt;cfquery datasource=&quot;cfdocexamples&quot; name=&quot;master&quot;
<pre>
	cachedWithin=#CreateTimeSpan(0,1,0,0)#&gt;
	SELECT * FROM Employees
&lt;/cfquery&gt;
</pre>
</pre>

<hr />
<p align="right"><p align="right"><a href="00001127.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001129.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001128.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



