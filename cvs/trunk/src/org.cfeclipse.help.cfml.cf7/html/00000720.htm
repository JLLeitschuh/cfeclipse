<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>getLogger</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000719.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000721.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>getLogger</h1>
<h4><a name="wp1179537"></a>Description</h4>
<p>Returns a ColdFusion Logger object that the event gateway can use to log information in a file. </p>
<h4><a name="wp1179539"></a>Category</h4>
<p>Event Gateway Development</p>
<h4><a name="wp1179541"></a>Syntax</h4>
<pre>coldfusion.eventgateway.Logger getLogger([String <i>logfile</i>])
</pre><h4><a name="wp1179543"></a>See also</h4>
<p><a href="00000738.htm#1181671">Logger class</a>, <a href="00001697.htm#139247">Logging events and using log files</a> in <a href="00001684.htm#146437">Creating Custom Event Gateways</a> in <i>ColdFusion MX Developer's Guide</i></p>
<h4><a name="wp1179554"></a>Parameters</h4>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Parameter
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<p>logfile</p>
    </td>
    <td>
<p>The name, without an extension, of a log file in the ColdFusion MX logs directory. ColdFusion MX automatically appends a .log extension to the name. If the file does not exist, ColdFusion MX creates it when it logs the first message. By default, ColdFusion logs to the eventgateway.log file.</p>
    </td>
  </tr>
</table>

<h4><a name="wp1179565"></a>Returns</h4>
<p>A ColdFusion MX logger object to use in </p>
<h4><a name="wp1179567"></a>Usage</h4>
<p>The Logger class has five methods: <a href="00000739.htm#1181717">debug</a>, <a href="00000742.htm#1182459">info</a>, <a href="00000743.htm#1182564">warn</a>, <a href="00000740.htm#1182148">error</a>, and <a href="00000741.htm#1182392">fatal</a>, that correspond to the severity level that is set in the log message. Each method takes a message string, a Throwable class object, or both.</p>
<p>If you pass a Throwable object to these methods, ColdFusion MX writes the exception information in the exceptions.log file.</p>
<h4><a name="wp1179575"></a>Example</h4>
<p>The ColdFusion MX example DirectoryWatcherGateway includes the following line in the constructor to get a logger object:</p>
<pre>// We create our own log file, which will be named &quot;watcher.log&quot;
<strong>logger = gatewayService.getLogger(&quot;watcher&quot;);</strong>
</pre><p>The following code, from the start of the routine that loads information from the configuration file, uses this object to log the initialization.</p>
<pre>// Load the properties file to get our settings
protected void loadconfig() throws ServiceRuntimeException
{
   // load config
<strong>   logger.info(&quot;DirectoryWatcher (&quot; + gatewayID + &quot;) Initializing</strong>
<strong>      DirectoryWatcher gateway with configuration file &quot; + config);</strong>
.
.
.
</pre>

<hr />
<p align="right"><p align="right"><a href="00000719.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000721.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000720.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



