<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>cffile action = &quot;write&quot;</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000253.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000255.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>cffile action = &quot;write&quot;</h1>
<h4><a name="wp1355579"></a>Description</h4>
<p>Writes a text file on the server, based on dynamic content. You can create static HTML files from the content, or log actions in a text file. </p>
<h4><a name="wp1098766"></a>Syntax</h4>
<pre>&lt;cffile <br />   action = &quot;write&quot; <br />   file = &quot;full_path_name&quot;<br />   output = &quot;content&quot;<br />   mode = &quot;permission&quot;<br />   addNewLine = &quot;yes&quot; or &quot;no&quot;<br />   attributes = &quot;file_attributes_list&quot;<br />   charset = &quot;charset_option&quot; &gt;
</pre><h4><a name="wp1877424"></a>See also</h4>
<p><a href="00000235.htm#1097918"><code>cfdirectory</code></a></p>
<h4><a name="wp3084498"></a>History</h4>
<p>See the History section of the main <a href="00000245.htm#1098395"><code>cffile</code></a> tag page.</p>
<h4><a name="wp3493882"></a>Attributes</h4>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Attribute
    </th>
    <th>
Req/Opt
    </th>
    <th>
Default
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<p>action </p>
    </td>
    <td>
<p>Required</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Type of file manipulation that the tag performs. </p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>file</p>
    </td>
    <td>
<p>Required</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Pathname of the file to write. </p>
<p>If not an absolute path (starting a with a drive letter and a colon, or a forward or backward slash), it is relative to the ColdFusion temporary directory, which is returned by the <a href="00000497.htm#1105302">GetTempDirectory</a> function.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>output</p>
    </td>
    <td>
<p>Required</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Content of the file to be created.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>mode</p>
    </td>
    <td>
<p>Optional</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Applies only to UNIX and Linux. Permissions. Octal values of UNIX chmod command. Assigned to owner, group, and other, respectively. For example:</p>
<ul>
<li>
   644: assigns read/write permission to owner; read permission to group and other.
</li>
<li>
   777: assigns read/write/execute permission to all.
</li>
</ul>
    </td>
  </tr>
  <tr>
    <td>
<p>addNewLine</p>
    </td>
    <td>
<p>Optional</p>
    </td>
    <td>
<p>yes</p>
    </td>
    <td>
<ul>
<li>
   yes: appends newline character to text written to file.
</li>
<li>
   no
</li>
</ul>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>attributes</p>
    </td>
    <td>
<p>Optional</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Applies to Windows. A comma-delimited list of attributes to set on the file.</p>
<p>If omitted, the file&#39;s attributes are maintained.</p>
<p>Each value must be specified explicitly. For example, if you specify <code>attributes</code> <code>=</code> <code>&quot;readOnly&quot;</code>, all other attributes are overwritten. </p>
<ul>
<li>
   readOnly
</li>
<li>
   hidden
</li>
<li>
   normal
</li>
</ul>
    </td>
  </tr>
  <tr>
    <td>
<p>charset</p>
    </td>
    <td>
<p>Optional</p>
    </td>
    <td>
<p>JVM default file character set.</p>
    </td>
    <td>
<p>The character encoding in which the file contents is encoded. The following list includes commonly used values:</p>
<ul>
<li>
   utf-8
</li>
<li>
   iso-8859-1 
</li>
<li>
   windows-1252
</li>
<li>
   us-ascii
</li>
<li>
   shift_jis
</li>
<li>
   iso-2022-jp 
</li>
<li>
   euc-jp
</li>
<li>
   euc-kr
</li>
<li>
   big5
</li>
<li>
   euc-cn
</li>
<li>
   utf-16
</li>
</ul>
<p>For more information character encodings, see <a href="http://www.w3.org/International/O-charset.html" target="mm_window">www.w3.org/International/O-charset.html</a>.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>fixnewline</p>
    </td>
    <td>
<p>Optional</p>
    </td>
    <td>
<p>No</p>
    </td>
    <td>
<ul>
<li>
   Yes: changes embedded line-ending characters in string variables to operating-system specific line endings.
</li>
<li>
   No: (default) do not change embedded line-ending characters in string variables.
</li>
</ul>
    </td>
  </tr>
</table>

<h4><a name="wp1098792"></a>Example</h4>
<p>This example creates a file with information a user entered in an HTML insert form: </p>
<pre>&lt;cffile action = &quot;write&quot; 
   file = &quot;c:\files\updates\#Form.UpdateTitle#.txt&quot; <br />   output = &quot;Created By: #Form.FullName# <br />   Date: #Form.Date# <br />   #Form.Content#&quot;&gt;
</pre><p>If the user submitted a form with the following:</p>
<pre>UpdateTitle = &quot;FieldWork&quot;
FullName = &quot;World B. Frueh&quot; <br />Date = &quot;10/30/01&quot; <br />Content = &quot;We had a wonderful time in Cambridgeport.&quot; 
</pre><p>ColdFusion would create a file named FieldWork.txt in the c:\files\updates\ directory and the file would contain the following text: </p>
<pre>Created By: World B. Frueh
Date: 10/30/01 <br />We had a wonderful time in Cambridgeport.
</pre><p>This example shows the use of the <code>mode</code> attribute for UNIX. It creates the file /tmp/foo with permissions rw-r--r-- (owner = read/write, group = read, other = read): </p>
<pre>&lt;cffile action = &quot;write&quot;
   file = &quot;/tmp/foo&quot; <br />mode = 644&gt; 
</pre><p>This example appends to the file and sets permissions to read/write (rw) for all:</p>
<pre>&lt;cffile action = &quot;append&quot;
   destination = &quot;/home/tomj/testing.txt&quot; <br />mode = 666 <br />output = &quot;Is this a test?&quot;&gt;
</pre><p>This example uploads a file and gives it the permissions owner/group/other = read/write/execute):</p>
<pre>cffile action = &quot;upload&quot;
   fileField = &quot;fieldname&quot; <br />destination = &quot;/tmp/program.exe&quot; <br />mode = 777&gt;
</pre><p>This example uses the <code>fixnewline</code> attribute to changes embedded line-ending characters in <code>xmlString</code>, which is derived from <code>xmlData</code>, to operating-system specific line endings.</p>
<pre>&lt;cfxml variable=&quot;xmlData&quot;&gt;
   &lt;docroot&gt;
      &lt;payload type=&quot;string&quot;&gt;This is some plain text&lt;/payload&gt;
   &lt;/docroot&gt;
&lt;/cfxml&gt;
&lt;cfset xmlString = toString(xmlData)&gt;

&lt;cfset key = createUUID()&gt;
&lt;cfset encString=encrypt(xmlString, key)&gt;
&lt;cffile action=&quot;write&quot; addnewline=&quot;yes&quot; file=&quot;C:\CFusionMX7\wwwroot\test\store.dat&quot; output=&quot;#encString#&quot; fixnewline=&quot;yes&quot;&gt;
&lt;cffile action=&quot;read&quot; file=&quot;C:\CFusionMX7\wwwroot\test\store.dat&quot; variable=&quot;retrievedString&quot;&gt;
&lt;cfset decString=decrypt(retrievedString, key)&gt;
&lt;cfdump var=&quot;#decString#&quot;&gt;
&lt;cfset newXML = xmlParse(decString)&gt;
&lt;cfdump var=&quot;#newXML#&quot;&gt;
</pre>

<hr />
<p align="right"><p align="right"><a href="00000253.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000255.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000254.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



