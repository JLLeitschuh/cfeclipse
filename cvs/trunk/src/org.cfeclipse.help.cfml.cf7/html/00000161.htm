<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Exercise 5: Validating data on the client using ColdFusion form tags</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000160.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000162.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Exercise 5: Validating data on the client using ColdFusion form tags</h1>
<p>In this exercise, you will compare server-side and client-side validation. You then modify the testedit.cfm page to use client-side scripting.</p>
<h2><a name="wp1189813"></a>Comparing server-side and client-side validation</h2>
<p>Validating data on the server-side has two drawbacks. First, the action page is used for validation, so the form page is not in the browser context when the error is trapped. The user, therefore, will not get immediate feedback from the page where the data was entered. Second, because data capture occurs on the client and validation occurs on the server, the number of round-trips to the server is increased. This can cause increased traffic on the network and the server. If the data is validated on the client, only valid data is posted to the server and traffic is reduced.</p>
<p>An alternative approach to server-side editing is to use client-side scripting. Client-side scripting lets you validate the form data entered on the client prior to posting it to the server. CFML provides alternative versions of standard HTML form tags, which provide the advantages of client-side data validation. These data input tags include <code>cfinput</code> <code>text</code>, <code>cfinput</code> <code>radio</code>, <code>cfinput</code> <code>checkbox</code>, <code>cfselect</code>, and others. For more information, see <a href="00001376.htm#1096836">Validating Data</a> in <i>ColdFusion MX Developer's Guide</i>.</p>
<p>ColdFusion form tags include the following attributes:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Attribute
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<p>validate</p>
    </td>
    <td>
<p>The data type that the field tag validates against. Values include: integer, date, time, telephone, zipcode.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>message</p>
    </td>
    <td>
<p>The error message that appears if validation fails.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>range</p>
    </td>
    <td>
<p>The range of permissible values for this tag.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>required</p>
    </td>
    <td>
<p>An indicator of whether data is required for the corresponding tag.</p>
    </td>
  </tr>
</table>

<p>To use the improved form tags, you must replace the HTML form tag with the <code>cfform</code> tag. The following code snippets show the use of the improved ColdFusion form tags. The first code snippet shows how the duration field is validated on the server. The second code snippet shows how ColdFusion form tags simplify field validation on the client.</p>
<h4><a name="wp1152546"></a>Server-side validation approach (no cfform tag)</h4>
<p>The following code is on the server (tripeditaction.cfm page):</p>
<pre>&lt;!--- Number of people is required and must be numeric. ---&gt;
&lt;cfif Form.numberPeople EQ &quot;&quot; or IsNumeric(Form.numberPeople) EQ False&gt;
   &lt;CFSET IsOk = &quot;No&quot;&gt;
   &lt;cfoutput&gt;The number of people must be a number and cannot be blank.
   &lt;/cfoutput&gt;
&lt;/cfif&gt;
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Code 
    </th>
    <th>
Explanation
    </th>
  </tr>
  <tr>
    <td>
<pre>&lt;cfif Form.numberPeople EQ &quot;&quot; or<br />IsNumeric(Form.numberPeople) EQ False&gt;
</pre>    </td>
    <td>
<p>The <code>cfif</code> tag evaluates the value of the form variable <code>numberPeople</code> to determine if the user entered a value. The <code>IsNumeric</code> function checks whether the value entered on the form was a numeric value.</p>
    </td>
  </tr>
</table>

</pre><h4><a name="wp1189903"></a>Client-side validation approach using a cfform tag</h4>
<p>The following code is on the client (tripedit.cfm page):</p>
<pre>&lt;cfinput name=&quot;duration&quot; message=&quot;Duration must be a number and cannot be blank.&quot;<br />validate=&quot;integer&quot; required=&quot;Yes&quot; size=&quot;3&quot; maxlength=&quot;3&quot;&gt;
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Code 
    </th>
    <th>
Explanation
    </th>
  </tr>
  <tr>
    <td>
<pre>&lt;cfinput name=&quot;duration&quot;<br />message=&quot;Duration must be a number and cannot be blank.&quot; validate=&quot;integer&quot;<br />required=&quot;Yes&quot; size=&quot;3&quot; maxlength=&quot;3&quot;&gt;
</pre>    </td>
    <td>
<p>Use the <code>cfinput</code> tag to create the <code>duration</code> input entry field within a <code>cfform</code> tag. The <code>validate</code> attribute defines the field as an <code>integer</code>. The <code>required</code> attribute indicates that the field must have an entry. If the data is not entered or data entered is not an integer, the <code>message</code> attribute specifies that the message, &quot;Duration must be....&quot; appears.</p>
    </td>
  </tr>
</table>

</pre><h2><a name="wp1152577"></a>Modifying the Trip Edit page to use ColdFusion form tags</h2>
<p>In this exercise, you use the ColdFusion form tags to move the validation of many business rules from the server to the client. To do this, you change the HTML form tags in the tripedit.cfm page to ColdFusion form tags that validate these fields on the client side. Next, you remove the unneeded server-side single-field validation code from the tripeditaction.cfm page. Finally, you test the form to ensure that the client-side validation is working correctly.</p>
<h4>To use the ColdFusion form tags on the Trip Edit page:</h4>
<ol>
<li>
   Open the tripedit.cfm file in the my_app directory in your editor. 
</li>
<li>
   Locate and change the <code>&lt;form&gt;</code> and <code>&lt;/form&gt;</code> tags to <code>&lt;cfform&gt;</code> and <code>&lt;/cfform&gt;</code> tags, respectively.
</li>
<li>
   Change the <code>&lt;input&gt;</code> tags to <code>&lt;cfinput&gt;</code> tags, <code>&lt;select&gt;</code> tags to <code>&lt;cfselect&gt;</code> tags, and <code>&lt;textarea&gt;</code> tags to <code>&lt;cftextarea&gt;</code> tags. 
<p><strong>Note: </strong>The input type for the submit button must remain a standard input rather than <code>cfinput</code>.</p></li>
<li>
   For each ColdFusion form tag (<code>cfinput</code> and <code>cfselect</code>), assign the following appropriate values:
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Attribute value
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<p>required</p>
    </td>
    <td>
<p>Use this attribute for fields that must be filled out or selected.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>validate</p>
    </td>
    <td>
<p>Use this attribute for fields that require a specific data type for validation. Values include: integer, date, time, telephone, and zip code.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>message</p>
    </td>
    <td>
<p>Use this attribute for fields that require an error message to appear if validation fails. The message reflects the text that describes the business rule.</p>
    </td>
  </tr>
</table>

<p>The following table contains the revised code blocks:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Rule
    </th>
    <th>
Description
    </th>
    <th>
Validation code
    </th>
  </tr>
  <tr>
    <td>
<p>1</p>
    </td>
    <td>
<p>All trips must be named.</p>
    </td>
    <td>
<pre>&lt;cfinput name= &quot;tripName&quot; 
   maxlength = &quot;50&quot; size = &quot;50&quot; 
   required = &quot;Yes&quot; 
   message = &quot;Trip name must not be blank&quot;&gt;
</pre>    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>2</p>
    </td>
    <td>
<p>All trips must be accompanied by a full description.</p>
    </td>
    <td>
<pre>&lt;cftextarea name=&quot;tripDescription&quot; 
   required=&quot;Yes&quot; 
   message=&quot;Trip description must not be blank.&quot;&gt;
&lt;/cftextarea&gt;
</pre>    </td>
  </tr>
  <tr>
    <td>
<p>3</p>
    </td>
    <td>
<p>Each trip must be categorized by event type. Only valid event types (1-surfing, 2-mountain climbing, and so on) are permissible.</p>
    </td>
    <td>
<pre>&lt;cfselect size=&quot;1&quot; name=&quot;eventType&quot; 
   required=&quot;Yes&quot; 
   message=&quot;Type of event must be selected.&quot;&gt;
      &lt;option value=&quot;1&quot; selected&gt;Surfing&lt;/option&gt;
      &lt;option value=&quot;2&quot;&gt;Mountain Climbing&lt;/option&gt;
      &lt;option value=&quot;3&quot;&gt;Mountain Biking&lt;/option&gt;
&lt;/cfselect&gt;
</pre>    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>4</p>
    </td>
    <td>
<p>Trip locations are required.</p>
    </td>
    <td>
<pre>&lt;cfinput size=&quot;50&quot; name=&quot;tripLocation&quot; 
   required=&quot;Yes&quot;
   message=&quot;Trip location must not be blank.&quot;&gt;
</pre>    </td>
  </tr>
  <tr>
    <td>
<p>5</p>
    </td>
    <td>
<p>The maximum number of people permitted on the trip must be specified.</p>
    </td>
    <td>
<pre>&lt;cfinput name=&quot;numberPeople&quot; 
   size=&quot;6&quot;
   required=&quot;Yes&quot; 
   validate=&quot;integer&quot; 
   message=&quot;The number of people field must be 
   a number and cannot be blank.&quot;&gt;
</pre>    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>6</p>
    </td>
    <td>
<p>The trip departure and return dates must be specified for each trip.</p>
<p>All trip dates must be valid future dates. Departure date must precede return date.</p>
    </td>
    <td>
<pre>&lt;cfinput name=&quot;departureDate&quot; 
   size=&quot;10&quot;
   required=&quot;Yes&quot; 
   validate=&quot;date&quot; 
   message=&quot;Departure date must be a valid date.&quot;&gt;

&lt;cfinput name=&quot;returnDate&quot;
   size=&quot;10&quot; 
   required=&quot;Yes&quot; 
   validate=&quot;date&quot; 
   message=&quot;Return date must be a valid date.&quot;&gt;
</pre>    </td>
  </tr>
  <tr>
    <td>
<p>7</p>
    </td>
    <td>
<p>The trip's price and base cost are required. Both values are positive numeric values. The trip price must have at least a 20% markup over base cost.</p>
    </td>
    <td>
<pre>&lt;cfinput name=&quot;price&quot;
   size=&quot;10&quot; 
   required=&quot;Yes&quot; 
   validate=&quot;integer&quot; 
   message=&quot;Price is required and must be numeric.&quot;&gt;

&lt;cfinput name=&quot;baseCost&quot;
   size=&quot;10&quot; 
   required=&quot;Yes&quot; 
   validate=&quot;integer&quot; 
   message=&quot;Base cost is required and must be numeric.&quot;&gt;
</pre>    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>8</p>
    </td>
    <td>
<p>Any trip priced over $750 requires a deposit. </p>
    </td>
    <td>
<pre>&lt;cfinput name=&quot;depositRequired&quot;
   type=&quot;checkbox&quot; 
   value=&quot;Yes&quot; &gt;
</pre>    </td>
  </tr>
  <tr>
    <td>
<p>9</p>
    </td>
    <td>
<p>A trip leader must be identified. </p>
    </td>
    <td>
<pre>&lt;cfinput name=&quot;tripLeader&quot;
   maxlength=&quot;50&quot; size=&quot;50&quot; 
   required=&quot;Yes&quot; 
   message=&quot;A trip leader must be specified.&quot;&gt;
</pre>    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>10</p>
    </td>
    <td>
<p>A photo must accompany all new trips.</p>
    </td>
    <td>
<pre>&lt;cfinput name=&quot;photo&quot;
   maxlength=&quot;50&quot; size=&quot;50&quot; 
   required=&quot;Yes&quot; 
   message=&quot;Valid photo file name must be specified.&quot;&gt;
</pre>    </td>
  </tr>
</table>

<p><strong>Tip: </strong>For additional help, review the completed code in the ttripedit_lesson7_ex5.cfm file within the solutions directory. For more details about using ColdFusion form tags and their attributes, see <i>ColdFusion MX Developer's Guide</i>.</p><p><strong>Note: </strong>The client-side validation code that you added to the tripedit.cfm page does not validate the cross-field rules.</p></li>
<li>
   Open the tripeditaction.cfm file in the my_app directory and delete the code for the following single-field validation rules:
<ul><li>Trip name is required.</li>
<li>Trip description is required.</li>
<li>Trip leader is required.</li>
<li>Photo filename is required.</li>
<li>Number of people is required and must be numeric.</li>
<li>Trip location is required.</li>
<li>Base cost is required and must be numeric.</li>
<li>Price is required and must be numeric.</li>
</ul></li>
<li>
   Save the file. 
<p>The modified tripeditaction.cfm page appears as follows:</p>
<pre>
&lt;cfset isOk = &quot;Yes&quot;&gt;
&lt;cfif not isdefined(&quot;Form.depositRequired&quot;)&gt;
   &lt;cfset form.depositRequired = &quot;No&quot;&gt;
&lt;/cfif&gt;
&lt;cfif Form.price GT 750 AND Form.depositRequired EQ &quot;No&quot;&gt;
	&lt;cfset IsOk = &quot;No&quot;&gt;
	&lt;cfoutput&gt;Deposit is required for trips priced over $750.&lt;/cfoutput&gt;
&lt;/cfif&gt;
&lt;cfif Form.basecost * 1.2 GT #Form.price#&gt;
	&lt;cfset IsOk = &quot;No&quot;&gt;
	&lt;cfoutput&gt;Price must be marked up at least 20% above cost.&lt;/cfoutput&gt;
&lt;/cfif&gt;
&lt;cfif form.departureDate GT form.returnDate&gt;
	&lt;cfset isOk = &quot;No&quot;&gt;
	&lt;cfoutput&gt;Return date cannot precede departure date. Please re-enter.&lt;/
cfoutput&gt;
&lt;/cfif&gt;&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Trip Maintenance Confirmation&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;

&lt;cfif isOk EQ &quot;Yes&quot;&gt;
	&lt;h1&gt;Trip Added&lt;/h1&gt;
	&lt;cfoutput&gt;You have added #Form.TripName# to the trips database.
	&lt;/cfoutput&gt;
&lt;/cfif&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre>
</li>
</ol>
<h4>To test the modified code:</h4>
<ol>
<li>
   View the tripedit.cfm page in a browser.
</li>
<li>
   Test the client- and server-side field validations by filling out the fields on the form and clicking Save.
<p>Testing recommendations:</p>
<li>Omit required fields such as trip name or location.</li>
<li>Make the departure date an invalid date, such as <strong>12/32/2002</strong>.</li>
<li>Enter a nonnumeric value in Number of People, such as <strong>one</strong>.</li>
</li>
</ol>


<hr />
<p align="right"><p align="right"><a href="00000160.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000162.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000161.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



