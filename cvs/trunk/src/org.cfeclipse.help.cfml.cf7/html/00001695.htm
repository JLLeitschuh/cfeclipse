<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Responding to incoming messages</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001694.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001696.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Responding to incoming messages</h1>
<p>One or more listener threads respond to incoming messages (events). The threads must include code to dispatch the messages to ColdFusion event gateway services, as follows:</p>
<ol>
<li>
   Create a CFEvent instance.
</li>
<li>
   Create a Map instance that contains the message and any other event gateway-specific information, and pass it to the CFEvent <code>setData</code> method.
</li>
<li>
   Call the CFEvent <code>setOriginator</code> method to specify the source of the message. (This is required if the ColdFusion application will send a response.)
</li>
<li>
   Call the CFEvent <code>setGateWayType</code> method to specify the event gateway type.
</li>
<li>
   Set any other CFEvent fields where the default behavior is not appropriate; for example, call the <code>setCFCPath</code> method to replace the default listener CFC. (For information on default CFEvent fields, see <a href="00001688.htm#117767">CFEvent class</a>.)
</li>
<li>
   Call the <code>gatewayService.addEvent</code> method to dispatch the CFEvent instance to ColdFusion.
</li>
<li>
   Handle cases where the event is not added to the event gateway service queue (the <code>addEvent</code> method returns False).
</li>
</ol>
<p>If your application sends any messages to multiple listener CFCs, the gateway must create and configure a CFEvent instance and call the <code>gatewayService.addEvent</code> method to send the message to each separate listener CFC. The gateway's <code>setCFCListeners</code> method must make the CFC paths available to the gateway for configuring the CFEvent instances.</p>
<p>If your ColdFusion server carries a heavy event gateway message load, the ColdFusion event gateway services event queue might reach the maximum value set in the ColdFusion MX Administrator. When this happens, the <code>gatewayService.addEvent</code> method returns False and fails. Your code can do any of the following:</p>
<ul>
<li>
   Return a message to the sender to indicate that their message was not received.
</li>
<li>
   Wait until the queue is available by periodically comparing the values returned by the GatewayService <code>getQueueSize</code> and <code>getMaxQueueSize</code> methods, and retry the <code>addEvent</code> method when the queue size is less than the maximum.
</li>
<li>
   Log the occurrence using the logger returned by the GatewayService <code>getLogger</code> method. (For more information, see <a href="00001697.htm#139247">Logging events and using log files</a>.)
</li>
</ul>
<p>The SocketGateway class implements the listener using a java.net.ServerSocket class object and SocketServerThread listener threads. (See the SocketGateway source for the SocketServerThread code.) When the listener thread gets a message from the TCP/IP socket, it calls the following <code>processInput</code> method to dispatch the message to ColdFusion. This method explicitly sets all required and optional CFEvent fields and sends the event to ColdFusion. If the <code>addEvent</code> call fails, it logs the error.</p>
<p><strong>Note: </strong>Much of the <code>processInput</code> method code supports multiple listener CFCs. A gateway that uses only a single listener cfc, would require only the code in the latter part of this method. </p><pre>private void processInput(String theInput, String theKey)
{
   // Convert listeners list to a local array
   // Protect ourselves if the list changes while we are running
   String[] listeners;
   int size = cfcListeners.size();
   if (size &gt; 0)
   {
      // Capture the listeners list
      synchronized (cfcListeners)
      {
         listeners = new String[size];
         cfcListeners.toArray(listeners);
      }
   }
   else
   {
      // Create a dummy list
      listeners = new String[1];
      listeners[0] = null;
   }
   // Broadcast to all the CFC listeners
   // Send one message at a time with different CFC address on them
   for (int i = 0; i &lt; listeners.length; i++)
   {
      String path = listeners[i];
      CFEvent event = new CFEvent(gatewayID);
      Hashtable mydata = new Hashtable();
      mydata.put(&quot;MESSAGE&quot;, theInput);
      event.setData(mydata);
      event.setGatewayType(&quot;SocketGateway&quot;);
      event.setOriginatorID(theKey);
      event.setCfcMethod(cfcEntryPoint);
      event.setCfcTimeOut(10);
      if (path != null)
         event.setCfcPath(path);
         boolean sent = gatewayService.addEvent(event);
      if (!sent)
         log.error(&quot;SocketGateway(&quot; + gatewayID + &quot;) Unable to put message on
            vent queue. Message not sent from &quot; + gatewayID + &quot;, thread &quot; + theKey
            + &quot;.  Message was &quot; + theInput);
   }
}
</pre>

<hr />
<p align="right"><p align="right"><a href="00001694.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001696.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001695.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



