<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Using the debugging classes</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001099.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001101.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Using the debugging classes</h1>
<p>To develop and debug Java CFX tags in isolation from the ColdFusion, you use three special debugging classes that are included in the <code>com.allaire.cfx</code> package. These classes lets you simulate a call to the <code>processRequest</code> method of your CFX tag within the context of the interactive debugger of a Java development environment. The three debugging classes are the following:</p>
<ul>
<li>
   <a href="00000840.htm#1097864"><code>DebugRequest</code></a>&#160;An implementation of the <code>Request</code> interface that lets you initialize the request with custom attributes, settings, and a query.
</li>
<li>
   <a href="00000841.htm#1097874"><code>DebugResponse</code></a>&#160;An implementation of the <code>Response</code> interface that lets you print the results of a request once it has completed.
</li>
<li>
   <a href="00000841.htm#1097880"><code>DebugQuery</code></a>&#160;An implementation of the <code>Query</code> interface that lets you initialize a query with a name, columns, and a data set.
</li>
</ul>
<h4>To use the debugging classes:</h4>
<ol>
<li>
   Create a <code>main</code> method for your Java CFX class. 
</li>
<li>
   Within the <code>main</code> method, initialize a <code>DebugRequest</code> and <code>DebugResponse</code>, and a <code>DebugQuery</code>. Use the appropriate attributes and data for your test.
</li>
<li>
   Create an instance of your Java CFX tag and call its <code>processRequest</code> method, passing in the <code>DebugRequest</code> and <code>DebugResponse</code> objects.
</li>
<li>
   Call the <code>DebugResponse.printResults</code> method to output the results of the request, including content generated, variables set, queries created, and so on.
</li>
</ol>
<p>After you implement a <code>main</code> method as described previously, you can debug your Java CFX tag using an interactive, single-step debugger. Specify your Java CFX class as the <code>main</code> class, set breakpoints as appropriate, and begin debugging.</p>
<h3><a name="wp1096575"></a>Debugging classes example</h3>
<p>The following example demonstrates how to use the debugging classes:</p>
<pre>import java.util.Hashtable ;
import com.allaire.cfx.* ;

public class OutputQuery implements CustomTag&#160;{
   // debugger testbed for OutputQuery
   public static void main(String[] argv)&#160;{
      try&#160;{
         // initialize attributes         
         Hashtable attributes = new Hashtable() ;
         attributes.put( &quot;HEADER&quot;, &quot;Yes&quot; ) ;
         attributes.put( &quot;BORDER&quot;, &quot;3&quot; ) ;
         
         // initialize query
         
         String[] columns = 
            { &quot;FIRSTNAME&quot;, &quot;LASTNAME&quot;, &quot;TITLE&quot; } ;
         
         String[][] data =  {   
            { &quot;Stephen&quot;, &quot;Cheng&quot;, &quot;Vice President&quot; },
            { &quot;Joe&quot;, &quot;Berrey&quot;, &quot;Intern&quot; },
            { &quot;Adam&quot;, &quot;Lipinski&quot;, &quot;Director&quot; },
            { &quot;Lynne&quot;, &quot;Teague&quot;, &quot;Developer&quot; } }  ;
         
         DebugQuery query = 
            new DebugQuery( &quot;Employees&quot;, columns, data ) ; 

         // create tag, process debugging request, and print results
         OutputQuery tag = new OutputQuery() ;
         DebugRequest request = new DebugRequest( attributes, query ) ;
         DebugResponse response = new DebugResponse() ;
         tag.processRequest( request, response ) ;
         response.printResults() ;        
      }
      catch( Throwable e )&#160;{
         e.printStackTrace() ;
      }
   }

   public void processRequest(Request request, Response response) throws Exception&#160;{
      // ...code for processing the request...
   }
}
</pre>

<hr />
<p align="right"><p align="right"><a href="00001099.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001101.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001100.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



