<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Invoking CFC methods using forms and URLs</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001045.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001047.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Invoking CFC methods using forms and URLs</h1>
<p>You can invoke CFC methods directly by specifying the CFC in a URL, or using HTML and CFML form tags. Because all HTTP requests are transient, these methods only let you transiently invoke methods. They do not let you create persistent CFC instances.</p>
<p>This section describes the following topics:</p>
<ul>
<li>
   <a href="00001046.htm#1214716">Invoking component methods using a URL</a>
</li>
<li>
   <a href="00001047.htm#1214735">Invoking component methods using a form</a>
</li>
</ul>
<h3><a name="wp1214716"></a>Invoking component methods using a URL</h3>
<p>To invoke a component method using a URL, you must append the method name to the URL in standard URL query-string, name-value syntax. You can invoke only one component method per URL request; for example:</p>
<pre>http://localhost:8500/tellTime.cfc?method=getLocalTime
</pre><p><strong>Note: </strong>To use URL invocation, you must set the <code>access</code> attribute of the <a href="00000263.htm#2852457"><code>cffunction</code></a> tag to <code>remote</code>.</p><p>To pass parameters to component methods using a URL, append the parameters to the URL in standard URL query-string, name-value pair syntax; for example:</p>
<pre>http://localhost:8500/corpQuery.cfc?method=getEmp&amp;lastName=camden
</pre><p>To pass multiple parameters within a URL, use the ampersand character (&amp;) to delimit the name-value pairs; for example:</p>
<pre>http://localhost:8500/corpQuerySecure.cfc?method=getAuth&amp;store=women&amp;dept=shoes
</pre><p><strong>Note: </strong>To ensure data security, Macromedia strongly recommends that you not pass sensitive information over the web using URL strings. Potentially sensitive information includes all personal user information, including passwords, addresses, telephone numbers, and so on. </p><p>If a CFC method that you access using the URL displays output directly, the user's browser shows the output. You can suppress output by specifying <code>output=</code>&quot;<code>No</code>&quot; in the <code>cffunction</code> tag. If the CFC returns a result using the <a href="00000326.htm#2498057"><code>cfreturn</code></a> tag, ColdFusion converts the text to HTML edit format (with special characters replaced by their HTML escape sequences), puts the result in a WDDX packet, and includes the packet in the HTML that it returns to the client.</p>


<hr />
<p align="right"><p align="right"><a href="00001045.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001047.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001046.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



