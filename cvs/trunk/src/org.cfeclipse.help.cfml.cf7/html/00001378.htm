<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Validation techniques</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001377.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001379.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Validation techniques</h1>
<p>Different validation techniques apply to different ColdFusion tags or coding environments; for example, you can use masking only in HTML and Macromedia Flash format <code>cfinput</code> tags. Validation techniques also vary in where and when they execute; for example, on the client browser when the user submits form data, or on the server when processing data.</p>
<p>The following table describes the ColdFusion MX validation techniques:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Validation technique
    </th>
    <th>
Applies to
    </th>
    <th>
Where and when performed
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<p>mask</p>
<p>(<code>mask</code> attribute)</p>
    </td>
    <td>
<p>HTML and Flash format <code>cfinput</code> tags</p>
    </td>
    <td>
<p>On the client as the user enters data</p>
    </td>
    <td>
<p>ColdFusion&#160;MX generates JavaScript or ActionScript to directly control the data a user enters by specifying a pattern. For example, 999-999-9999 requires a user to enter ten digits, and automatically fills in the dash (-) separators to create a formatted telephone number.</p>
<p>For detailed information on using masks, see <a href="00001382.htm#1153447">Handling invalid data</a>.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>onBlur</p>
<p>(<code>validateat=</code></p>
<p><code>&quot;onBlur&quot;</code> attribute)</p>
    </td>
    <td>
<p><code>cfinput</code> and <code>cftextarea</code> tags</p>
    </td>
    <td>
<p>On the client when the data field loses focus</p>
    </td>
    <td>
<p>In HTML and XML format, ColdFusion&#160;MX generates JavaScript that runs on the browser to check whether entered data is valid and provide immediate feedback, if the entry is invalid.</p>
<p>In Flash format, uses Flash built-in validation routines.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>onSubmit</p>
<p>(<code>validateat=</code></p>
<p><code>&quot;onSubmit&quot;</code> attribute)</p>
    </td>
    <td>
<p><code>cfinput</code> and <code>cftextarea</code> tags</p>
    </td>
    <td>
<p>On the client when the user clicks Submit </p>
    </td>
    <td>
<p>In HTML or XML format, the validation logic is identical to onBlur validation, but the test is not done until the user submits the form.</p>
<p>In Flash format, this validation type is identical to onBlur Validation. Flash checks do not differentiate between the two events for validation.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>onServer</p>
<p>(<code>validateat=</code></p>
<p><code>&quot;onServer&quot;</code> attribute)</p>
    </td>
    <td>
<p><code>cfinput</code> and cftextarea tags</p>
    </td>
    <td>
<p>On the server when ColdFusion gets the submitted form</p>
    </td>
    <td>
<p>ColdFusion&#160;MX checks submitted data for validity and runs a validation error page if the data is not valid. You can use the <code>cferror</code> tag to specify the validation error page.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>hidden field</p>
    </td>
    <td>
<p>All Forms, including HTML-only forms</p>
    </td>
    <td>
<p>On the server when ColdFusion gets the submitted form</p>
    </td>
    <td>
<p>ColdFusion&#160;MX uses the same validation logic as with onServer validation, but you must create additional, hidden, fields and you can use this technique with HTML tags or CFML tags.</p>
<p>For detailed information on using hidden fields, see <a href="00001385.htm#1154690">Validating form data using hidden fields</a>.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>JavaScript</p>
<p>(<code>onValidate =&quot;</code><i>function</i><code>&quot;</code> attribute)</p>
    </td>
    <td>
<p><code>cfgrid</code>, <code>cfinput</code>, <code>cfslider</code>, <code>cftextarea</code>, and <code>cftree</code> tags in HTML and XML format forms</p>
    </td>
    <td>
<p>On the client, when the user clicks Submit, before field-specific onSubmit validation</p>
    </td>
    <td>
<p>ColdFusion&#160;MX includes the specified JavaScript function in the HTML page it sends to the browser, and the browser calls it. </p>
<p>For detailed information on using JavaScript for validation, see <a href="00001386.htm#1147322">Validating form input and handling errors with JavaScript</a>.</p>
    </td>
  </tr>
  <tr>
    <td>
<p><a href="00000534.htm#4996076"><code>IsValid</code></a> function</p>
    </td>
    <td>
<p>ColdFusion variables</p>
    </td>
    <td>
<p>On the server, when the function executes</p>
    </td>
    <td>
<p>ColdFusion&#160;MX tests the variable to determine whether it follows a specified validation rule and the function returns true or false.</p>
<p>For more information on using the <code>IsValid</code> function for validation, see <a href="00001387.htm#1147501">Validating data with the IsValid function and the cfparam tag</a>.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p><a href="00000310.htm#1101730"><code>cfparam</code></a> tag</p>
    </td>
    <td>
<p>ColdFusion variables</p>
    </td>
    <td>
<p>On the server, when the tag executes</p>
    </td>
    <td>
<p>ColdFusion&#160;MX checks the specified variable. If the value does not meet the validation criteria, ColdFusion generates an expression exception.</p>
<p>For more information on using the <code>cfparam</code> tag for validation, see, <a href="00001387.htm#1147501">Validating data with the IsValid function and the cfparam tag</a>.</p>
    </td>
  </tr>
  <tr>
    <td>
<p><a href="00000218.htm#2855190"><code>cfargument</code></a><code> </code>tag</p>
    </td>
    <td>
<p>UDF and CFC function arguments </p>
    </td>
    <td>
<p>On the server, when a function is called or invoked</p>
    </td>
    <td>
<p>ColdFusion&#160;MX checks the argument value when it is passed to the function. If the value does not meet the validation criteria, ColdFusion generates an application exception.</p>
<p>For more information on using the <code>cfargument</code> tag, see <a href="00001001.htm#1167055">Writing and Calling User-Defined Functions</a>.</p>
    </td>
  </tr>
</table>

<p><strong>Note: </strong>For more information on ColdFusion error handling, see <a href="00001130.htm#1220254">Handling Errors</a></p>

<hr />
<p align="right"><p align="right"><a href="00001377.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001379.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001378.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



