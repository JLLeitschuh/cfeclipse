<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Using server-side ActionScript functions</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001492.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001494.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Using server-side ActionScript functions</h1>
<p>After you connect to the Flash Remoting service, you call functions that are defined in your server-side ActionScript files, and return results. </p>
<h4>To call a function:</h4>
<ol>
<li>
   Create an instance of the server-side ActionScript file using the <code>getService</code> function. This function instantiates the server-side ActionScript file as an object to be used on the client side. For example:
<pre>
albumService = gatewayConnection.getService(&quot;recordsettest&quot;, this) 
</pre>
<p>Where <code>recordsettest</code> represents the name of the server-side ActionScript file, without the file extension <code>.asr</code>. </p>
</li>
<li>
   Call a function defined in your server-side ActionScript object. Use dot notation to specify the object name followed by the function name; for example:
<pre>
albumService.getAlbum(&quot;The Color And The Shape&quot;, &quot;1999&quot;);
</pre>
<p>Where <code>albumService</code> is the instance of the server-side ActionScript file and <code>getAlbum</code> is a function that passes two arguments, <code>&quot;The Color and The Shape&quot;</code> and <code>&quot;1999&quot;</code>. </p>
<p><strong>Note: </strong>Arguments must occur in the order defined in the function declaration. </p></li>
<li>
   Handle the function results in ActionScript. See <a href="00001493.htm#1005737">Using the function results in ActionScript</a>.
</li>
</ol>
<h2><a name="wp1005737"></a>Using the function results in ActionScript</h2>
<p>To use the results returned by server-side ActionScript, you must create a corresponding <i>results function</i>. The results function uses a special naming convention that ties it to the function that calls the server-side ActionScript. For example, if you defined a client-side ActionScript function called <code>basicCustomerQuery</code>, you also must create a results function called <code>basicCustomerQuery_Result</code>.</p>
<p>The results returned by server-side ActionScript functions differ somewhat depending on whether you are using <code>CF.http</code> or <code>CF.query</code>:</p>
<ul>
<li>
   The <code>CF.query</code> function returns a record set, which you manipulate using methods available in the RecordSet ActionScript class object. See <a href="00001493.htm#1005749">Using results returned by the CF.query function</a>.
</li>
<li>
   The <code>CF.http</code> function returns simple text strings through properties that you reference in your server-side ActionScript. See <a href="00001493.htm#1005764">Using results returned by the CF.http function</a>.
</li>
</ul>
<h3><a name="wp1005749"></a>Using results returned by the CF.query function</h3>
<p>You use functions in the RecordSet ActionScript object to access the data returned in a <code>CF.query</code> record set; for example, how many records are in the record set and the names of the columns. You can also use the RecordSet functions to pull the query data out of the record set. To do so, you reference a specific row number in the record set and use the <code>getItemAt</code> RecordSet function, as in the following example:</p>
<pre>// This function populates a Flash text box with data in the first row 
// of the record set under the &quot;email&quot; column name.
function selectData_Result ( result )
{
   stringOutput.text = result.getItemAt(0)[&quot;email&quot;];
   _root.employeesView.setDataProvider(result);
}
</pre><p>In the example, the column name is referenced in the <code>getItemAt</code> function between square brackets [ ]. (In ActionScript, indexes start at 0, so <code>getItemAt(0)</code> returns the first row.)</p>
<p>For more information, see <a href="00001496.htm#1005870">Using the CF.query function</a>. </p>
<h3><a name="wp1005764"></a>Using results returned by the CF.http function</h3>
<p>The <code>CF.http</code> server-side ActionScript function returns data as simple text. You write server-side functions that reference the properties available in the object returned by the <code>CF.http</code> function. These properties store the file content of the retrieved file, HTTP status codes, the MIME type of the returned file, and so on. On the client side, you create return functions to handle data returned by the <code>CF.http</code> function. You write these functions to handle simple text data. </p>
<p>For more information, see <a href="00001504.htm#1006226">Using the CF.http function</a>.</p>


<hr />
<p align="right"><p align="right"><a href="00001492.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001494.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001493.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



