<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Enhancing security with cfqueryparam</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001256.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001258.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Enhancing security with cfqueryparam</h1>
<p>Some DBMSs let you send multiple SQL statements in a single query. However, hackers might try to modify URL or form variables in a dynamic query by appending malicious SQL statements to existing parameters. Be aware that there are potential security risks when you pass parameters in a query string. This can happen in many development environments, including ColdFusion, ASP, and CGI. Using the <a href="00000317.htm#1102474"><code>cfqueryparam</code></a> tag can reduce this risk.</p>
<h2><a name="wp1142385"></a>About query string parameters</h2>
<p>When you let a query string pass a parameter, ensure that only the expected information is passed. The following ColdFusion query contains a WHERE clause, which selects only database entries that match the last name specified in the LastName field of a form:</p>
<pre>&lt;cfquery name=&quot;GetEmployees&quot; datasource=&quot;cfdocexamples&quot;&gt;
  SELECT FirstName, LastName, Salary
  FROM Employee
  WHERE LastName=&#39;#Form.LastName#&#39;
&lt;/cfquery&gt;
</pre><p>Someone could call this page with the following malicious URL:</p>
<p>http://myserver/page.cfm?Emp_ID=7%20DELETE%20FROM%20Employee</p>
<p>The result is that ColdFusion tries to execute the following query:</p>
<pre><code><strong>&lt;cfquery name=&quot;GetEmployees&quot; datasource=&quot;cfdocexamples&quot;&gt;</strong></code>
<code><strong>   SELECT *    FROM Employee</strong></code>
   WHERE Emp_ID = 7 DELETE FROM Employee
<code><strong>&lt;/cfquery&gt;</strong></code>
</pre><p>In addition to an expected integer for the Emp_ID column, this query also passes malicious string code in the form of a SQL statement. If this query successfully executes, it deletes all rows from the Employee table--something you definitely do not want to enable by this method. To prevent such actions, you must evaluate the contents of query string parameters.</p>
<h2><a name="wp1142588"></a>Using cfqueryparam</h2>
<p>You can use the <a href="00000317.htm#1102474"><code>cfqueryparam</code></a> tag to evaluate query string parameters and pass a ColdFusion variable within a SQL statement. This tag evaluates variable values before they reach the database. You specify the data type of the corresponding database column in the <code>cfsqltype</code> attribute of the <code>cfqueryparam</code> tag. In the following example, because the Emp_ID column in the cfdocexamples data source is an integer, you specify a <code>cfsqltype</code> of <code>cf_sql_integer</code>:</p>
<pre><code><strong>&lt;cfquery name=&quot;EmpList&quot; datasource=&quot;</strong></code><strong>cfdocexamples</strong><code><strong>&quot;&gt;</strong></code>
<code><strong>   SELECT *    FROM Employee</strong></code>
   WHERE Emp_ID = <code><strong>&lt;cfqueryparam value = &quot;#Emp_ID#&quot;</strong></code>
                     <code><strong>cfsqltype = &quot;cf_sql_integer&quot;&gt;</strong></code>
<code><strong>&lt;/cfquery&gt;</strong></code>
</pre><p>The <code>cfqueryparam</code> tag checks that the value of Emp_ID is an integer data type. If anything else in the query string is not an integer, such as a SQL statement to delete a table, the <a href="00000316.htm#1102316"><code>cfquery</code></a> tag does not execute. Instead, the <code>cfqueryparam</code> tag returns the following error message:</p>
<p>Invalid data &#39;7 DELETE FROM Employee&#39; for CFSQLTYPE &#39;CF_SQL_INTEGER&#39;.</p>
<h3><a name="wp1142414"></a>Using cfqueryparam with strings</h3>
<p>When passing a variable that contains a string to a query, specify a <code>cfsqltype</code> value of <code>cf_sql_char</code>, and specify the <code>maxLength</code> attribute, as in the following example:</p>
<pre>&lt;cfquery name = &quot;getFirst&quot; dataSource = &quot;cfdocexamples&quot;&gt;
   SELECT * FROM employees
   WHERE LastName = <code><strong>&lt;cfqueryparam value = &quot;#LastName#&quot;</strong></code> 
                        cfsqltype = &quot;cf_sql_char&quot; maxLength = &quot;17&quot;&gt;
&lt;/cfquery&gt;
</pre><p>In this case, <a href="00000317.htm#1102474"><code>cfqueryparam</code></a> performs the following checks:</p>
<ul>
<li>
   It ensures that LastName contains a string.
</li>
<li>
   It ensures that the string is 17 characters or less.
</li>
<li>
   It escapes the string with single-quotation marks so that it appears as a single value to the database. Even if a hacker passes a bad URL, it appears as follows:
<p>WHERE LastName = &#39;Smith DELETE FROM MyCustomerTable&#39;.</p>
</li>
</ul>
<h3><a name="wp1142632"></a>Using cfSqlType</h3>
<p>The following table lists the available SQL types against which you can evaluate the <code>value</code> attribute of the <a href="00000317.htm#1102474"><code>cfqueryparam</code></a> tag:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr bgcolor="#F8F8F8">
    <td>
<p>BIGINT</p>
    </td>
    <td>
<p>BIT</p>
    </td>
    <td>
<p>CHAR</p>
    </td>
    <td>
<p>DATE</p>
    </td>
  </tr>
  <tr>
    <td>
<p>DECIMAL</p>
    </td>
    <td>
<p>DOUBLE</p>
    </td>
    <td>
<p>FLOAT</p>
    </td>
    <td>
<p>IDSTAMP</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>INTEGER</p>
    </td>
    <td>
<p>LONGVARCHAR</p>
    </td>
    <td>
<p>MONEY</p>
    </td>
    <td>
<p>MONEY4</p>
    </td>
  </tr>
  <tr>
    <td>
<p>NUMERIC</p>
    </td>
    <td>
<p>REAL</p>
    </td>
    <td>
<p>REFCURSOR</p>
    </td>
    <td>
<p>SMALLINT</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>TIME</p>
    </td>
    <td>
<p>TIMESTAMP</p>
    </td>
    <td>
<p>TINYINT</p>
    </td>
    <td>
<p>VARCHAR</p>
    </td>
  </tr>
</table>

<p><strong>Note: </strong>Specifying the <code>cfsqltype</code> attribute causes the DBMS to use bind variables, which can greatly enhance performance.</p>

<hr />
<p align="right"><p align="right"><a href="00001256.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001258.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001257.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



