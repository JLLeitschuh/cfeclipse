<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>cfform</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000255.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000257.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>cfform</h1>
<h4><a name="wp2433199"></a>Description</h4>
<p>Builds a form with CFML custom control tags; these provide more functionality than standard HTML form input elements. You can include the resulting form on the client page as HTML or Flash content, and generate the form using XML and XSLT.</p>
<h4><a name="wp3824755"></a>Category</h4>
<p><a href="00000205.htm#2459968">Forms tags</a></p>
<h4><a name="wp2433208"></a>Syntax</h4>
<pre>&lt;cfform <br />   name = &quot;name&quot;<br />   action = &quot;form_action&quot;<br />   method = &quot;POST&quot; or &quot;GET&quot;<br />   format = &quot;HTML&quot; or &quot;Flash&quot; or &quot;XML&quot;<br />   skin = &quot;Flash or XSL skin&quot;<br />   style = &quot;style specification&quot;<br />   preserveData = &quot;yes&quot; or &quot;no&quot;<br />   onSubmit = &quot;javascript&quot; <br />   scriptSrc = &quot;path&quot;<br />   codeBase = &quot;URL&quot;<br />   archive = &quot;URL&quot;<br /><i>The following attributes are supported in Flash and XML only<br /></i>width = &quot;pixels or percent&quot;<br />height = &quot;pixels or percent&quot;<br /><i>The following attributes are supported in Flash only<br /></i>onError = &quot;ActionScript code&quot;<br />wMode = &quot;window&quot; or &quot;transparent&quot; or &quot;opaque&quot;<br />accessible = &quot;yes&quot; or &quot;no&quot;<br />preloader = &quot;yes&quot; or &quot;no&quot;<br />timeout = &quot;seconds&quot;<br /><i>The following attributes are supported in HTML and XML only<br /></i><code>class = &quot;form class&quot;<br />enctype = &quot;Internet media type&quot;<br />id = &quot;HTML id&quot;<br />onload = &quot;load event script&quot;<br />onreset = &quot;reset event script&quot;<br />target = &quot;target window or frame&quot;</code>&gt;<br />...<br />&lt;/cfform&gt;
</pre><h4><a name="wp2433214"></a>See also</h4>
<p><a href="00000216.htm#1097239"><code>cfapplet</code></a>, <a href="00000223.htm#3798877"><code>cfcalendar</code></a>, <a href="00000257.htm#3833404"><code>cfformgroup</code></a>, <a href="00000258.htm#3768073"><code>cfformitem</code></a>, <a href="00000266.htm#1836171"><code>cfgrid</code></a>, <a href="00000279.htm#1100379"><code>cfinput</code></a>, <a href="00000331.htm#2553073"><code>cfselect</code></a>, <a href="00000337.htm#2612389"><code>cfslider</code></a>, <a href="00000341.htm#2773598">cftextarea</a>, <a href="00000347.htm#1104271"><code>cftree</code></a>; Requesting and Presenting Information in <i>ColdFusion MX Developer's Guide</i></p>
<h4><a name="wp3850228"></a>History</h4>
<p>ColdFusion&#160;MX&#160;7: </p>
<ul>
<li>
   Added ability to set the default value of the <code>scriptSrc</code> attribute in the ColdFusion MX Administrator.
</li>
<li>
   Deprecated the <code>passthrough</code> attribute. The tag now supports all HTML <code>form</code> tag attributes directly.
</li>
<li>
   Added the <code>method</code> attribute and support for the GET method.
</li>
<li>
   Added support for Flash and XML output, including the <code>format</code>, <code>height</code>, <code>width</code>, <code>preloader</code>, <code>timeout</code>, <code>wMode</code>, <code>accessible</code>, and <code>skin</code> attributes.
</li>
<li>
   Added <code>cfformgroup</code>, <code>cfformitem</code>, and <code>cftextarea</code> child tags.
</li>
</ul>
<p>ColdFusion&#160;MX:</p>
<ul>
<li>
   Deprecated the <code>enableCAB</code> attribute. It might not work, and might cause an error, in later releases. 
</li>
<li>
   Changed the <code>name</code> and <code>action</code> attributes to optional.
</li>
<li>
   Changed integer validation to require an integer value. In previous releases it would convert a floating point value to an integer.
</li>
</ul>
<h4><a name="wp2584485"></a>Attributes</h4>
<p>The following table lists attributes that ColdFusion uses directly. For HTML format forms, this tag also supports the standard HTML <code>form</code> tag attributes that are not on this list, and passes them directly to the browser. ColdFusion also includes all supported HTML attributes in the XML. </p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Attribute
    </th>
    <th>
Applies<br />to
    </th>
    <th>
Req/Opt
    </th>
    <th>
Default
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<p>name</p>
    </td>
    <td>
<p>HTML, Flash, XML</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>CFForm_<i>n</i></p>
    </td>
    <td>
<p>A name for the form. </p>
<p>In HTML format, if you omit this attribute and specify an <code>id</code> attribute, ColdFusion does not include a name attribute in the HTML sent to the browser; this behavior lets you use the <code>cfform</code> tag to create XHTML-compliant forms. If you omit the <code>name</code> attribute and the <code>id</code> attribute, ColdFusion generates a name of the form CFForm_<i>n</i> where <i>n</i> is a number that assigned serially to the forms on a page.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>action</p>
    </td>
    <td>
<p>HTML, Flash, XML</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>See Description</p>
    </td>
    <td>
<p>Name of ColdFusion page to execute when the form is submitted for processing.</p>
<p>If you omit this attribute, the form posts to the page identified by the CGI.SCRIPT_NAME variable, the requested page that resulted in displaying the form.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>method</p>
    </td>
    <td>
<p>HTML, Flash, XML</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>post</p>
    </td>
    <td>
<p>The method the browser uses to send the form data to the server:</p>
<ul>
<li>
   post: sends the data using the HTTP post method, This method sends the data in a separate message to the server.
</li>
<li>
   get: sends the data using the HTTP get method, which puts the form field contents in the URL query string.
</li>
</ul>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>format</p>
    </td>
    <td>
<p>HTML, Flash, XML</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>HTML</p>
    </td>
    <td>
<ul>
<li>
   HTML: generates an HTML form and send it to the client. <code>cfgrid</code> and <code>cftree</code> child controls can be in Flash or applet format.
</li>
<li>
   Flash: generates a Flash form and send it to the client. All controls are in Flash format.
</li>
<li>
   XML: generates XForms-compliant XML and save the results in a variable specified by the <code>name</code> attribute. By default, ColdFusion also applies an XSL skin and displays the result. For more information, see the <code>skin</code> attribute.
</li>
</ul>
    </td>
  </tr>
  <tr>
    <td>
<p>skin</p>
    </td>
    <td>
<p>Flash, <br />XML </p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>Flash: haloGreen</p>
<p>XML:</p>
<p>default.xsl</p>
    </td>
    <td>
<p><strong>Flash:&#160;</strong>Use a Macromedia halo color to stylize the output. The skin determines the color used for highlighted and selected elements.</p>
<ul>
<li>
   haloSilver
</li>
<li>
   haloBlue
</li>
<li>
   haloGreen
</li>
<li>
   haloOrange
</li>
</ul>
<p><strong>XML:</strong>&#160;Specfies whether to apply an XSL skin and display the resulting HTML to the client. Can be any of the following:</p>
<ul>
<li>
   ColdFusion MX skin name: applies the specified skin.
</li>
<li>
   XSL file name: applies the skin located in the specified path.
</li>
<li>
   &quot;none&quot;: does not apply an XSL skin. Your CFML page must process the XML that ColdFusion saves in the variable specified by the <code>name</code> attribute and display any results.
</li>
<li>
   (omitted) or &quot;default&quot;: uses the ColdFusion MX default skin.
</li>
</ul>
<p>You can specify the following ColdFusion MX skins (located in the <i>cf_webroot</i>\CFIDE\scripts\xsl directory):</p>
<ul>
<li>
   basic
</li>
<li>
   basiccss
</li>
<li>
   beige
</li>
<li>
   blue
</li>
<li>
   bluegray
</li>
<li>
   lightgray
</li>
<li>
   red
</li>
<li>
   silver
</li>
</ul>
<p>A filename can be any of the following: </p>
<ul>
<li>
   absolute URL
</li>
<li>
   URL relative to the web root
</li>
<li>
   absolute file path
</li>
<li>
   name of a file in the scripts folder or a subdirectory of the <i>cf_webroot</i>\CFIDE\scripts directory. In this case, do not specify the .xsl suffix. 
</li>
</ul>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>style</p>
    </td>
    <td>
<p>HTML, Flash, XML</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Styles to apply to the form. In HTML or XML format, ColdFusion passes the style attribute to the browser or XML.</p>
<p>In Flash format, must be a style specification in CSS format. For detailed information on specifying Flash styles, see <a href="00001388.htm#131336">Creating Forms in Macromedia Flash</a> in <i>ColdFusion MX Developer's Guide</i>.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>preserveData</p>
    </td>
    <td>
<p>HTML<br />XML</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>no</p>
    </td>
    <td>
<p>When the cfform action attribute posts back to the page that contains the form, this determines whether to override the control values with the submitted values. </p>
<ul>
<li>
   false: uses values specified in the control tag attributes.
</li>
<li>
   true: uses corresponding submitted values.
</li>
</ul>
<p>Applies to these controls:</p>
<ul>
<li>
   <code>cfinput</code>, <code>cfslider</code>, <code>cftextinput</code>: overrides the <code>value</code> attribute value.
</li>
<li>
   <code>cfselect</code> controls that are populated from queries: Overrides the <code>selected</code> attribute. See <a href="00000331.htm#2553073">cfselect</a>.
</li>
<li>
   <code>cftree</code> controls: overrides the <code>cftreeitem</code> <code>expand</code> attribute. If <code>true</code>, expands previously-selected elements. The <code>cftree</code> <code>completePath</code> attribute must be set to <code>yes</code>.
</li>
<li>
   <code>cfgrid</code> controls: has no effect. (This avoids confusion as to whether data has been resubmitted to the database by the control.)
</li>
</ul>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>onLoad</p>
    </td>
    <td>
<p>HTML<br />XML</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>JavaScript to execute when the form loads.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>onReset</p>
    </td>
    <td>
<p>HTML<br />XML</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>JavaScript to execute when the user clicks a reset button.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>onSubmit</p>
    </td>
    <td>
<p>HTML</p>
<p>Flash</p>
<p>XML</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>JavaScript or ActionScript function to execute to preprocess data before form is submitted. See <i>ColdFusion MX Developer's Guide</i>. If any child tags specify <code>onSubmit</code> field validation, ColdFusion does the validation before executing this JavaScript.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>scriptSrc</p>
    </td>
    <td>
<p>HTML, Flash<br />XML</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>See Description</p>
    </td>
    <td>
<p>Specifies the URL, relative to the web root, of the directory that contains the cfform.js file with the client-side JavaScript used by this tag and its child tags. For XML format forms, this directory is also the default directory for XSLT skins. </p>
<p>This attribute is useful if the file is not in the default location. This attribute may be required in some hosting environments and configurations that block access to the /CFIDE directory.</p>
<p>The default location is set in the ColdFusion MX Administrator; by default, it is /CFIDE/scripts/cfform.js.</p>
<p>If the Administrator has an empty default value, ColdFusion looks for the script in the directory that contains the ColdFusion page.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>codeBase</p>
    </td>
    <td>
<p>applets in HTML and XML</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>See Description</p>
    </td>
    <td>
<p>URL of downloadable JRE plug-in for Internet Explorer; used for <code>cfgrid</code>, <code>cfslider</code>, and <code>cftree</code> Java applet controls.</p>
<p>Default: /CFIDE/classes/cf-j2re-win.cab</p>
    </td>
  </tr>
  <tr>
    <td>
<p>archive</p>
    </td>
    <td>
<p>applets in HTML and </p>
<p>XML</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>See Description</p>
    </td>
    <td>
<p>URL of downloadable Java classes for <code>cfgrid</code>, <code>cfslider</code>, and <code>cftree</code> applet controls.</p>
<p>Default: /CFIDE/classes/cfapplets.jar</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>height</p>
    </td>
    <td>
<p>Flash</p>
<p>XML</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>100%</p>
    </td>
    <td>
<p>The height of the form. Use a number to specify pixels, In Flash, you can use a percentage value, such as <code>&quot;height=60%&quot;</code> to specify a percentage of the available width. The displayed height might be less than the specified size.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>width</p>
    </td>
    <td>
<p>Flash</p>
<p>XML</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>100%</p>
    </td>
    <td>
<p>The width of the form. Use a number to specify pixels, In Flash, you can use a percentage value, such as <code>&quot;width=60%&quot;</code> to specify a percentage of the available width..</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>onError</p>
    </td>
    <td>
<p>Flash</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Applies only for onSubmit or onBlur validation; has no effect for onServer validation. </p>
<p>An ActionScript expression or expressions to execute if the user submits a form with one or more validation errors.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>wMode</p>
    </td>
    <td>
<p>Flash</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>Window</p>
    </td>
    <td>
<p>Specifies how the Flash form appears relative to other displayable content that occupies the same space on an HTML page.</p>
<ul>
<li>
   window: the Flash form is the topmost layer on the page and obscures anything that would share the space, such as drop-down dynamic HTML lists.
</li>
<li>
   transparent: the Flash form honors the z-index of dhtml so you can float items above it. If the Flash form is above any item, transparent regions in the form show the content that is below it.
</li>
<li>
   opaque: the Flash form honors the z-index of dhtml so you can float items above it. If the Flash form is above any item, it blocks any content that is below it.
</li>
</ul>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>accessible</p>
    </td>
    <td>
<p>Flash</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>No</p>
    </td>
    <td>
<p>Specifies whether to include support screen readers in the Flash form. Screen reader support adds approximately 80KB to the SWF file sent to the client.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>preloader</p>
    </td>
    <td>
<p>Flash</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>true</p>
    </td>
    <td>
<p>Specifies whether to display a progress bar when loading the Flash form.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>timeout</p>
    </td>
    <td>
<p>Flash</p>
    </td>
    <td>
<p>Opt</p>
    </td>
    <td>
<p>0</p>
    </td>
    <td>
<p>Integer number of seconds for which to keep the form data in the Flash cache on the server. A value of 0 prevents the data from being cached. For more information, see <a href="00001408.htm#136320">Caching data in Flash forms</a> in <i>ColdFusion MX Developer's Guide</i>.</p>
    </td>
  </tr>
</table>

<p><strong>Note: </strong>Attributes that are not marked as supported in XML are not handled by the skins provided with ColdFusion MX. They are, however, included in the generated XML as html namespace attributes to the <code>form</code> tag.</p><h4><a name="wp3494751"></a>Usage</h4>
<p>This tag requires an end tag.</p>
<p>You can use the following ColdFusion form control tags within the <code>cfform</code> tag:</p>
<ul>
<li>
   <a href="00000216.htm#1097239"><code>cfapplet</code></a> Used in HTML and XML format only; embeds a registered Java applet.
</li>
<li>
   <a href="00000257.htm#3833404">cfformgroup</a> Used in Flash and XML format only; groups and arranges child controls.
</li>
<li>
   <a href="00000258.htm#3768073"><code>cfformitem</code></a><code> </code>Used in Flash and XML format only; adds horizontal rules, vertical rules, and text to the form.
</li>
<li>
   <a href="00000266.htm#1836171"><code>cfgrid</code></a> Creates a grid control to display tabular data.
</li>
<li>
   <a href="00000279.htm#1100379"><code>cfinput</code></a> Creates and an input element.
</li>
<li>
   <a href="00000331.htm#2553073"><code>cfselect</code></a> Creates a drop-down list box.
</li>
<li>
   <a href="00000337.htm#2612389"><code>cfslider</code></a> Used in HTML and XML format only; creates a slider control.
</li>
<li>
   <a href="00000341.htm#2773598"><code>cftextarea</code></a> Creates a multi-line text input box.
</li>
<li>
   <a href="00000347.htm#1104271"><code>cftree</code></a>&#160;Creates a tree control.
</li>
</ul>
<p>In HTML format, all tags, and in Flash format the <code>cftree</code> and <code>cfgrid</code> tags, require JavaScript support on the browser. The <code>cfapplet</code> tag and applet format <code>cfgrid</code>, <code>cfslider</code>, and <code>cftree</code> tags require the client to download a Java applet. </p>
<p>If you specify Flash format in the <code>cfform</code> tag, ColdFusion ignores any HTML in the form body. You must use ColdFusion tags, such as <code>cfinput</code>, for all form controls. You can include individual Flash format <code>cfgrid</code> and <code>cftree</code> controls in an HTML format <code>cfform</code> tag.</p>
<p>In Flash format, if your forms do not request sensitive data (such as credit card numbers), consider setting the <code>timeout</code> attribute. This can prevent users from getting &quot;The form data has expired, Please reload this page in your browser&quot; errors if they use the browser back button to return to the form. For more information, see <a href="00001408.htm#136320">Caching data in Flash forms</a> in <a href="00001408.htm#136320">Caching data in Flash forms</a>in <i>ColdFusion MX Developer's Guide</i>.</p>
<p><strong>Note: </strong>In Flash format, if you do not specify <code>height</code> and <code>width</code> attributes, Flash reserves browser space equal to the area of the browser window. If any other output follows the form, users must scroll to see it. Therefore, if you follow a Flash form with additional output, specify the <code>height</code> and <code>width</code> values.</p><p>If attribute value text must include quotation marks, escape them by doubling them.</p>
<h4><a name="wp3758742"></a>Using the onError attribute in Flash forms</h4>
<p>If you use onSubmit or onBlur validation, the <code>onError</code> attribute lets you specify ActionScript code to execute if the user tries to submit a Flash form with validation errors, as follows:</p>
<ul>
<li>
   If you specify one or more valid Flash expressions, Flash executes the expressions. 
</li>
<li>
   If you omit the attribute, Flash displays a dialog box with all applicable error messages.
</li>
<li>
   If you specify <code>onError=&quot;&quot; </code>(an empty string) Flash does not display any message, but does not submit the form.
</li>
</ul>
<p>Your ActionScript can use the errors variable to determine the fields and errors. The errors object has the following fields:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Field
    </th>
    <th>
Contents
    </th>
  </tr>
  <tr>
    <td>
<p>name </p>
    </td>
    <td>
<p>The <code>name</code> attribute of the control's CFML tag.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>field </p>
    </td>
    <td>
<p>The internal name used by Flash for the field. name (for example, _level0.field1)</p>
    </td>
  </tr>
  <tr>
    <td>
<p>value </p>
    </td>
    <td>
<p>The value in the field.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>message </p>
    </td>
    <td>
<p>The <code>message</code> attribute of the control's CFML tag.</p>
    </td>
  </tr>
</table>

<p>The following example shows <code>cfform</code> tags with an <code>onError</code> attribute that selects the tab in an accordion or tabnavigator that contains a lastName field with an invalid entry:</p>
<pre>&lt;cfform name=&quot;form1&quot; format=&quot;flash&quot; width=&quot;800&quot; height=&quot;500&quot; 
      onError=&quot;if (errors[&#39;lastName&#39;] != undefined
         ){tabA.selectedIndex=0; _root.lastName.setFocus();}&quot;&gt;
</pre><h4><a name="wp3903319"></a>&lt;Incorporating HTML form tags and attributes</h4>
<p>In HTML format, the <code>cfform</code> tag lets you incorporate the following standard HTML elements. They are not available in Flash format:</p>
<ul>
<li>
   Standard HTML <code>form</code> tag attributes and values. The attributes and values are included in the <code>form</code> tag that <code>cfform</code> outputs in the page. For example, you can use <code>form</code> tag attributes like <code>target</code> or <code>onMouseOver</code> with <code>cfform</code>.
</li>
<li>
   HTML tags that can ordinarily be put within the HTML <code>form</code> tag. For example, you can use the HTML <code>input</code> tag to create a submit button in a <code>cfform</code>, without the other features of <code>cfinput</code>:
<pre>
&lt;cfform&gt;
	&lt;input type = &quot;Submit&quot; value = &quot; update... &quot;&gt;
&lt;/cfform&gt;
</pre>
</li>
</ul>
<h4><a name="wp3843155"></a>Examples</h4>
<pre>&lt;h3&gt;cfform Example&lt;/h3&gt;
&lt;!--- If Form.oncethrough exists, the form has been submitted. ---&gt;
&lt;cfif IsDefined(&quot;Form.oncethrough&quot;)&gt;
   &lt;cfif IsDefined(&quot;Form.testVal1&quot;)&gt;
      &lt;h3&gt;Results of Radio Button Test&lt;/h3&gt;
      &lt;cfif Form.testVal1&gt;Your radio button answer was yes
      &lt;cfelse&gt;Your radio button answer was no
      &lt;/cfif&gt;
   &lt;/cfif&gt;
   &lt;h3&gt;Results of Checkbox Test&lt;/h3&gt;
   &lt;cfif IsDefined(&quot;Form.chkTest2&quot;)&gt;
      Your checkbox answer was yes
   &lt;cfelse&gt;
      Your checkbox answer was no
   &lt;/cfif&gt;
   &lt;cfif IsDefined(&quot;Form.textSample&quot;) AND Form.textSample is not &quot;&quot;&gt;
      &lt;h3&gt;Results of Credit Card Input&lt;/h3&gt;
      Your credit card number, &lt;cfoutput&gt;#Form.textSample#&lt;/cfoutput&gt;, 
      was valid under the MOD 10 algorithm.
   &lt;/cfif&gt;
   &lt;cfif IsDefined(&quot;Form.sampleSlider&quot;)&gt;
      &lt;cfoutput&gt;
         &lt;h3&gt;You gave this page a rating of #Form.sampleSlider#&lt;/h3&gt;
      &lt;/cfoutput&gt;
   &lt;/cfif&gt;
   &lt;hr noshade=&quot;True&quot;&gt;
&lt;/cfif&gt;

&lt;!--- Begin by calling the cfform tag. ---&gt;
&lt;cfform name=&quot;cfformexample&quot;&gt;
   &lt;h4&gt;This example displays radio button input type for cfinput.&lt;/h4&gt;
   Yes &lt;cfinput type = &quot;Radio&quot; name = &quot;TestVal1&quot; value = &quot;Yes&quot; checked&gt;
   No &lt;cfinput type = &quot;Radio&quot; name = &quot;TestVal1&quot; value = &quot;No&quot;&gt;
   &lt;h4&gt;This example displays checkbox input type for cfinput.&lt;/h4&gt;
   &lt;cfinput type = &quot;Checkbox&quot; name = &quot;ChkTest2&quot; value = &quot;Yes&quot;&gt;
   &lt;h4&gt;This shows client-side validation for cfinput text boxes.&lt;/h4&gt;
   (&lt;i&gt;This item is optional&lt;/i&gt;)&lt;br&gt;
   Please enter a credit card number:
   &lt;cfinput type = &quot;Text&quot; name = &quot;TextSample&quot; 
      message = &quot;Please enter a Credit Card Number&quot; 
      validate = &quot;creditcard&quot; required = &quot;No&quot;&gt;
   &lt;h4&gt;This example shows the use of the cfslider tag.&lt;/h4&gt;
   Rate your approval of this example from 1 to 10 by sliding control.&lt;br&gt;
   1 &lt;cfslider name = &quot;sampleSlider&quot; width=&quot;100&quot;
         label = &quot;Page Value: &quot; range = &quot;1,10&quot;
         message = &quot;Please enter a value from 1 to 10&quot;&gt; 10
   &lt;p&gt;&lt;cfinput type = &quot;submit&quot; name = &quot;submit&quot; value = &quot;show me the result&quot;&gt;
   &lt;cfinput type = &quot;hidden&quot; name = &quot;oncethrough&quot; value = &quot;Yes&quot;&gt;&lt;/p&gt;
&lt;/cfform&gt;
</pre><h4><a name="wp3770374"></a>A Simple XML form</h4>
<p>The following example shows a simple XML-format form. It uses the default.xsl transform that is supplied with ColdFusion to generate the HTML output for display:</p>
<pre>&lt;cfform name=&quot;testXForm&quot; format=&quot;XML&quot; skin=&quot;basic&quot;&gt;
  &lt;!--- Use cfformgroup to put the first and last names on a single line. ---&gt;
  &lt;cfformgroup type=&quot;horizontal&quot;&gt;
     &lt;cfinput type=&quot;text&quot; name=&quot;firstname&quot; label=&quot;First Name:&quot; value=&quot;Robert&quot;&gt;
     &lt;cfinput type=&quot;text&quot; name=&quot;lastname&quot; label=&quot;Last Name:&quot; value=&quot;Smith&quot;&gt;
  &lt;/cfformgroup&gt;
  &lt;cfinput type=&quot;password&quot; name=&quot;password&quot; label=&quot;Password:&quot; value=&quot;&quot;&gt;
  &lt;cfinput type=&quot;hidden&quot; name=&quot;hidden&quot; label=&quot;hidden:&quot; value=&quot;&quot;&gt;
  &lt;cfselect name=&quot;state&quot; style=&quot;width:200&quot; label=&quot;State&quot;&gt;
    &lt;option&gt;California&lt;/option&gt;
    &lt;option selected&gt;Utah&lt;/option&gt;
    &lt;option&gt;Iowa&lt;/option&gt;
    &lt;option selected&gt;New York&lt;/option&gt;
   &lt;/cfselect&gt;
   &lt;cftextarea name=&quot;description&quot; label=&quot;Description:&quot; rows=&quot;5&quot; cols=&quot;40&quot;&gt;this is sample text.&lt;/cftextarea&gt;
&lt;/cfform&gt;
</pre>

<hr />
<p align="right"><p align="right"><a href="00000255.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000257.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000256.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



