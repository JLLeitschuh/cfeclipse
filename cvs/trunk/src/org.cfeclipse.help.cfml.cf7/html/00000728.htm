<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>getData</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000727.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000729.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>getData</h1>
<h4><a name="wp1174552"></a>Description</h4>
<p>Returns the data Map that contains the message contents and other gateway-specific information.</p>
<h4><a name="wp1174554"></a>Category</h4>
<p>Event Gateway Development</p>
<h4><a name="wp1174556"></a>Syntax</h4>
<pre>Map getData()
</pre><h4><a name="wp1174558"></a>See also</h4>
<p><a href="00000735.htm#1176695"><code>setData</code></a>, <a href="00000744.htm#1182144">CFML CFEvent structure</a>, <a href="00001688.htm#117767">CFEvent class</a> in <a href="00001684.htm#146437">Creating Custom Event Gateways</a> in <i>ColdFusion MX Developer's Guide</i></p>
<h4><a name="wp1174571"></a>Returns</h4>
<p>The event data structure, or null. This structure includes the message contents being passed by the gateway and any other gateway-specific information.</p>
<h4><a name="wp1177058"></a>Usage</h4>
<p>The contents of the data Map depends on the event gateway type. Typical fields include the message contents, originator ID, destination ID, and if a gateway (such as the ColdFusion MX SMS gateway) supports multiple commands, the command. </p>
<p><strong>Note: </strong>The returned Map object has case-insensitive keys. </p><h4><a name="wp1174575"></a>Example</h4>
<p>The following outgoingMessage method from the SocketGateway example gateway gets the message contents from the CFEvent data field of an outgoing message. If the CFEvent object does not include an OriginatorID field, it also tries to get the originator ID from the data field.</p>
<pre>public String outgoingMessage(coldfusion.eventgateway.CFEvent cfmsg)
{
   String retcode=&quot;ok&quot;;
   // Get the table of data returned from the event handler
<strong>   Map data = cfmsg.getData();</strong>
   String message = (String) data.get(&quot;MESSAGE&quot;);
   // find the right socket to write to from the socketRegistry hashtable
   if (cfmsg.getOriginatorID() != null)
      ((SocketServerThread)socketRegistry.get(cfmsg.getOriginatorID())).
         writeOutput(message);
   else if (data.get(&quot;OriginatorID&quot;) != null)
      ((SocketServerThread)socketRegistry.get(data.get(&quot;OriginatorID&quot;))).
         writeOutput(message);
   else {
      System.out.println(&quot;cannot send outgoing message. OriginatorID is not
         available.&quot;);
         retcode=&quot;failed&quot;;
   }
   return retcode;
}
</pre>

<hr />
<p align="right"><p align="right"><a href="00000727.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000729.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000728.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



