<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>cfselect</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000330.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000332.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>cfselect</h1>
<h4><a name="wp2553074"></a>Description</h4>
<p>Constructs a drop-down list box form control. Used within a <code>cfform</code> tag. You can populate the list from a query, or by using the HTML <code>option</code> tag. </p>
<h4><a name="wp1960264"></a>Category</h4>
<p><a href="00000205.htm#2459968">Forms tags</a></p>
<h4><a name="wp1103229"></a>Syntax</h4>
<pre><code>&lt;cfselect <br />   name = &quot;name&quot;<br />label = &quot;label&quot;<br />style = &quot;style specification&quot;<br />   size = &quot;integer&quot;<br />   required = &quot;yes&quot; or &quot;no&quot;<br />   message = &quot;text&quot;<br />   onError = &quot;text&quot;<br />   multiple = &quot;yes&quot; or &quot;no&quot;<br />   query = &quot;queryname&quot;<br />   value = &quot;text&quot;<br />   display = &quot;text&quot;&gt;<br />   group = &quot;query column name<br />   queryPosition = &quot;above&quot; or &quot;below&quot;<br />   selected = &quot;value or list&quot;<br /></code>onKeyUp = &quot;JavaScript or ActionScript&quot;<br />onKeyDown = &quot;JavaScript or ActionScript&quot;<br />onMouseUp = &quot;JavaScript or ActionScript&quot;<br />onMouseDown = &quot;JavaScript or ActionScript&quot;<br />onChange = &quot;JavaScript or ActionScript&quot;<br />onClick = &quot;JavaScript or ActionScript&quot;<br />visible = &quot;Yes&quot; or &quot;No&quot;<br />enabled = &quot;Yes&quot; or &quot;No&quot;<br />tooltip = &quot;tip text&quot;<br />height = &quot;number of pixels&quot; Flash only<br />width = &quot;number of pixels&quot; Flash only<br />&gt;<br /><i>zero or more HTML option tags<br /></i><code>&lt;/cfselect&gt;</code>
</pre><h4><a name="wp2340982"></a>See also</h4>
<p><a href="00000216.htm#1097239">cfapplet</a>, <a href="00000223.htm#3798877">cfcalendar</a>, <a href="00000256.htm#2433198">cfform</a>, <a href="00000257.htm#3833404">cfformgroup</a>, <a href="00000258.htm#3768073">cfformitem</a>, <a href="00000266.htm#1836171">cfgrid</a>, <a href="00000279.htm#1100379">cfinput</a>, <a href="00000337.htm#2612389">cfslider</a>, <a href="00000341.htm#2773598">cftextarea</a>, <a href="00000347.htm#1104271">cftree</a>; <a href="00001330.htm#1096836">Introduction to Retrieving and Formatting Data</a> in <i>ColdFusion MX Developer's Guide</i></p>
<h4><a name="wp2783780"></a>History</h4>
<p>ColdFusion&#160;MX&#160;7:</p>
<ul>
<li>
   Added support for specifying multiple values to the <code>selected</code> attribute.
</li>
<li>
   Deprecated the <code>passthrough</code> attribute. The tag now supports all HTML <code>select</code> tag attributes directly.
</li>
<li>
   Added <code>on</code>-prefixed attributes.
</li>
<li>
   Added <code>enabled</code>, <code>group</code>, <code>height</code>, <code>label</code>, <code>queryPosition</code>, <code>tooltip</code>, <code>visible</code>, and <code>width</code> attributes.
</li>
</ul>
<h4><a name="wp2699837"></a>Attributes</h4>
<p>The following table lists attributes that ColdFusion uses directly. The tag also supports all HTML <code>select</code> tag attributes that are not on this list, and passes them directly to the browser.</p>
<p><strong>Note: </strong>Attributes that are marked as Flash only are not handled by the skins provided with ColdFusion&#160;MX. They are, however, included in the generated XML.</p><table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Attribute
    </th>
    <th>
Req/Opt;
Format
    </th>
    <th>
Default
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<p>name</p>
    </td>
    <td>
<p>Required;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Name of the select form element.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>label</p>
    </td>
    <td>
<p>Optional;</p>
<p>Flash and XML</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Label to put next to the control on a Flash or XML-format form.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>style</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>In HTML or XML format forms, ColdFusion passes the style attribute to the browser or XML.</p>
<p>In Flash format, must be a style specification in CSS format, with the same syntax and contents as used in Macromedia Flex for the corresponding Flash element. </p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>size</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>1</p>
    </td>
    <td>
<p>Number of entries to display at one time. The default, 1, displays a drop-down list. Any other value displays a list box with <code>size</code> number of entries visible at one time.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>required</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>No</p>
    </td>
    <td>
<ul>
<li>
   Yes: a list element must be selected when the form is submitted.
</li>
</ul>
<p><strong><i>Note: </i></strong>This attribute has no effect if you omit the <code>size</code> attribute or set it to 1, because the browser always submits the displayed item. You can work around this issue: format forms by having an initial <code>option</code> tag with value=&quot; &quot; (note the space character between the quotation marks).</p>
<ul>
<li>
   No
</li>
</ul>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>message</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Message to display if <code>required</code> <code>=</code> <code>&quot;Yes&quot;</code> and no selection is made.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>onError</p>
    </td>
    <td>
<p>Optional;</p>
<p>HTML and XML</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Custom JavaScript function to execute if validation fails.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>multiple</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>No</p>
    </td>
    <td>
<ul>
<li>
   Yes: allows selecting multiple elements in drop-down list.
</li>
<li>
   No
</li>
</ul>
    </td>
  </tr>
  <tr>
    <td>
<p>query</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Name of query to populate drop-down list.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>value</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Query column to use for the value of each list element. Used with the <code>query</code> attribute.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>display</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>Value of <code>value</code> attribute</p>
    </td>
    <td>
<p>Query column to use for the display label of each list element. Used with the <code>query</code> attribute.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>group</p>
    </td>
    <td>
<p>Optional; HTML and XML</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Query column to use to group the items in the drop-down list into a two-level hierarchical list.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>queryPosition</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>above</p>
    </td>
    <td>
<p>If you populate the options list with a query and use HTML <code>option</code> child tags to specify additional entries, determines the location of the items from the query relative to the items from the <code>option</code> tags:</p>
<ul>
<li>
   above: puts the query items above the <code>options</code> items.
</li>
<li>
   below: puts the query items below the <code>options</code> items.
</li>
</ul>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>selected</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>One or more option values to preselect in the selection list. To specify multiple values, use a comma-delimited list. This attribute applies only if selection list items are generated from a query. The <code>cfform</code> <code>preservedata</code> attribute value can override this value.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>onKeyUp</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>JavaScript (HTML/XML) or ActionScript (Flash) to run when the user releases a keyboard key in the control.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>onKeyDown</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>JavaScript (HTML/XML) or ActionScript (Flash) ActionScript to run when the user presses a keyboard key in the control.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>onMouseUp</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>JavaScript (HTML/XML) or ActionScript (Flash) to run when the user presses a mouse button in the control.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>onMouseDown</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>JavaScript (HTML/XML) or ActionScript (Flash) to run when the user releases a mouse button in the control.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>onChange</p>
    </td>
    <td>
<p>Optional;</p>
<p>All</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>JavaScript (HTML/XML) or ActionScript (Flash) to run when the control changes due to user action.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>onClick</p>
    </td>
    <td>
<p>Optional; HTML and XML</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>JavaScript to run when the user clicks the control.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>enabled</p>
    </td>
    <td>
<p>Optional; Flash</p>
    </td>
    <td>
<p>Yes</p>
    </td>
    <td>
<p>Boolean value specifying whether the control is enabled. A disabled control appears in light gray. The inverse of the <code>disabled</code> attribute.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>visible</p>
    </td>
    <td>
<p>Optional; Flash</p>
    </td>
    <td>
<p>Yes</p>
    </td>
    <td>
<p>Boolean value specifying whether to show the control. Space that would be occupied by an invisible control is blank.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>tooltip</p>
    </td>
    <td>
<p>Optional; Flash</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>Text to display when the mouse pointer hovers over the control.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<p>height</p>
    </td>
    <td>
<p>Optional; Flash</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>The height of the control, in pixels.</p>
    </td>
  </tr>
  <tr>
    <td>
<p>width</p>
    </td>
    <td>
<p>Optional; Flash</p>
    </td>
    <td>
<p>&#160;</p>
    </td>
    <td>
<p>The width of the control, in pixels.</p>
    </td>
  </tr>
</table>

<p><strong>Note: </strong>Attributes that are marked as Flash only are not handled by the skins provided with ColdFusion MX. They are, however, included in the generated XML.</p><h4><a name="wp2808267"></a>Usage</h4>
<p>This tag requires an end tag and can include HTML <code>option</code> and <code>optgroup</code> child tags. </p>
<p>To ensure that a selected list box item persists across postbacks, use the <code>cfform</code> <code>preserveData</code> attribute with a list generated from a query. (This strategy works only with data that is populated from a query.)</p>
<p>If the <code>cfform preserveData</code> attribute is true and the form posts back to the same page, and if the control is populated by a query, the posted selection(s) for the <code>cfselect</code> control are used instead of the <code>Selected</code> attribute. For controls that are populated with regular HTML <code>option</code> tags, the developer must dynamically add the <code>Selected</code> attribute to the appropriate option tag(s).</p>
<p>The <code>group</code> option generates a query using SQL GROUP BY syntax and places the <code>value</code> column entries from each group in an indented list under the <code>group</code> column's field value. This option generates an HTML <code>optgroup</code> tag for each entry in the <code>group</code> column.</p>
<p>Close each HTML <code>option</code> tag in the <code>cfselect</code> tag body with a <code>&lt;/option&gt;</code> end tag. If you do not do so, and you specify <code>queryPosition=&quot;below&quot;</code>, the first item from the query might not appear in the list.</p>
<p>For this tag to work properly. the browser must be JavaScript-enabled. </p>
<p>For more information, see the <a href="00000256.htm#2433198"><code>cfform</code></a> tag entry. </p>
<h4><a name="wp1103264"></a>Example</h4>
<p>The following example lets you select one or more employee names from a list of all employees, grouped by departments, and displays the selected names and the employee's email addresses. It includes an option to get data for all employees.</p>
<pre><strong>&lt;!--- Get the employee names from the database. ---&gt;</strong>
<strong>&lt;!--- Use SQL to create a Name field with first and last names. ---&gt;</strong>
<strong>&lt;cfquery name = &quot;GetAllEmployees&quot; dataSource = &quot;cfdocexamples&quot;</strong>
<strong>      cachedwithin=&quot;#createTimeSpan(0,1,0,0)#&quot;&gt;</strong>
<strong>   SELECT Emp_ID, EMail, Phone, Department, FirstName, LastName, FirstName +&#39; &#39;</strong>
<strong>      +lastName as Name</strong>
<strong>   FROM   Employees </strong>
<strong>   GROUP BY Department, Emp_ID, EMail, Phone, FirstName, LastName, FirstName</strong>
<strong>&lt;/cfquery&gt;</strong>


<strong>&lt;h2&gt;cfselect Example&lt;/h2&gt;</strong>
<strong>&lt;!-- The cfif statement is true if the form was submitted.</strong>
<strong>   Show the selected names. ---&gt;</strong>
<strong>&lt;cfif IsDefined(&quot;form.employeeid&quot;)&gt;</strong>
<strong>   &lt;!--- The form was submitted. ---&gt;</strong>
<strong>   &lt;h4&gt;You Selected the following employees&lt;/h3&gt;</strong>
<strong>   &lt;cfif form.employeeid IS &quot;&quot;&gt;</strong>
<strong>      &lt;!--- Select All option was selected. Show all employees. ---&gt;</strong>
<strong>      &lt;cfoutput query=&quot;GetAllEmployees&quot;&gt;</strong>
<strong>         #name#&lt;br&gt;</strong>
<strong>         Email: #email#&lt;br&gt;&lt;br&gt;</strong>
<strong>      &lt;/cfoutput&gt;</strong>
<strong>   &lt;cfelse&gt;</strong>
<strong>      &lt;!--- Use a query of queries to get the data for the selected users. </strong>
<strong>         Form.employeeid is a comma-delimited list of selected employee IDs. ---&gt;</strong>
<strong>      &lt;cfquery name = &quot;GetSelectedEmployees&quot; dbtype=&quot;query&quot;&gt;</strong>
<strong>         SELECT Emp_ID, EMail, Phone, Department, FirstName, LastName, FirstName</strong>
<strong>            +&#39; &#39; +lastName as Name</strong>
<strong>         FROM   GetAllEmployees</strong>
<strong>         WHERE Emp_ID in (#form.employeeid#)</strong>
<strong>      &lt;/cfquery&gt;   </strong>
<strong>      &lt;!--- Display the names and e-mail addresses from the query. ---&gt;</strong>
<strong>      &lt;cfoutput query=&quot;GetSelectedEmployees&quot;&gt;</strong>
<strong>         #firstName# #lastName#&lt;br&gt;</strong>
<strong>         Email: #email#&lt;br&gt;</strong>
<strong>         &lt;br&gt;</strong>
<strong>      &lt;/cfoutput&gt;</strong>
<strong>   &lt;/cfif&gt; </strong>
<strong>&lt;/cfif&gt;</strong>

<strong>&lt;!--- The cfform tag posts back to the current page. ---&gt;</strong>
<strong>&lt;h3&gt;Select one or more employees&lt;/h3&gt;</strong>
<strong>&lt;cfform action = &quot;#CGI.SCRIPT_NAME#&quot;&gt;</strong>
<strong>   &lt;!--- Use cfselect to present the query's LastName column, grouped by department. </strong>
<strong>      Allow Multiple selections.---&gt;</strong>
<strong>   &lt;cfselect </strong>
<strong>      name = &quot;employeeid&quot; </strong>
<strong>      size = &quot;15&quot; </strong>
<strong>      multiple=&quot;yes&quot; </strong>
<strong>      required = &quot;Yes&quot;</strong>
<strong>      message = &quot;Select one or more employee names&quot; </strong>
<strong>      query = &quot;GetAllEmployees&quot; </strong>
<strong>      group=&quot;Department&quot;</strong>
<strong>      display =&quot;name&quot; </strong>
<strong>      value =&quot;emp_id&quot; </strong>
<strong>      queryPosition=&quot;Below&quot;&gt;</strong>
<strong>      &lt;!--- Add an option to select all employees. ---&gt;</strong>
<strong>      &lt;option value = &quot;&quot;&gt;Select All&lt;/option&gt;</strong>
<strong>   &lt;/cfselect&gt;&lt;br&gt;&lt;br&gt;</strong>
<strong>   &lt;input type=&quot;Submit&quot;&gt;</strong>
&lt;/cfform&gt; 
</pre>

<hr />
<p align="right"><p align="right"><a href="00000330.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000332.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000331.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



