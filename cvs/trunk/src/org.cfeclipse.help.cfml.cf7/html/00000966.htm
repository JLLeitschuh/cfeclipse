<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>Structure examples</title>
</head>
<body>
<p align="right"><p align="right"><a href="00000965.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000967.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>Structure examples</h1>
<p>Structures are particularly useful for grouping together a set of variables under a single name. The example in this section uses structures to collect information from a form, and to submit that information to a custom tag, named <code>cf_addemployee</code>. For information on creating and using custom tags, see <a href="00001069.htm#1136373">Creating and Using Custom CFML Tags</a>.</p>
<h4><a name="wp1112691"></a>Example file newemployee.cfm</h4>
<p>The following ColdFusion page shows how to create structures and use them to add data to a database. It calls the <code>cf_addemployee</code> custom tag, which is defined in the addemployee.cfm file.</p>
<pre>&lt;html&gt;
&lt;head&gt;
&lt;title&gt;Add New Employees&lt;/title&gt;
&lt;/head&gt;

&lt;body&gt;
&lt;h1&gt;Add New Employees&lt;/h1&gt;
&lt;!--- Action page code for the form at the bottom of this page ---&gt;

&lt;!--- Establish parameters for first time through ---&gt;
&lt;cfparam name=&quot;Form.firstname&quot; default=&quot;&quot;&gt;
&lt;cfparam name=&quot;Form.lastname&quot; default=&quot;&quot;&gt;
&lt;cfparam name=&quot;Form.email&quot; default=&quot;&quot;&gt;
&lt;cfparam name=&quot;Form.phone&quot; default=&quot;&quot;&gt;
&lt;cfparam name=&quot;Form.department&quot; default=&quot;&quot;&gt;

&lt;!--- If at least the firstname form field is passed, create<br />    a structure named employee and add values ---&gt;
&lt;cfif #Form.firstname# eq &quot;&quot;&gt;
   &lt;p&gt;Please fill out the form.&lt;/p&gt;
&lt;cfelse&gt;
  &lt;cfoutput&gt;
   &#160;&lt;cfscript&gt;
      employee=StructNew();
      employee.firstname = Form.firstname;
      employee.lastname = Form.lastname;
      employee.email = Form.email;
      employee.phone = Form.phone;
      employee.department = Form.department;
   &#160;&lt;/cfscript&gt; 

&lt;!--- Display results of creating the structure ---&gt;
   &#160;First name is #StructFind(employee, &quot;firstname&quot;)#&lt;br&gt;
   &#160;Last name is #StructFind(employee, &quot;lastname&quot;)#&lt;br&gt;
   &#160;EMail is #StructFind(employee, &quot;email&quot;)#&lt;br&gt;
   &#160;Phone is #StructFind(employee, &quot;phone&quot;)#&lt;br&gt;
   &#160;Department is #StructFind(employee, &quot;department&quot;)#&lt;br&gt;
   &lt;/cfoutput&gt;

  &lt;!--- Call the custom tag that adds employees ---&gt;
   &lt;cf_addemployee empinfo=&quot;#employee#&quot;&gt;
&lt;/cfif&gt;

&lt;!--- The form for adding the new employee information ---&gt;
&lt;hr&gt;
&lt;form action=&quot;newemployee.cfm&quot; method=&quot;Post&quot;&gt;
First Name:&amp;nbsp;
&lt;input name=&quot;firstname&quot; type=&quot;text&quot; hspace=&quot;30&quot; maxlength=&quot;30&quot;&gt;&lt;br&gt;
Last Name:&amp;nbsp;
&lt;input name=&quot;lastname&quot; type=&quot;text&quot; hspace=&quot;30&quot; maxlength=&quot;30&quot;&gt;&lt;br&gt;
EMail:&amp;nbsp;
&lt;input name=&quot;email&quot; type=&quot;text&quot; hspace=&quot;30&quot; maxlength=&quot;30&quot;&gt;&lt;br&gt;
Phone:&amp;nbsp;
&lt;input name=&quot;phone&quot; type=&quot;text&quot; hspace=&quot;20&quot; maxlength=&quot;20&quot;&gt;&lt;br&gt;
Department:&amp;nbsp;
&lt;input name=&quot;department&quot; type=&quot;text&quot; hspace=&quot;30&quot; maxlength=&quot;30&quot;&gt;&lt;br&gt;

&lt;input type=&quot;Submit&quot; value=&quot;OK&quot;&gt;
&lt;/form&gt;
&lt;br&gt;
&lt;/body&gt;
&lt;/html&gt;
</pre><h4><a name="wp1124227"></a>Reviewing the code</h4>
<p>The following table describes the code:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Code
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<pre>&lt;cfparam name=&quot;Form.firstname&quot; default=&quot;&quot;&gt;
&lt;cfparam name=&quot;Form.lastname&quot; default=&quot;&quot;&gt;
&lt;cfparam name=&quot;Form.email&quot; default=&quot;&quot;&gt;
&lt;cfparam name=&quot;Form.phone&quot; default=&quot;&quot;&gt;
&lt;cfparam name=&quot;Form.department&quot; default=&quot;&quot;&gt;
</pre>    </td>
    <td>
<p>Set default values of all form fields so that they exist the first time this page is displayed and can be tested.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<pre>&lt;cfif #form.firstname# eq &quot;&quot;&gt;
&#160;Please fill out the form.&lt;br&gt;
</pre>    </td>
    <td>
<p>Test the value of the form's firstname field. This field is required. The test is False the first time the page displays.</p>
<p>If there is no data in the Form.firstname variable, display a message requesting the user to fill the form.</p>
    </td>
  </tr>
  <tr>
    <td>
<pre>&lt;cfelse&gt;
&#160;&lt;cfoutput&gt;
&#160;&#160;&lt;cfscript&gt;
&#160;&#160;&#160;employee=StructNew();
&#160;&#160;&#160;employee.firstname = Form.firstname;
&#160;&#160;&#160;employee.lastname = Form.lastname;
&#160;&#160;&#160;employee.email = Form.email;
&#160;&#160;&#160;employee.phone = Form.phone;
&#160;&#160;&#160;employee.department = Form.department;
&#160;&#160;&lt;/cfscript&gt; 

&#160;&#160;First name is #employee.firstname#&lt;br&gt;
&#160;&#160;Last name is #employee.lastname#&lt;br&gt;
&#160;&#160;EMail is #employee.email#&lt;br&gt;
&#160;&#160;Phone is #employee.phone#&lt;br&gt;
&#160;&#160;Department is #employee.department#&lt;br&gt;
&#160;&lt;/cfoutput&gt;
</pre>    </td>
    <td>
<p>If Form.firstname contains text, the user submitted the form. </p>
<p>Use CFScript to create a new structure named employee and fill it with the form field data. </p>
<p>Then display the contents of the structure</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<pre>&lt;cf_addemployee empinfo=&quot;#duplicate(employee)#&quot;&gt;
&lt;/cfif&gt;
</pre>    </td>
    <td>
<p>Call the <code>cf_addemployee</code> custom tag and pass it a copy of the employee structure in the empinfo attribute. </p>
<p>The duplicate function ensures that the custom tag gets a copy of the employee structure, not the original. While this is not necessary in this example, it is good practice because it prevents the custom tag from modifying the calling page's structure contents.</p>
    </td>
  </tr>
  <tr>
    <td>
<pre>&lt;form action=&quot;newemployee.cfm&quot; method=&quot;Post&quot;&gt;
First Name:&amp;nbsp;
&lt;input name=&quot;firstname&quot; type=&quot;text&quot; hspace=&quot;30&quot;<br />&#160;&#160;&#160;maxlength=&quot;30&quot;&gt;&lt;br&gt;
Last Name:&amp;nbsp;
&lt;input name=&quot;lastname&quot; type=&quot;text&quot; hspace=&quot;30&quot;<br />&#160;&#160;&#160;maxlength=&quot;30&quot;&gt;&lt;br&gt;
EMail:&amp;nbsp;
&lt;input name=&quot;email&quot; type=&quot;text&quot; hspace=&quot;30&quot; <br />&#160;&#160;&#160;maxlength=&quot;30&quot;&gt;&lt;br&gt;
Phone:&amp;nbsp;
&lt;input name=&quot;phone&quot; type=&quot;text&quot; hspace=&quot;20&quot; <br />&#160;&#160;&#160;maxlength=&quot;20&quot;&gt;&lt;br&gt;
&lt;p&gt;Department:&amp;nbsp;
&lt;input name=&quot;department&quot; type=&quot;text&quot; hspace=&quot;30&quot;<br />&#160;&#160;&#160;maxlength=&quot;30&quot;&gt;&lt;br&gt;
&lt;br&gt;
&lt;input type=&quot;Submit&quot; value=&quot;OK&quot;&gt;
&lt;/form&gt;
</pre>    </td>
    <td>
<p>The data form. When the user clicks Submit, the form posts the data to this ColdFusion page.</p>
    </td>
  </tr>
</table>

<h4><a name="wp1096465"></a>Example file addemployee.cfm</h4>
<p>The following file is an example of a custom tag used to add employees. Employee information is passed through the employee structure (the empinfo attribute). For databases that do not support automatic key generation, you must also add the Emp_ID.</p>
<pre>&lt;cfif StructIsEmpty(attributes.empinfo)&gt;
   &lt;cfoutput&gt;
      Error. No employee data was passed.&lt;br&gt;
   &lt;/cfoutput&gt;
   &lt;cfexit method=&quot;ExitTag&quot;&gt;
&lt;cfelse&gt;
   &lt;!--- Add the employee ---&gt;
   &lt;cfquery name=&quot;AddEmployee&quot; datasource=&quot;cfdocexamples&quot;&gt;
      INSERT INTO Employees
         (FirstName, LastName, Email, Phone, Department)
      VALUES (
      &#39;#attributes.empinfo.firstname#&#39; ,
      &#39;#attributes.empinfo.lastname#&#39; ,
      &#39;#attributes.empinfo.email#&#39; ,
      &#39;#attributes.empinfo.phone#&#39; ,
      &#39;#attributes.empinfo.department#&#39; )
   &lt;/cfquery&gt;
&lt;/cfif&gt;
&lt;cfoutput&gt;
   &lt;hr&gt;Employee Add Complete
&lt;/cfoutput&gt;
</pre><h4><a name="wp1191211"></a>Reviewing the code</h4>
<p>The following table describes the code:</p>
<table border="0" cellpadding="0" cellspacing="0">
  <tr>
    <th>
Code
    </th>
    <th>
Description
    </th>
  </tr>
  <tr>
    <td>
<pre>&lt;cfif StructIsEmpty(Attributes.empinfo)&gt;
&#160;&#160;&lt;cfoutput&gt;<br />   Error. No employee data was passed.<br />&#160;&#160;&lt;/cfoutput&gt;
&#160;&#160;&lt;cfexit method=&quot;ExitTag&quot;&gt;
</pre>    </td>
    <td>
<p>If the custom tag was called without an <code>empinfo</code> attribute, display an error message and exit the tag.</p>
    </td>
  </tr>
  <tr bgcolor="#F8F8F8">
    <td>
<pre>&lt;cfelse&gt;
&#160;&#160;&lt;cfquery name=&quot;AddEmployee&quot; datasource=
   &#160;&#160;&quot;cfdocexamples&quot;&gt;
   INSERT INTO Employees
   &#160;&#160;(FirstName, LastName, Email, Phone,<br />      Department)
   VALUES (
   &#160;&#160;&#39;#attributes.empinfo.firstname#&#39; ,
   &#160;&#160;&#39;#attributes.empinfo.lastname#&#39; ,
   &#160;&#160;&#39;#attributes.empinfo.email#&#39; ,
   &#160;&#160;&#39;#attributes.empinfo.phone#&#39; ,
   &#160;&#160;&#39;#attributes.empinfo.department#&#39; )
   &lt;/cfquery&gt;
&lt;/cfif&gt;
</pre>    </td>
    <td>
<p>Add the employee data passed in the empinfo structure to the Employees table of the cfdocexamples database. </p>
<p>Use direct references to the structure entries, not <a href="00000638.htm#137488"><code>StructFind</code></a> functions.</p>
<p>If the database does not support automatic generation of the Emp_ID key, you must add an Emp_ID entry to the form and add it to the query.</p>
    </td>
  </tr>
  <tr>
    <td>
<pre>&lt;cfoutput&gt;
   &lt;hr&gt;Employee Add Complete
&lt;/cfoutput&gt;
</pre>    </td>
    <td>
<p>Display a completion message. This code does not have to be inside the <code>cfelse</code> block because the <a href="00000244.htm#1098252"><code>cfexit</code></a> tag prevents it from being run if the empinfo structure is empty.</p>
    </td>
  </tr>
</table>



<hr />
<p align="right"><p align="right"><a href="00000965.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00000967.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00000966.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



