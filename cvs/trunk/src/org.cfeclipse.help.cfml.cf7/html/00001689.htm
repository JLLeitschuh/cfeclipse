<!DOCTYPE HTML PUBLIC "-//W3C//DTD HTML 4.0 Transitional//EN">
<html>
<head>
   <meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
   <meta http-equiv="Content-Style-Type" content="text/css">
   <script src="pages.js" type="text/javascript" language="Javascript1.2" charset="UTF-8"></script>
   <title>GatewayHelper class</title>
</head>
<body>
<p align="right"><p align="right"><a href="00001688.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001690.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<hr />
<h1>GatewayHelper class</h1>
<p>ColdFusion&#160;MX includes a coldfusion.eventgateway.GatewayHelper Java marker interface. You implement this interface to define a class that provides gateway-specific utility methods to the ColdFusion application or listener CFC. For example, an instant messaging event gateway might use a helper class to provide buddy list management methods to the application. </p>
<p>The Gateway class must implement a <code>getHelper</code> method that returns the helper class or null (if the gateway does not need such a class). </p>
<p>ColdFusion applications call the <code>GetGatewayHelper</code> CFML function, which invokes gateway's the <code>getHelper</code> method to get an instance of the helper class. The application can then call helper class methods using ColdFusion object dot notation.</p>
<p>The following code defines the SocketHelper class, the gateway helper for the SocketGateway class. It has an empty constructor and two public methods: one returns the socket IDs; the other closes a specified socket. These classes let an application monitor and end session connections.</p>
<pre>public class SocketHelper implements GatewayHelper {
   public SocketHelper() {
   }
   public coldfusion.runtime.Array getSocketIDs () {
      coldfusion.runtime.Array a = new coldfusion.runtime.Array();
      Enumeration e = socketRegistry.elements();
      while (e.hasMoreElements()) {
         a.add(((SocketServerThread)e.nextElement()).getName());
       }
       return a;
    }
   public boolean killSocket (String socketid) {
      try
      {
         ((SocketServerThread)socketRegistry.get(socketid)).socket.close();
         ((SocketServerThread)socketRegistry.get(socketid)).socket = null;
         socketRegistry.remove(socketid);
         return true;
      }
      catch (IOException e) {
         return false;
      }
   }
}
</pre>

<hr />
<p align="right"><p align="right"><a href="00001688.htm"><img src="images/previous.gif" width="9" height="14" border="0" alt="Previous"></a>&nbsp;&nbsp;<a href="00001690.htm"><img src="images/next.gif" width="9" height="14" border="0" alt="Next"></a>
</p></p>
<p><a href="http://livedocs.macromedia.com/coldfusion/7/htmldocs/00001689.htm" target="mm_window">View comments in LiveDocs</a></p>
 </body>
</html>



